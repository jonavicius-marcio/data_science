2023-05-30 17:45:15,816:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 17:45:15,816:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 17:45:15,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 17:45:15,817:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 17:45:19,833:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 19:33:27,399:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 19:33:27,399:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 19:33:27,399:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 19:33:27,399:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-30 19:33:28,626:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-30 19:34:06,068:INFO:PyCaret RegressionExperiment
2023-05-30 19:34:06,068:INFO:Logging name: regressao01
2023-05-30 19:34:06,068:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-30 19:34:06,068:INFO:version 3.0.0
2023-05-30 19:34:06,068:INFO:Initializing setup()
2023-05-30 19:34:06,068:INFO:self.USI: 2637
2023-05-30 19:34:06,068:INFO:self._variable_keys: {'idx', 'gpu_param', 'target_param', 'transform_target_param', 'n_jobs_param', 'exp_name_log', 'fold_shuffle_param', 'data', 'memory', 'X_train', 'fold_groups_param', 'X', 'USI', 'X_test', 'logging_param', '_ml_usecase', 'html_param', 'log_plots_param', 'gpu_n_jobs_param', 'y_test', 'pipeline', 'seed', 'fold_generator', '_available_plots', 'y_train', 'exp_id', 'y'}
2023-05-30 19:34:06,068:INFO:Checking environment
2023-05-30 19:34:06,068:INFO:python_version: 3.9.13
2023-05-30 19:34:06,068:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-30 19:34:06,069:INFO:machine: AMD64
2023-05-30 19:34:06,069:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-30 19:34:06,069:INFO:Memory: svmem(total=33942257664, available=16827875328, percent=50.4, used=17114382336, free=16827875328)
2023-05-30 19:34:06,069:INFO:Physical Core: 6
2023-05-30 19:34:06,069:INFO:Logical Core: 12
2023-05-30 19:34:06,069:INFO:Checking libraries
2023-05-30 19:34:06,069:INFO:System:
2023-05-30 19:34:06,069:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-30 19:34:06,069:INFO:executable: C:\Users\Marcio Rodrigues\anaconda3\python.exe
2023-05-30 19:34:06,069:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-30 19:34:06,069:INFO:PyCaret required dependencies:
2023-05-30 19:34:06,069:INFO:                 pip: 23.1.2
2023-05-30 19:34:06,069:INFO:          setuptools: 63.4.1
2023-05-30 19:34:06,069:INFO:             pycaret: 3.0.0
2023-05-30 19:34:06,069:INFO:             IPython: 7.31.1
2023-05-30 19:34:06,069:INFO:          ipywidgets: 7.6.5
2023-05-30 19:34:06,069:INFO:                tqdm: 4.64.1
2023-05-30 19:34:06,069:INFO:               numpy: 1.21.5
2023-05-30 19:34:06,069:INFO:              pandas: 1.4.4
2023-05-30 19:34:06,069:INFO:              jinja2: 2.11.3
2023-05-30 19:34:06,069:INFO:               scipy: 1.9.1
2023-05-30 19:34:06,069:INFO:              joblib: 1.2.0
2023-05-30 19:34:06,069:INFO:             sklearn: 1.0.2
2023-05-30 19:34:06,069:INFO:                pyod: 1.0.9
2023-05-30 19:34:06,069:INFO:            imblearn: 0.10.1
2023-05-30 19:34:06,069:INFO:   category_encoders: 2.6.0
2023-05-30 19:34:06,069:INFO:            lightgbm: 3.3.5
2023-05-30 19:34:06,069:INFO:               numba: 0.55.1
2023-05-30 19:34:06,069:INFO:            requests: 2.28.1
2023-05-30 19:34:06,069:INFO:          matplotlib: 3.5.2
2023-05-30 19:34:06,069:INFO:          scikitplot: 0.3.7
2023-05-30 19:34:06,069:INFO:         yellowbrick: 1.5
2023-05-30 19:34:06,069:INFO:              plotly: 5.9.0
2023-05-30 19:34:06,069:INFO:             kaleido: 0.2.1
2023-05-30 19:34:06,069:INFO:         statsmodels: 0.13.2
2023-05-30 19:34:06,069:INFO:              sktime: 0.17.2
2023-05-30 19:34:06,069:INFO:               tbats: 1.1.3
2023-05-30 19:34:06,069:INFO:            pmdarima: 2.0.3
2023-05-30 19:34:06,069:INFO:              psutil: 5.9.0
2023-05-30 19:34:06,071:INFO:PyCaret optional dependencies:
2023-05-30 19:34:06,092:INFO:                shap: 0.41.0
2023-05-30 19:34:06,092:INFO:           interpret: Not installed
2023-05-30 19:34:06,092:INFO:                umap: Not installed
2023-05-30 19:34:06,092:INFO:    pandas_profiling: Not installed
2023-05-30 19:34:06,092:INFO:  explainerdashboard: Not installed
2023-05-30 19:34:06,092:INFO:             autoviz: Not installed
2023-05-30 19:34:06,092:INFO:           fairlearn: Not installed
2023-05-30 19:34:06,092:INFO:             xgboost: Not installed
2023-05-30 19:34:06,092:INFO:            catboost: Not installed
2023-05-30 19:34:06,092:INFO:              kmodes: Not installed
2023-05-30 19:34:06,092:INFO:             mlxtend: Not installed
2023-05-30 19:34:06,092:INFO:       statsforecast: Not installed
2023-05-30 19:34:06,092:INFO:        tune_sklearn: Not installed
2023-05-30 19:34:06,092:INFO:                 ray: Not installed
2023-05-30 19:34:06,092:INFO:            hyperopt: Not installed
2023-05-30 19:34:06,092:INFO:              optuna: Not installed
2023-05-30 19:34:06,092:INFO:               skopt: Not installed
2023-05-30 19:34:06,093:INFO:              mlflow: Not installed
2023-05-30 19:34:06,093:INFO:              gradio: Not installed
2023-05-30 19:34:06,093:INFO:             fastapi: Not installed
2023-05-30 19:34:06,093:INFO:             uvicorn: Not installed
2023-05-30 19:34:06,093:INFO:              m2cgen: Not installed
2023-05-30 19:34:06,093:INFO:           evidently: Not installed
2023-05-30 19:34:06,093:INFO:               fugue: Not installed
2023-05-30 19:34:06,093:INFO:           streamlit: Not installed
2023-05-30 19:34:06,093:INFO:             prophet: Not installed
2023-05-30 19:34:06,093:INFO:None
2023-05-30 19:34:06,093:INFO:Set up data.
2023-05-30 19:34:06,103:INFO:Set up train/test split.
2023-05-30 19:34:06,113:INFO:Set up index.
2023-05-30 19:34:06,113:INFO:Set up folding strategy.
2023-05-30 19:34:06,113:INFO:Assigning column types.
2023-05-30 19:34:06,115:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-30 19:34:06,116:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,120:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,124:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,180:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,224:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:06,328:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:06,328:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,332:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,336:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,392:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,434:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,436:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:06,436:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:06,436:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-30 19:34:06,443:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,451:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,503:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,543:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:06,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:06,549:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,553:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,619:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,662:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,662:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:06,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:06,663:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-30 19:34:06,672:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,725:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,766:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,766:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:06,766:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:06,772:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,830:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,870:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:06,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:06,872:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-30 19:34:06,935:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,980:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:34:06,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:06,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:07,048:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:34:07,089:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:34:07,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:07,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:07,089:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-30 19:34:07,156:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:34:07,205:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:07,206:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:07,268:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:34:07,299:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:07,299:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:07,299:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-30 19:34:07,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:07,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:07,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:07,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:07,529:INFO:Preparing preprocessing pipeline...
2023-05-30 19:34:07,529:INFO:Set up target transformation.
2023-05-30 19:34:07,529:INFO:Set up simple imputation.
2023-05-30 19:34:07,534:INFO:Set up encoding of categorical features.
2023-05-30 19:34:07,534:INFO:Set up column transformation.
2023-05-30 19:34:07,534:INFO:Set up feature normalization.
2023-05-30 19:34:07,914:INFO:Finished creating preprocessing pipeline.
2023-05-30 19:34:07,916:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['score', 'qty_stores'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tran...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['segment', 'sub_segment'],
                                    transformer=OneHotEncoder(cols=['segment',
                                                                    'sub_segment'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2023-05-30 19:34:07,916:INFO:Creating final display dataframe.
2023-05-30 19:34:08,254:INFO:Setup _display_container:                     Description         Value
0                    Session id           123
1                        Target  sells_volume
2                   Target type    Regression
3           Original data shape    (29692, 5)
4        Transformed data shape   (29692, 13)
5   Transformed train set shape   (20784, 13)
6    Transformed test set shape    (8908, 13)
7              Numeric features             2
8          Categorical features             2
9                    Preprocess          True
10              Imputation type        simple
11           Numeric imputation          mean
12       Categorical imputation          mode
13     Maximum one-hot encoding            25
14              Encoding method          None
15               Transformation          True
16        Transformation method   yeo-johnson
17                    Normalize          True
18             Normalize method        zscore
19             Transform target          True
20      Transform target method   yeo-johnson
21               Fold Generator         KFold
22                  Fold Number            10
23                     CPU Jobs            -1
24                      Use GPU         False
25               Log Experiment         False
26              Experiment Name   regressao01
27                          USI          2637
2023-05-30 19:34:08,383:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:08,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:08,487:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:08,487:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:34:08,488:INFO:setup() successfully completed in 4.26s...............
2023-05-30 19:34:08,517:INFO:Initializing compare_models()
2023-05-30 19:34:08,517:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, include=None, fold=None, round=4, cross_validation=True, sort=MAPE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAPE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-05-30 19:34:08,518:INFO:Checking exceptions
2023-05-30 19:34:08,523:INFO:Preparing display monitor
2023-05-30 19:34:08,570:INFO:Initializing Linear Regression
2023-05-30 19:34:08,570:INFO:Total runtime is 0.0 minutes
2023-05-30 19:34:08,575:INFO:SubProcess create_model() called ==================================
2023-05-30 19:34:08,576:INFO:Initializing create_model()
2023-05-30 19:34:08,576:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:34:08,577:INFO:Checking exceptions
2023-05-30 19:34:08,577:INFO:Importing libraries
2023-05-30 19:34:08,578:INFO:Copying training dataset
2023-05-30 19:34:08,586:INFO:Defining folds
2023-05-30 19:34:08,586:INFO:Declaring metric variables
2023-05-30 19:34:08,591:INFO:Importing untrained model
2023-05-30 19:34:08,597:INFO:Linear Regression Imported successfully
2023-05-30 19:34:08,610:INFO:Starting cross validation
2023-05-30 19:34:08,623:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:34:34,853:INFO:Calculating mean and std
2023-05-30 19:34:34,855:INFO:Creating metrics dataframe
2023-05-30 19:34:36,336:INFO:Uploading results into container
2023-05-30 19:34:36,337:INFO:Uploading model into container now
2023-05-30 19:34:36,338:INFO:_master_model_container: 1
2023-05-30 19:34:36,338:INFO:_display_container: 2
2023-05-30 19:34:36,338:INFO:LinearRegression(n_jobs=-1)
2023-05-30 19:34:36,338:INFO:create_model() successfully completed......................................
2023-05-30 19:34:36,438:INFO:SubProcess create_model() end ==================================
2023-05-30 19:34:36,438:INFO:Creating metrics dataframe
2023-05-30 19:34:36,454:INFO:Initializing Lasso Regression
2023-05-30 19:34:36,455:INFO:Total runtime is 0.46474053859710696 minutes
2023-05-30 19:34:36,461:INFO:SubProcess create_model() called ==================================
2023-05-30 19:34:36,461:INFO:Initializing create_model()
2023-05-30 19:34:36,461:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:34:36,461:INFO:Checking exceptions
2023-05-30 19:34:36,462:INFO:Importing libraries
2023-05-30 19:34:36,462:INFO:Copying training dataset
2023-05-30 19:34:36,472:INFO:Defining folds
2023-05-30 19:34:36,473:INFO:Declaring metric variables
2023-05-30 19:34:36,481:INFO:Importing untrained model
2023-05-30 19:34:36,493:INFO:Lasso Regression Imported successfully
2023-05-30 19:34:36,506:INFO:Starting cross validation
2023-05-30 19:34:36,506:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:34:49,785:INFO:Calculating mean and std
2023-05-30 19:34:49,787:INFO:Creating metrics dataframe
2023-05-30 19:34:51,164:INFO:Uploading results into container
2023-05-30 19:34:51,165:INFO:Uploading model into container now
2023-05-30 19:34:51,166:INFO:_master_model_container: 2
2023-05-30 19:34:51,166:INFO:_display_container: 2
2023-05-30 19:34:51,166:INFO:Lasso(random_state=123)
2023-05-30 19:34:51,167:INFO:create_model() successfully completed......................................
2023-05-30 19:34:51,243:INFO:SubProcess create_model() end ==================================
2023-05-30 19:34:51,243:INFO:Creating metrics dataframe
2023-05-30 19:34:51,258:INFO:Initializing Ridge Regression
2023-05-30 19:34:51,259:INFO:Total runtime is 0.711470917860667 minutes
2023-05-30 19:34:51,264:INFO:SubProcess create_model() called ==================================
2023-05-30 19:34:51,265:INFO:Initializing create_model()
2023-05-30 19:34:51,265:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:34:51,266:INFO:Checking exceptions
2023-05-30 19:34:51,266:INFO:Importing libraries
2023-05-30 19:34:51,266:INFO:Copying training dataset
2023-05-30 19:34:51,273:INFO:Defining folds
2023-05-30 19:34:51,274:INFO:Declaring metric variables
2023-05-30 19:34:51,281:INFO:Importing untrained model
2023-05-30 19:34:51,287:INFO:Ridge Regression Imported successfully
2023-05-30 19:34:51,297:INFO:Starting cross validation
2023-05-30 19:34:51,298:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:35:03,650:INFO:Calculating mean and std
2023-05-30 19:35:03,650:INFO:Creating metrics dataframe
2023-05-30 19:35:05,067:INFO:Uploading results into container
2023-05-30 19:35:05,067:INFO:Uploading model into container now
2023-05-30 19:35:05,069:INFO:_master_model_container: 3
2023-05-30 19:35:05,069:INFO:_display_container: 2
2023-05-30 19:35:05,069:INFO:Ridge(random_state=123)
2023-05-30 19:35:05,070:INFO:create_model() successfully completed......................................
2023-05-30 19:35:05,147:INFO:SubProcess create_model() end ==================================
2023-05-30 19:35:05,147:INFO:Creating metrics dataframe
2023-05-30 19:35:05,160:INFO:Initializing Elastic Net
2023-05-30 19:35:05,161:INFO:Total runtime is 0.9431801080703736 minutes
2023-05-30 19:35:05,168:INFO:SubProcess create_model() called ==================================
2023-05-30 19:35:05,168:INFO:Initializing create_model()
2023-05-30 19:35:05,169:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:35:05,169:INFO:Checking exceptions
2023-05-30 19:35:05,169:INFO:Importing libraries
2023-05-30 19:35:05,169:INFO:Copying training dataset
2023-05-30 19:35:05,177:INFO:Defining folds
2023-05-30 19:35:05,177:INFO:Declaring metric variables
2023-05-30 19:35:05,185:INFO:Importing untrained model
2023-05-30 19:35:05,192:INFO:Elastic Net Imported successfully
2023-05-30 19:35:05,205:INFO:Starting cross validation
2023-05-30 19:35:05,206:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:35:17,517:INFO:Calculating mean and std
2023-05-30 19:35:17,517:INFO:Creating metrics dataframe
2023-05-30 19:35:18,938:INFO:Uploading results into container
2023-05-30 19:35:18,940:INFO:Uploading model into container now
2023-05-30 19:35:18,940:INFO:_master_model_container: 4
2023-05-30 19:35:18,941:INFO:_display_container: 2
2023-05-30 19:35:18,941:INFO:ElasticNet(random_state=123)
2023-05-30 19:35:18,941:INFO:create_model() successfully completed......................................
2023-05-30 19:35:19,019:INFO:SubProcess create_model() end ==================================
2023-05-30 19:35:19,019:INFO:Creating metrics dataframe
2023-05-30 19:35:19,033:INFO:Initializing Least Angle Regression
2023-05-30 19:35:19,033:INFO:Total runtime is 1.1743774930636088 minutes
2023-05-30 19:35:19,033:INFO:SubProcess create_model() called ==================================
2023-05-30 19:35:19,041:INFO:Initializing create_model()
2023-05-30 19:35:19,041:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:35:19,041:INFO:Checking exceptions
2023-05-30 19:35:19,042:INFO:Importing libraries
2023-05-30 19:35:19,042:INFO:Copying training dataset
2023-05-30 19:35:19,052:INFO:Defining folds
2023-05-30 19:35:19,053:INFO:Declaring metric variables
2023-05-30 19:35:19,060:INFO:Importing untrained model
2023-05-30 19:35:19,069:INFO:Least Angle Regression Imported successfully
2023-05-30 19:35:19,085:INFO:Starting cross validation
2023-05-30 19:35:19,087:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:35:19,491:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:19,526:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=1.468e-04, with an active set of 7 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,527:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=7.741e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,528:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=5.130e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,528:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=4.246e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 6.664e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,529:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=3.804e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 6.664e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,536:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:19,555:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=8.637e-05, with an active set of 7 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,556:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=3.462e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 3.161e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,556:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=6.032e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,556:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.852e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,557:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.852e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 9.940e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,560:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:19,590:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:19,590:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:19,605:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=1.665e-04, with an active set of 7 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,605:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=6.673e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 4.470e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,605:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.153e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,605:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=3.501e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,605:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=3.501e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 5.373e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,626:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:19,631:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:19,640:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=8.286e-05, with an active set of 7 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,641:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=3.313e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.581e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,641:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:19,641:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.433e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,645:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:19,645:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=1.059e-04, with an active set of 7 regressors, and the smallest cholesky pivot element being 1.825e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,646:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=4.233e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 8.560e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,647:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=6.981e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 1.825e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,647:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=2.290e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 1.825e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,647:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=7.801e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 4.470e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,648:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=7.164e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,648:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=7.159e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,648:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=1.268e-06, with an active set of 9 regressors, and the smallest cholesky pivot element being 3.942e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,648:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=1.149e-06, with an active set of 9 regressors, and the smallest cholesky pivot element being 3.942e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,649:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=1.140e-06, with an active set of 9 regressors, and the smallest cholesky pivot element being 1.825e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,653:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=4.702e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,653:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=3.163e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 6.495e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,654:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.425e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 6.495e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,654:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=7.159e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,654:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=7.086e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,658:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=1.725e-04, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,659:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=6.910e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 8.162e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,659:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.188e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,659:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=3.755e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,660:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=1.920e-06, with an active set of 9 regressors, and the smallest cholesky pivot element being 4.712e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,660:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=1.878e-06, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:19,661:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=1.877e-06, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:35:31,526:INFO:Calculating mean and std
2023-05-30 19:35:31,528:INFO:Creating metrics dataframe
2023-05-30 19:35:32,958:INFO:Uploading results into container
2023-05-30 19:35:32,958:INFO:Uploading model into container now
2023-05-30 19:35:32,960:INFO:_master_model_container: 5
2023-05-30 19:35:32,960:INFO:_display_container: 2
2023-05-30 19:35:32,960:INFO:Lars(random_state=123)
2023-05-30 19:35:32,960:INFO:create_model() successfully completed......................................
2023-05-30 19:35:33,036:INFO:SubProcess create_model() end ==================================
2023-05-30 19:35:33,036:INFO:Creating metrics dataframe
2023-05-30 19:35:33,053:INFO:Initializing Lasso Least Angle Regression
2023-05-30 19:35:33,053:INFO:Total runtime is 1.4080409407615662 minutes
2023-05-30 19:35:33,059:INFO:SubProcess create_model() called ==================================
2023-05-30 19:35:33,059:INFO:Initializing create_model()
2023-05-30 19:35:33,059:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:35:33,059:INFO:Checking exceptions
2023-05-30 19:35:33,059:INFO:Importing libraries
2023-05-30 19:35:33,060:INFO:Copying training dataset
2023-05-30 19:35:33,068:INFO:Defining folds
2023-05-30 19:35:33,069:INFO:Declaring metric variables
2023-05-30 19:35:33,076:INFO:Importing untrained model
2023-05-30 19:35:33,084:INFO:Lasso Least Angle Regression Imported successfully
2023-05-30 19:35:33,098:INFO:Starting cross validation
2023-05-30 19:35:33,100:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:35:33,505:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:35:33,531:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:35:33,550:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:35:33,563:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:35:33,585:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:35:33,592:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:35:33,592:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:35:33,610:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:35:33,625:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:35:33,635:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:35:45,615:INFO:Calculating mean and std
2023-05-30 19:35:45,617:INFO:Creating metrics dataframe
2023-05-30 19:35:47,039:INFO:Uploading results into container
2023-05-30 19:35:47,039:INFO:Uploading model into container now
2023-05-30 19:35:47,039:INFO:_master_model_container: 6
2023-05-30 19:35:47,039:INFO:_display_container: 2
2023-05-30 19:35:47,039:INFO:LassoLars(random_state=123)
2023-05-30 19:35:47,039:INFO:create_model() successfully completed......................................
2023-05-30 19:35:47,132:INFO:SubProcess create_model() end ==================================
2023-05-30 19:35:47,132:INFO:Creating metrics dataframe
2023-05-30 19:35:47,146:INFO:Initializing Orthogonal Matching Pursuit
2023-05-30 19:35:47,146:INFO:Total runtime is 1.6429316878318787 minutes
2023-05-30 19:35:47,152:INFO:SubProcess create_model() called ==================================
2023-05-30 19:35:47,152:INFO:Initializing create_model()
2023-05-30 19:35:47,152:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:35:47,152:INFO:Checking exceptions
2023-05-30 19:35:47,152:INFO:Importing libraries
2023-05-30 19:35:47,152:INFO:Copying training dataset
2023-05-30 19:35:47,152:INFO:Defining folds
2023-05-30 19:35:47,152:INFO:Declaring metric variables
2023-05-30 19:35:47,173:INFO:Importing untrained model
2023-05-30 19:35:47,180:INFO:Orthogonal Matching Pursuit Imported successfully
2023-05-30 19:35:47,194:INFO:Starting cross validation
2023-05-30 19:35:47,195:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:35:47,611:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:47,626:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:47,633:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:47,659:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:47,669:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:47,674:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:47,701:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:47,701:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:47,722:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:47,729:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:35:59,706:INFO:Calculating mean and std
2023-05-30 19:35:59,708:INFO:Creating metrics dataframe
2023-05-30 19:36:01,139:INFO:Uploading results into container
2023-05-30 19:36:01,139:INFO:Uploading model into container now
2023-05-30 19:36:01,139:INFO:_master_model_container: 7
2023-05-30 19:36:01,154:INFO:_display_container: 2
2023-05-30 19:36:01,155:INFO:OrthogonalMatchingPursuit()
2023-05-30 19:36:01,155:INFO:create_model() successfully completed......................................
2023-05-30 19:36:01,233:INFO:SubProcess create_model() end ==================================
2023-05-30 19:36:01,233:INFO:Creating metrics dataframe
2023-05-30 19:36:01,248:INFO:Initializing Bayesian Ridge
2023-05-30 19:36:01,249:INFO:Total runtime is 1.8779649058977763 minutes
2023-05-30 19:36:01,257:INFO:SubProcess create_model() called ==================================
2023-05-30 19:36:01,257:INFO:Initializing create_model()
2023-05-30 19:36:01,257:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:36:01,257:INFO:Checking exceptions
2023-05-30 19:36:01,258:INFO:Importing libraries
2023-05-30 19:36:01,258:INFO:Copying training dataset
2023-05-30 19:36:01,268:INFO:Defining folds
2023-05-30 19:36:01,268:INFO:Declaring metric variables
2023-05-30 19:36:01,276:INFO:Importing untrained model
2023-05-30 19:36:01,284:INFO:Bayesian Ridge Imported successfully
2023-05-30 19:36:01,299:INFO:Starting cross validation
2023-05-30 19:36:01,302:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:36:13,900:INFO:Calculating mean and std
2023-05-30 19:36:13,901:INFO:Creating metrics dataframe
2023-05-30 19:36:15,359:INFO:Uploading results into container
2023-05-30 19:36:15,360:INFO:Uploading model into container now
2023-05-30 19:36:15,361:INFO:_master_model_container: 8
2023-05-30 19:36:15,361:INFO:_display_container: 2
2023-05-30 19:36:15,361:INFO:BayesianRidge()
2023-05-30 19:36:15,362:INFO:create_model() successfully completed......................................
2023-05-30 19:36:15,438:INFO:SubProcess create_model() end ==================================
2023-05-30 19:36:15,438:INFO:Creating metrics dataframe
2023-05-30 19:36:15,454:INFO:Initializing Passive Aggressive Regressor
2023-05-30 19:36:15,454:INFO:Total runtime is 2.114728546142578 minutes
2023-05-30 19:36:15,460:INFO:SubProcess create_model() called ==================================
2023-05-30 19:36:15,460:INFO:Initializing create_model()
2023-05-30 19:36:15,460:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:36:15,461:INFO:Checking exceptions
2023-05-30 19:36:15,461:INFO:Importing libraries
2023-05-30 19:36:15,461:INFO:Copying training dataset
2023-05-30 19:36:15,471:INFO:Defining folds
2023-05-30 19:36:15,471:INFO:Declaring metric variables
2023-05-30 19:36:15,479:INFO:Importing untrained model
2023-05-30 19:36:15,486:INFO:Passive Aggressive Regressor Imported successfully
2023-05-30 19:36:15,510:INFO:Starting cross validation
2023-05-30 19:36:15,512:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:36:28,136:INFO:Calculating mean and std
2023-05-30 19:36:28,136:INFO:Creating metrics dataframe
2023-05-30 19:36:29,623:INFO:Uploading results into container
2023-05-30 19:36:29,623:INFO:Uploading model into container now
2023-05-30 19:36:29,624:INFO:_master_model_container: 9
2023-05-30 19:36:29,624:INFO:_display_container: 2
2023-05-30 19:36:29,624:INFO:PassiveAggressiveRegressor(random_state=123)
2023-05-30 19:36:29,624:INFO:create_model() successfully completed......................................
2023-05-30 19:36:29,701:INFO:SubProcess create_model() end ==================================
2023-05-30 19:36:29,701:INFO:Creating metrics dataframe
2023-05-30 19:36:29,718:INFO:Initializing Huber Regressor
2023-05-30 19:36:29,718:INFO:Total runtime is 2.3524537086486816 minutes
2023-05-30 19:36:29,721:INFO:SubProcess create_model() called ==================================
2023-05-30 19:36:29,721:INFO:Initializing create_model()
2023-05-30 19:36:29,721:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:36:29,721:INFO:Checking exceptions
2023-05-30 19:36:29,721:INFO:Importing libraries
2023-05-30 19:36:29,721:INFO:Copying training dataset
2023-05-30 19:36:29,735:INFO:Defining folds
2023-05-30 19:36:29,736:INFO:Declaring metric variables
2023-05-30 19:36:29,743:INFO:Importing untrained model
2023-05-30 19:36:29,751:INFO:Huber Regressor Imported successfully
2023-05-30 19:36:29,766:INFO:Starting cross validation
2023-05-30 19:36:29,768:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:36:43,052:INFO:Calculating mean and std
2023-05-30 19:36:43,055:INFO:Creating metrics dataframe
2023-05-30 19:36:44,559:INFO:Uploading results into container
2023-05-30 19:36:44,560:INFO:Uploading model into container now
2023-05-30 19:36:44,561:INFO:_master_model_container: 10
2023-05-30 19:36:44,561:INFO:_display_container: 2
2023-05-30 19:36:44,561:INFO:HuberRegressor()
2023-05-30 19:36:44,561:INFO:create_model() successfully completed......................................
2023-05-30 19:36:44,638:INFO:SubProcess create_model() end ==================================
2023-05-30 19:36:44,638:INFO:Creating metrics dataframe
2023-05-30 19:36:44,654:INFO:Initializing K Neighbors Regressor
2023-05-30 19:36:44,654:INFO:Total runtime is 2.6013977607091268 minutes
2023-05-30 19:36:44,662:INFO:SubProcess create_model() called ==================================
2023-05-30 19:36:44,663:INFO:Initializing create_model()
2023-05-30 19:36:44,663:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:36:44,663:INFO:Checking exceptions
2023-05-30 19:36:44,664:INFO:Importing libraries
2023-05-30 19:36:44,664:INFO:Copying training dataset
2023-05-30 19:36:44,674:INFO:Defining folds
2023-05-30 19:36:44,674:INFO:Declaring metric variables
2023-05-30 19:36:44,685:INFO:Importing untrained model
2023-05-30 19:36:44,692:INFO:K Neighbors Regressor Imported successfully
2023-05-30 19:36:44,708:INFO:Starting cross validation
2023-05-30 19:36:44,710:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:36:58,168:INFO:Calculating mean and std
2023-05-30 19:36:58,170:INFO:Creating metrics dataframe
2023-05-30 19:36:59,636:INFO:Uploading results into container
2023-05-30 19:36:59,636:INFO:Uploading model into container now
2023-05-30 19:36:59,637:INFO:_master_model_container: 11
2023-05-30 19:36:59,637:INFO:_display_container: 2
2023-05-30 19:36:59,637:INFO:KNeighborsRegressor(n_jobs=-1)
2023-05-30 19:36:59,637:INFO:create_model() successfully completed......................................
2023-05-30 19:36:59,711:INFO:SubProcess create_model() end ==================================
2023-05-30 19:36:59,711:INFO:Creating metrics dataframe
2023-05-30 19:36:59,730:INFO:Initializing Decision Tree Regressor
2023-05-30 19:36:59,731:INFO:Total runtime is 2.8526694933573404 minutes
2023-05-30 19:36:59,737:INFO:SubProcess create_model() called ==================================
2023-05-30 19:36:59,738:INFO:Initializing create_model()
2023-05-30 19:36:59,738:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:36:59,738:INFO:Checking exceptions
2023-05-30 19:36:59,739:INFO:Importing libraries
2023-05-30 19:36:59,739:INFO:Copying training dataset
2023-05-30 19:36:59,746:INFO:Defining folds
2023-05-30 19:36:59,747:INFO:Declaring metric variables
2023-05-30 19:36:59,752:INFO:Importing untrained model
2023-05-30 19:36:59,757:INFO:Decision Tree Regressor Imported successfully
2023-05-30 19:36:59,771:INFO:Starting cross validation
2023-05-30 19:36:59,773:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:37:12,608:INFO:Calculating mean and std
2023-05-30 19:37:12,610:INFO:Creating metrics dataframe
2023-05-30 19:37:14,124:INFO:Uploading results into container
2023-05-30 19:37:14,125:INFO:Uploading model into container now
2023-05-30 19:37:14,126:INFO:_master_model_container: 12
2023-05-30 19:37:14,126:INFO:_display_container: 2
2023-05-30 19:37:14,126:INFO:DecisionTreeRegressor(random_state=123)
2023-05-30 19:37:14,126:INFO:create_model() successfully completed......................................
2023-05-30 19:37:14,203:INFO:SubProcess create_model() end ==================================
2023-05-30 19:37:14,204:INFO:Creating metrics dataframe
2023-05-30 19:37:14,222:INFO:Initializing Random Forest Regressor
2023-05-30 19:37:14,222:INFO:Total runtime is 3.0941885352134704 minutes
2023-05-30 19:37:14,227:INFO:SubProcess create_model() called ==================================
2023-05-30 19:37:14,227:INFO:Initializing create_model()
2023-05-30 19:37:14,227:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:37:14,227:INFO:Checking exceptions
2023-05-30 19:37:14,227:INFO:Importing libraries
2023-05-30 19:37:14,228:INFO:Copying training dataset
2023-05-30 19:37:14,236:INFO:Defining folds
2023-05-30 19:37:14,237:INFO:Declaring metric variables
2023-05-30 19:37:14,243:INFO:Importing untrained model
2023-05-30 19:37:14,249:INFO:Random Forest Regressor Imported successfully
2023-05-30 19:37:14,261:INFO:Starting cross validation
2023-05-30 19:37:14,262:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:37:19,227:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.18s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-30 19:37:19,727:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.07s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-30 19:37:19,764:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.97s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-30 19:37:33,232:INFO:Calculating mean and std
2023-05-30 19:37:33,234:INFO:Creating metrics dataframe
2023-05-30 19:37:34,718:INFO:Uploading results into container
2023-05-30 19:37:34,719:INFO:Uploading model into container now
2023-05-30 19:37:34,719:INFO:_master_model_container: 13
2023-05-30 19:37:34,719:INFO:_display_container: 2
2023-05-30 19:37:34,719:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-05-30 19:37:34,720:INFO:create_model() successfully completed......................................
2023-05-30 19:37:34,805:INFO:SubProcess create_model() end ==================================
2023-05-30 19:37:34,805:INFO:Creating metrics dataframe
2023-05-30 19:37:34,822:INFO:Initializing Extra Trees Regressor
2023-05-30 19:37:34,823:INFO:Total runtime is 3.4375462969144186 minutes
2023-05-30 19:37:34,831:INFO:SubProcess create_model() called ==================================
2023-05-30 19:37:34,832:INFO:Initializing create_model()
2023-05-30 19:37:34,832:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:37:34,833:INFO:Checking exceptions
2023-05-30 19:37:34,833:INFO:Importing libraries
2023-05-30 19:37:34,833:INFO:Copying training dataset
2023-05-30 19:37:34,844:INFO:Defining folds
2023-05-30 19:37:34,844:INFO:Declaring metric variables
2023-05-30 19:37:34,853:INFO:Importing untrained model
2023-05-30 19:37:34,862:INFO:Extra Trees Regressor Imported successfully
2023-05-30 19:37:34,882:INFO:Starting cross validation
2023-05-30 19:37:34,883:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:37:38,704:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-30 19:37:38,745:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.86s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-30 19:37:38,790:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-30 19:37:38,849:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-30 19:37:53,087:INFO:Calculating mean and std
2023-05-30 19:37:53,087:INFO:Creating metrics dataframe
2023-05-30 19:37:54,631:INFO:Uploading results into container
2023-05-30 19:37:54,632:INFO:Uploading model into container now
2023-05-30 19:37:54,633:INFO:_master_model_container: 14
2023-05-30 19:37:54,633:INFO:_display_container: 2
2023-05-30 19:37:54,634:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-05-30 19:37:54,634:INFO:create_model() successfully completed......................................
2023-05-30 19:37:54,702:INFO:SubProcess create_model() end ==================================
2023-05-30 19:37:54,702:INFO:Creating metrics dataframe
2023-05-30 19:37:54,728:INFO:Initializing AdaBoost Regressor
2023-05-30 19:37:54,729:INFO:Total runtime is 3.7693060477574667 minutes
2023-05-30 19:37:54,736:INFO:SubProcess create_model() called ==================================
2023-05-30 19:37:54,736:INFO:Initializing create_model()
2023-05-30 19:37:54,737:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:37:54,737:INFO:Checking exceptions
2023-05-30 19:37:54,737:INFO:Importing libraries
2023-05-30 19:37:54,737:INFO:Copying training dataset
2023-05-30 19:37:54,746:INFO:Defining folds
2023-05-30 19:37:54,747:INFO:Declaring metric variables
2023-05-30 19:37:54,754:INFO:Importing untrained model
2023-05-30 19:37:54,760:INFO:AdaBoost Regressor Imported successfully
2023-05-30 19:37:54,772:INFO:Starting cross validation
2023-05-30 19:37:54,774:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:38:08,547:INFO:Calculating mean and std
2023-05-30 19:38:08,549:INFO:Creating metrics dataframe
2023-05-30 19:38:10,077:INFO:Uploading results into container
2023-05-30 19:38:10,078:INFO:Uploading model into container now
2023-05-30 19:38:10,080:INFO:_master_model_container: 15
2023-05-30 19:38:10,081:INFO:_display_container: 2
2023-05-30 19:38:10,081:INFO:AdaBoostRegressor(random_state=123)
2023-05-30 19:38:10,081:INFO:create_model() successfully completed......................................
2023-05-30 19:38:10,158:INFO:SubProcess create_model() end ==================================
2023-05-30 19:38:10,158:INFO:Creating metrics dataframe
2023-05-30 19:38:10,175:INFO:Initializing Gradient Boosting Regressor
2023-05-30 19:38:10,176:INFO:Total runtime is 4.026755960782369 minutes
2023-05-30 19:38:10,181:INFO:SubProcess create_model() called ==================================
2023-05-30 19:38:10,182:INFO:Initializing create_model()
2023-05-30 19:38:10,182:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:38:10,183:INFO:Checking exceptions
2023-05-30 19:38:10,183:INFO:Importing libraries
2023-05-30 19:38:10,183:INFO:Copying training dataset
2023-05-30 19:38:10,191:INFO:Defining folds
2023-05-30 19:38:10,191:INFO:Declaring metric variables
2023-05-30 19:38:10,198:INFO:Importing untrained model
2023-05-30 19:38:10,208:INFO:Gradient Boosting Regressor Imported successfully
2023-05-30 19:38:10,219:INFO:Starting cross validation
2023-05-30 19:38:10,221:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:38:25,504:INFO:Calculating mean and std
2023-05-30 19:38:25,505:INFO:Creating metrics dataframe
2023-05-30 19:38:27,010:INFO:Uploading results into container
2023-05-30 19:38:27,011:INFO:Uploading model into container now
2023-05-30 19:38:27,011:INFO:_master_model_container: 16
2023-05-30 19:38:27,011:INFO:_display_container: 2
2023-05-30 19:38:27,011:INFO:GradientBoostingRegressor(random_state=123)
2023-05-30 19:38:27,011:INFO:create_model() successfully completed......................................
2023-05-30 19:38:27,087:INFO:SubProcess create_model() end ==================================
2023-05-30 19:38:27,088:INFO:Creating metrics dataframe
2023-05-30 19:38:27,107:INFO:Initializing Light Gradient Boosting Machine
2023-05-30 19:38:27,107:INFO:Total runtime is 4.308937700589498 minutes
2023-05-30 19:38:27,113:INFO:SubProcess create_model() called ==================================
2023-05-30 19:38:27,113:INFO:Initializing create_model()
2023-05-30 19:38:27,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:38:27,113:INFO:Checking exceptions
2023-05-30 19:38:27,114:INFO:Importing libraries
2023-05-30 19:38:27,114:INFO:Copying training dataset
2023-05-30 19:38:27,126:INFO:Defining folds
2023-05-30 19:38:27,126:INFO:Declaring metric variables
2023-05-30 19:38:27,135:INFO:Importing untrained model
2023-05-30 19:38:27,147:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-30 19:38:27,166:INFO:Starting cross validation
2023-05-30 19:38:27,167:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:38:43,933:INFO:Calculating mean and std
2023-05-30 19:38:43,935:INFO:Creating metrics dataframe
2023-05-30 19:38:45,477:INFO:Uploading results into container
2023-05-30 19:38:45,477:INFO:Uploading model into container now
2023-05-30 19:38:45,477:INFO:_master_model_container: 17
2023-05-30 19:38:45,477:INFO:_display_container: 2
2023-05-30 19:38:45,477:INFO:LGBMRegressor(random_state=123)
2023-05-30 19:38:45,477:INFO:create_model() successfully completed......................................
2023-05-30 19:38:45,559:INFO:SubProcess create_model() end ==================================
2023-05-30 19:38:45,559:INFO:Creating metrics dataframe
2023-05-30 19:38:45,577:INFO:Initializing Dummy Regressor
2023-05-30 19:38:45,577:INFO:Total runtime is 4.616780134042104 minutes
2023-05-30 19:38:45,583:INFO:SubProcess create_model() called ==================================
2023-05-30 19:38:45,584:INFO:Initializing create_model()
2023-05-30 19:38:45,584:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF41FE07F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:38:45,584:INFO:Checking exceptions
2023-05-30 19:38:45,584:INFO:Importing libraries
2023-05-30 19:38:45,585:INFO:Copying training dataset
2023-05-30 19:38:45,593:INFO:Defining folds
2023-05-30 19:38:45,593:INFO:Declaring metric variables
2023-05-30 19:38:45,598:INFO:Importing untrained model
2023-05-30 19:38:45,608:INFO:Dummy Regressor Imported successfully
2023-05-30 19:38:45,620:INFO:Starting cross validation
2023-05-30 19:38:45,622:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:38:59,007:INFO:Calculating mean and std
2023-05-30 19:38:59,009:INFO:Creating metrics dataframe
2023-05-30 19:39:00,557:INFO:Uploading results into container
2023-05-30 19:39:00,558:INFO:Uploading model into container now
2023-05-30 19:39:00,558:INFO:_master_model_container: 18
2023-05-30 19:39:00,558:INFO:_display_container: 2
2023-05-30 19:39:00,559:INFO:DummyRegressor()
2023-05-30 19:39:00,560:INFO:create_model() successfully completed......................................
2023-05-30 19:39:00,643:INFO:SubProcess create_model() end ==================================
2023-05-30 19:39:00,643:INFO:Creating metrics dataframe
2023-05-30 19:39:00,679:INFO:Initializing create_model()
2023-05-30 19:39:00,679:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF41DF5580>, estimator=AdaBoostRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:39:00,679:INFO:Checking exceptions
2023-05-30 19:39:00,681:INFO:Importing libraries
2023-05-30 19:39:00,681:INFO:Copying training dataset
2023-05-30 19:39:00,689:INFO:Defining folds
2023-05-30 19:39:00,689:INFO:Declaring metric variables
2023-05-30 19:39:00,689:INFO:Importing untrained model
2023-05-30 19:39:00,689:INFO:Declaring custom model
2023-05-30 19:39:00,690:INFO:AdaBoost Regressor Imported successfully
2023-05-30 19:39:00,691:INFO:Cross validation set to False
2023-05-30 19:39:00,691:INFO:Fitting Model
2023-05-30 19:39:02,416:INFO:AdaBoostRegressor(random_state=123)
2023-05-30 19:39:02,416:INFO:create_model() successfully completed......................................
2023-05-30 19:39:02,547:INFO:_master_model_container: 18
2023-05-30 19:39:02,547:INFO:_display_container: 2
2023-05-30 19:39:02,547:INFO:AdaBoostRegressor(random_state=123)
2023-05-30 19:39:02,548:INFO:compare_models() successfully completed......................................
2023-05-30 19:39:03,905:INFO:PyCaret RegressionExperiment
2023-05-30 19:39:03,905:INFO:Logging name: regressao01
2023-05-30 19:39:03,905:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-30 19:39:03,905:INFO:version 3.0.0
2023-05-30 19:39:03,905:INFO:Initializing setup()
2023-05-30 19:39:03,905:INFO:self.USI: 615c
2023-05-30 19:39:03,905:INFO:self._variable_keys: {'idx', 'gpu_param', 'target_param', 'transform_target_param', 'n_jobs_param', 'exp_name_log', 'fold_shuffle_param', 'data', 'memory', 'X_train', 'fold_groups_param', 'X', 'USI', 'X_test', 'logging_param', '_ml_usecase', 'html_param', 'log_plots_param', 'gpu_n_jobs_param', 'y_test', 'pipeline', 'seed', 'fold_generator', '_available_plots', 'y_train', 'exp_id', 'y'}
2023-05-30 19:39:03,905:INFO:Checking environment
2023-05-30 19:39:03,905:INFO:python_version: 3.9.13
2023-05-30 19:39:03,905:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-05-30 19:39:03,905:INFO:machine: AMD64
2023-05-30 19:39:03,905:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-30 19:39:03,905:INFO:Memory: svmem(total=33942257664, available=15518105600, percent=54.3, used=18424152064, free=15518105600)
2023-05-30 19:39:03,906:INFO:Physical Core: 6
2023-05-30 19:39:03,906:INFO:Logical Core: 12
2023-05-30 19:39:03,906:INFO:Checking libraries
2023-05-30 19:39:03,906:INFO:System:
2023-05-30 19:39:03,906:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-05-30 19:39:03,906:INFO:executable: C:\Users\Marcio Rodrigues\anaconda3\python.exe
2023-05-30 19:39:03,906:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-30 19:39:03,906:INFO:PyCaret required dependencies:
2023-05-30 19:39:03,906:INFO:                 pip: 23.1.2
2023-05-30 19:39:03,906:INFO:          setuptools: 63.4.1
2023-05-30 19:39:03,906:INFO:             pycaret: 3.0.0
2023-05-30 19:39:03,906:INFO:             IPython: 7.31.1
2023-05-30 19:39:03,906:INFO:          ipywidgets: 7.6.5
2023-05-30 19:39:03,906:INFO:                tqdm: 4.64.1
2023-05-30 19:39:03,906:INFO:               numpy: 1.21.5
2023-05-30 19:39:03,906:INFO:              pandas: 1.4.4
2023-05-30 19:39:03,906:INFO:              jinja2: 2.11.3
2023-05-30 19:39:03,906:INFO:               scipy: 1.9.1
2023-05-30 19:39:03,906:INFO:              joblib: 1.2.0
2023-05-30 19:39:03,906:INFO:             sklearn: 1.0.2
2023-05-30 19:39:03,906:INFO:                pyod: 1.0.9
2023-05-30 19:39:03,906:INFO:            imblearn: 0.10.1
2023-05-30 19:39:03,906:INFO:   category_encoders: 2.6.0
2023-05-30 19:39:03,907:INFO:            lightgbm: 3.3.5
2023-05-30 19:39:03,907:INFO:               numba: 0.55.1
2023-05-30 19:39:03,907:INFO:            requests: 2.28.1
2023-05-30 19:39:03,907:INFO:          matplotlib: 3.5.2
2023-05-30 19:39:03,907:INFO:          scikitplot: 0.3.7
2023-05-30 19:39:03,907:INFO:         yellowbrick: 1.5
2023-05-30 19:39:03,907:INFO:              plotly: 5.9.0
2023-05-30 19:39:03,907:INFO:             kaleido: 0.2.1
2023-05-30 19:39:03,907:INFO:         statsmodels: 0.13.2
2023-05-30 19:39:03,907:INFO:              sktime: 0.17.2
2023-05-30 19:39:03,907:INFO:               tbats: 1.1.3
2023-05-30 19:39:03,907:INFO:            pmdarima: 2.0.3
2023-05-30 19:39:03,907:INFO:              psutil: 5.9.0
2023-05-30 19:39:03,907:INFO:PyCaret optional dependencies:
2023-05-30 19:39:03,907:INFO:                shap: 0.41.0
2023-05-30 19:39:03,907:INFO:           interpret: Not installed
2023-05-30 19:39:03,908:INFO:                umap: Not installed
2023-05-30 19:39:03,908:INFO:    pandas_profiling: Not installed
2023-05-30 19:39:03,908:INFO:  explainerdashboard: Not installed
2023-05-30 19:39:03,908:INFO:             autoviz: Not installed
2023-05-30 19:39:03,908:INFO:           fairlearn: Not installed
2023-05-30 19:39:03,908:INFO:             xgboost: Not installed
2023-05-30 19:39:03,908:INFO:            catboost: Not installed
2023-05-30 19:39:03,908:INFO:              kmodes: Not installed
2023-05-30 19:39:03,908:INFO:             mlxtend: Not installed
2023-05-30 19:39:03,908:INFO:       statsforecast: Not installed
2023-05-30 19:39:03,908:INFO:        tune_sklearn: Not installed
2023-05-30 19:39:03,908:INFO:                 ray: Not installed
2023-05-30 19:39:03,908:INFO:            hyperopt: Not installed
2023-05-30 19:39:03,908:INFO:              optuna: Not installed
2023-05-30 19:39:03,908:INFO:               skopt: Not installed
2023-05-30 19:39:03,908:INFO:              mlflow: Not installed
2023-05-30 19:39:03,908:INFO:              gradio: Not installed
2023-05-30 19:39:03,908:INFO:             fastapi: Not installed
2023-05-30 19:39:03,908:INFO:             uvicorn: Not installed
2023-05-30 19:39:03,909:INFO:              m2cgen: Not installed
2023-05-30 19:39:03,909:INFO:           evidently: Not installed
2023-05-30 19:39:03,909:INFO:               fugue: Not installed
2023-05-30 19:39:03,909:INFO:           streamlit: Not installed
2023-05-30 19:39:03,909:INFO:             prophet: Not installed
2023-05-30 19:39:03,909:INFO:None
2023-05-30 19:39:03,909:INFO:Set up data.
2023-05-30 19:39:03,921:INFO:Set up train/test split.
2023-05-30 19:39:03,926:INFO:Set up index.
2023-05-30 19:39:03,926:INFO:Set up folding strategy.
2023-05-30 19:39:03,926:INFO:Assigning column types.
2023-05-30 19:39:03,929:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-30 19:39:03,929:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-30 19:39:03,933:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-30 19:39:03,938:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,000:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,046:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,047:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,047:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,052:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,056:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,114:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,154:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,154:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,154:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-30 19:39:04,154:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,154:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,226:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,269:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,275:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,279:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,340:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,387:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,387:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,387:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,388:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-30 19:39:04,397:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,457:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,508:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,509:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,518:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,579:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,627:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,627:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,628:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,628:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-30 19:39:04,687:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,747:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,748:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,815:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,867:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,868:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,868:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,871:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-30 19:39:04,943:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:39:04,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:04,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:05,063:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-30 19:39:05,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:05,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:05,107:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-30 19:39:05,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:05,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:05,343:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:05,343:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:05,345:INFO:Preparing preprocessing pipeline...
2023-05-30 19:39:05,345:INFO:Set up target transformation.
2023-05-30 19:39:05,345:INFO:Set up simple imputation.
2023-05-30 19:39:05,349:INFO:Set up encoding of categorical features.
2023-05-30 19:39:05,349:INFO:Set up column transformation.
2023-05-30 19:39:05,349:INFO:Set up feature normalization.
2023-05-30 19:39:05,724:INFO:Finished creating preprocessing pipeline.
2023-05-30 19:39:05,734:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['score', 'qty_stores'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tran...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['segment', 'sub_segment'],
                                    transformer=OneHotEncoder(cols=['segment',
                                                                    'sub_segment'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2023-05-30 19:39:05,734:INFO:Creating final display dataframe.
2023-05-30 19:39:06,089:INFO:Setup _display_container:                     Description         Value
0                    Session id           123
1                        Target  sells_volume
2                   Target type    Regression
3           Original data shape    (29692, 5)
4        Transformed data shape   (29692, 13)
5   Transformed train set shape   (20784, 13)
6    Transformed test set shape    (8908, 13)
7              Numeric features             2
8          Categorical features             2
9                    Preprocess          True
10              Imputation type        simple
11           Numeric imputation          mean
12       Categorical imputation          mode
13     Maximum one-hot encoding            25
14              Encoding method          None
15               Transformation          True
16        Transformation method   yeo-johnson
17                    Normalize          True
18             Normalize method        zscore
19             Transform target          True
20      Transform target method   yeo-johnson
21               Fold Generator         KFold
22                  Fold Number            10
23                     CPU Jobs            -1
24                      Use GPU         False
25               Log Experiment         False
26              Experiment Name   regressao01
27                          USI          615c
2023-05-30 19:39:06,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:06,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:06,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:06,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-30 19:39:06,337:INFO:setup() successfully completed in 3.7s...............
2023-05-30 19:39:06,357:INFO:Initializing compare_models()
2023-05-30 19:39:06,358:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, include=None, fold=None, round=4, cross_validation=True, sort=MAPE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAPE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-05-30 19:39:06,358:INFO:Checking exceptions
2023-05-30 19:39:06,362:INFO:Preparing display monitor
2023-05-30 19:39:06,412:INFO:Initializing Linear Regression
2023-05-30 19:39:06,412:INFO:Total runtime is 0.0 minutes
2023-05-30 19:39:06,422:INFO:SubProcess create_model() called ==================================
2023-05-30 19:39:06,422:INFO:Initializing create_model()
2023-05-30 19:39:06,422:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:39:06,422:INFO:Checking exceptions
2023-05-30 19:39:06,424:INFO:Importing libraries
2023-05-30 19:39:06,425:INFO:Copying training dataset
2023-05-30 19:39:06,433:INFO:Defining folds
2023-05-30 19:39:06,433:INFO:Declaring metric variables
2023-05-30 19:39:06,441:INFO:Importing untrained model
2023-05-30 19:39:06,449:INFO:Linear Regression Imported successfully
2023-05-30 19:39:06,464:INFO:Starting cross validation
2023-05-30 19:39:06,465:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:39:20,515:INFO:Calculating mean and std
2023-05-30 19:39:20,517:INFO:Creating metrics dataframe
2023-05-30 19:39:22,052:INFO:Uploading results into container
2023-05-30 19:39:22,053:INFO:Uploading model into container now
2023-05-30 19:39:22,053:INFO:_master_model_container: 1
2023-05-30 19:39:22,053:INFO:_display_container: 2
2023-05-30 19:39:22,053:INFO:LinearRegression(n_jobs=-1)
2023-05-30 19:39:22,054:INFO:create_model() successfully completed......................................
2023-05-30 19:39:22,131:INFO:SubProcess create_model() end ==================================
2023-05-30 19:39:22,131:INFO:Creating metrics dataframe
2023-05-30 19:39:22,144:INFO:Initializing Lasso Regression
2023-05-30 19:39:22,145:INFO:Total runtime is 0.2622231086095174 minutes
2023-05-30 19:39:22,151:INFO:SubProcess create_model() called ==================================
2023-05-30 19:39:22,151:INFO:Initializing create_model()
2023-05-30 19:39:22,151:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:39:22,152:INFO:Checking exceptions
2023-05-30 19:39:22,152:INFO:Importing libraries
2023-05-30 19:39:22,152:INFO:Copying training dataset
2023-05-30 19:39:22,161:INFO:Defining folds
2023-05-30 19:39:22,162:INFO:Declaring metric variables
2023-05-30 19:39:22,168:INFO:Importing untrained model
2023-05-30 19:39:22,175:INFO:Lasso Regression Imported successfully
2023-05-30 19:39:22,185:INFO:Starting cross validation
2023-05-30 19:39:22,187:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:39:35,841:INFO:Calculating mean and std
2023-05-30 19:39:35,841:INFO:Creating metrics dataframe
2023-05-30 19:39:37,431:INFO:Uploading results into container
2023-05-30 19:39:37,431:INFO:Uploading model into container now
2023-05-30 19:39:37,433:INFO:_master_model_container: 2
2023-05-30 19:39:37,433:INFO:_display_container: 2
2023-05-30 19:39:37,433:INFO:Lasso(random_state=123)
2023-05-30 19:39:37,433:INFO:create_model() successfully completed......................................
2023-05-30 19:39:37,511:INFO:SubProcess create_model() end ==================================
2023-05-30 19:39:37,511:INFO:Creating metrics dataframe
2023-05-30 19:39:37,527:INFO:Initializing Ridge Regression
2023-05-30 19:39:37,528:INFO:Total runtime is 0.5186043620109558 minutes
2023-05-30 19:39:37,534:INFO:SubProcess create_model() called ==================================
2023-05-30 19:39:37,535:INFO:Initializing create_model()
2023-05-30 19:39:37,535:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:39:37,535:INFO:Checking exceptions
2023-05-30 19:39:37,535:INFO:Importing libraries
2023-05-30 19:39:37,535:INFO:Copying training dataset
2023-05-30 19:39:37,544:INFO:Defining folds
2023-05-30 19:39:37,544:INFO:Declaring metric variables
2023-05-30 19:39:37,553:INFO:Importing untrained model
2023-05-30 19:39:37,561:INFO:Ridge Regression Imported successfully
2023-05-30 19:39:37,573:INFO:Starting cross validation
2023-05-30 19:39:37,575:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:39:51,738:INFO:Calculating mean and std
2023-05-30 19:39:51,740:INFO:Creating metrics dataframe
2023-05-30 19:39:53,358:INFO:Uploading results into container
2023-05-30 19:39:53,358:INFO:Uploading model into container now
2023-05-30 19:39:53,359:INFO:_master_model_container: 3
2023-05-30 19:39:53,359:INFO:_display_container: 2
2023-05-30 19:39:53,359:INFO:Ridge(random_state=123)
2023-05-30 19:39:53,359:INFO:create_model() successfully completed......................................
2023-05-30 19:39:53,438:INFO:SubProcess create_model() end ==================================
2023-05-30 19:39:53,438:INFO:Creating metrics dataframe
2023-05-30 19:39:53,453:INFO:Initializing Elastic Net
2023-05-30 19:39:53,454:INFO:Total runtime is 0.7840451041857401 minutes
2023-05-30 19:39:53,459:INFO:SubProcess create_model() called ==================================
2023-05-30 19:39:53,460:INFO:Initializing create_model()
2023-05-30 19:39:53,460:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:39:53,460:INFO:Checking exceptions
2023-05-30 19:39:53,460:INFO:Importing libraries
2023-05-30 19:39:53,460:INFO:Copying training dataset
2023-05-30 19:39:53,469:INFO:Defining folds
2023-05-30 19:39:53,469:INFO:Declaring metric variables
2023-05-30 19:39:53,476:INFO:Importing untrained model
2023-05-30 19:39:53,483:INFO:Elastic Net Imported successfully
2023-05-30 19:39:53,496:INFO:Starting cross validation
2023-05-30 19:39:53,497:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:40:07,411:INFO:Calculating mean and std
2023-05-30 19:40:07,413:INFO:Creating metrics dataframe
2023-05-30 19:40:09,014:INFO:Uploading results into container
2023-05-30 19:40:09,015:INFO:Uploading model into container now
2023-05-30 19:40:09,015:INFO:_master_model_container: 4
2023-05-30 19:40:09,015:INFO:_display_container: 2
2023-05-30 19:40:09,016:INFO:ElasticNet(random_state=123)
2023-05-30 19:40:09,016:INFO:create_model() successfully completed......................................
2023-05-30 19:40:09,094:INFO:SubProcess create_model() end ==================================
2023-05-30 19:40:09,094:INFO:Creating metrics dataframe
2023-05-30 19:40:09,111:INFO:Initializing Least Angle Regression
2023-05-30 19:40:09,112:INFO:Total runtime is 1.0450079202651978 minutes
2023-05-30 19:40:09,121:INFO:SubProcess create_model() called ==================================
2023-05-30 19:40:09,122:INFO:Initializing create_model()
2023-05-30 19:40:09,122:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:40:09,122:INFO:Checking exceptions
2023-05-30 19:40:09,123:INFO:Importing libraries
2023-05-30 19:40:09,124:INFO:Copying training dataset
2023-05-30 19:40:09,132:INFO:Defining folds
2023-05-30 19:40:09,134:INFO:Declaring metric variables
2023-05-30 19:40:09,139:INFO:Importing untrained model
2023-05-30 19:40:09,148:INFO:Least Angle Regression Imported successfully
2023-05-30 19:40:09,164:INFO:Starting cross validation
2023-05-30 19:40:09,165:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:40:09,527:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:09,540:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=3.910e-05, with an active set of 7 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,542:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.565e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.788e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,542:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=2.643e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,542:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=8.343e-07, with an active set of 8 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,542:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=4.396e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 4.081e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,542:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=4.168e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,542:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=4.107e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,577:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:09,580:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:09,591:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=5.320e-05, with an active set of 7 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,591:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:09,591:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=2.806e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,591:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.860e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,591:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.539e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 6.664e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,591:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.379e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 6.664e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,591:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=3.109e-05, with an active set of 7 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,591:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.246e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 3.161e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,605:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=2.171e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,605:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=6.665e-07, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,605:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=6.665e-07, with an active set of 8 regressors, and the smallest cholesky pivot element being 9.940e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,615:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=3.837e-05, with an active set of 7 regressors, and the smallest cholesky pivot element being 1.825e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,617:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.534e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 8.560e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,617:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=2.530e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 1.825e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,618:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=8.302e-07, with an active set of 8 regressors, and the smallest cholesky pivot element being 1.825e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,619:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=4.594e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 3.942e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,619:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=4.166e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 3.942e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,620:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=4.132e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 1.825e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,623:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:09,632:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=6.312e-05, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,633:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=2.529e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 8.162e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,633:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=4.346e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,634:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.374e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,634:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=7.024e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 4.712e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,635:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=6.871e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,635:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=6.867e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,643:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:09,649:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:09,654:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=6.084e-05, with an active set of 7 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,655:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=2.438e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 4.470e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,655:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=4.211e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,655:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.279e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 1.054e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,655:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.279e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 5.771e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,672:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:09,672:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:09,688:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=2.991e-05, with an active set of 7 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,689:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.196e-05, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.581e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,689:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.977e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,689:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=5.172e-07, with an active set of 8 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,690:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=2.816e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 4.470e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,691:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=2.586e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,691:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=2.584e-07, with an active set of 9 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,696:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=8.866e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,696:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=5.963e-06, with an active set of 8 regressors, and the smallest cholesky pivot element being 6.322e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,697:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=2.688e-07, with an active set of 8 regressors, and the smallest cholesky pivot element being 6.322e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:09,697:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=2.688e-07, with an active set of 8 regressors, and the smallest cholesky pivot element being 9.424e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-05-30 19:40:22,785:INFO:Calculating mean and std
2023-05-30 19:40:22,787:INFO:Creating metrics dataframe
2023-05-30 19:40:24,415:INFO:Uploading results into container
2023-05-30 19:40:24,415:INFO:Uploading model into container now
2023-05-30 19:40:24,416:INFO:_master_model_container: 5
2023-05-30 19:40:24,416:INFO:_display_container: 2
2023-05-30 19:40:24,416:INFO:Lars(random_state=123)
2023-05-30 19:40:24,416:INFO:create_model() successfully completed......................................
2023-05-30 19:40:24,495:INFO:SubProcess create_model() end ==================================
2023-05-30 19:40:24,495:INFO:Creating metrics dataframe
2023-05-30 19:40:24,511:INFO:Initializing Lasso Least Angle Regression
2023-05-30 19:40:24,512:INFO:Total runtime is 1.3016697724660238 minutes
2023-05-30 19:40:24,518:INFO:SubProcess create_model() called ==================================
2023-05-30 19:40:24,518:INFO:Initializing create_model()
2023-05-30 19:40:24,518:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:40:24,518:INFO:Checking exceptions
2023-05-30 19:40:24,519:INFO:Importing libraries
2023-05-30 19:40:24,519:INFO:Copying training dataset
2023-05-30 19:40:24,527:INFO:Defining folds
2023-05-30 19:40:24,528:INFO:Declaring metric variables
2023-05-30 19:40:24,535:INFO:Importing untrained model
2023-05-30 19:40:24,542:INFO:Lasso Least Angle Regression Imported successfully
2023-05-30 19:40:24,553:INFO:Starting cross validation
2023-05-30 19:40:24,555:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:40:24,916:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:40:24,956:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:40:24,974:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:40:24,976:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:40:25,003:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:40:25,028:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:40:25,034:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:40:25,039:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:40:25,064:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:40:25,076:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-05-30 19:40:38,289:INFO:Calculating mean and std
2023-05-30 19:40:38,289:INFO:Creating metrics dataframe
2023-05-30 19:40:39,937:INFO:Uploading results into container
2023-05-30 19:40:39,937:INFO:Uploading model into container now
2023-05-30 19:40:39,937:INFO:_master_model_container: 6
2023-05-30 19:40:39,937:INFO:_display_container: 2
2023-05-30 19:40:39,937:INFO:LassoLars(random_state=123)
2023-05-30 19:40:39,937:INFO:create_model() successfully completed......................................
2023-05-30 19:40:40,006:INFO:SubProcess create_model() end ==================================
2023-05-30 19:40:40,006:INFO:Creating metrics dataframe
2023-05-30 19:40:40,036:INFO:Initializing Orthogonal Matching Pursuit
2023-05-30 19:40:40,036:INFO:Total runtime is 1.5604033589363098 minutes
2023-05-30 19:40:40,043:INFO:SubProcess create_model() called ==================================
2023-05-30 19:40:40,044:INFO:Initializing create_model()
2023-05-30 19:40:40,044:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:40:40,045:INFO:Checking exceptions
2023-05-30 19:40:40,045:INFO:Importing libraries
2023-05-30 19:40:40,045:INFO:Copying training dataset
2023-05-30 19:40:40,054:INFO:Defining folds
2023-05-30 19:40:40,054:INFO:Declaring metric variables
2023-05-30 19:40:40,062:INFO:Importing untrained model
2023-05-30 19:40:40,070:INFO:Orthogonal Matching Pursuit Imported successfully
2023-05-30 19:40:40,087:INFO:Starting cross validation
2023-05-30 19:40:40,089:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:40:40,449:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:40,495:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:40,506:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:40,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:40,542:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:40,558:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:40,569:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:40,577:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:40,605:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:40,611:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-05-30 19:40:54,875:INFO:Calculating mean and std
2023-05-30 19:40:54,877:INFO:Creating metrics dataframe
2023-05-30 19:40:56,510:INFO:Uploading results into container
2023-05-30 19:40:56,510:INFO:Uploading model into container now
2023-05-30 19:40:56,512:INFO:_master_model_container: 7
2023-05-30 19:40:56,512:INFO:_display_container: 2
2023-05-30 19:40:56,512:INFO:OrthogonalMatchingPursuit()
2023-05-30 19:40:56,512:INFO:create_model() successfully completed......................................
2023-05-30 19:40:56,593:INFO:SubProcess create_model() end ==================================
2023-05-30 19:40:56,593:INFO:Creating metrics dataframe
2023-05-30 19:40:56,609:INFO:Initializing Bayesian Ridge
2023-05-30 19:40:56,609:INFO:Total runtime is 1.8366191029548644 minutes
2023-05-30 19:40:56,616:INFO:SubProcess create_model() called ==================================
2023-05-30 19:40:56,617:INFO:Initializing create_model()
2023-05-30 19:40:56,617:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:40:56,617:INFO:Checking exceptions
2023-05-30 19:40:56,617:INFO:Importing libraries
2023-05-30 19:40:56,617:INFO:Copying training dataset
2023-05-30 19:40:56,625:INFO:Defining folds
2023-05-30 19:40:56,626:INFO:Declaring metric variables
2023-05-30 19:40:56,632:INFO:Importing untrained model
2023-05-30 19:40:56,638:INFO:Bayesian Ridge Imported successfully
2023-05-30 19:40:56,652:INFO:Starting cross validation
2023-05-30 19:40:56,654:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:41:10,533:INFO:Calculating mean and std
2023-05-30 19:41:10,535:INFO:Creating metrics dataframe
2023-05-30 19:41:12,122:INFO:Uploading results into container
2023-05-30 19:41:12,122:INFO:Uploading model into container now
2023-05-30 19:41:12,125:INFO:_master_model_container: 8
2023-05-30 19:41:12,125:INFO:_display_container: 2
2023-05-30 19:41:12,125:INFO:BayesianRidge()
2023-05-30 19:41:12,125:INFO:create_model() successfully completed......................................
2023-05-30 19:41:12,203:INFO:SubProcess create_model() end ==================================
2023-05-30 19:41:12,204:INFO:Creating metrics dataframe
2023-05-30 19:41:12,220:INFO:Initializing Passive Aggressive Regressor
2023-05-30 19:41:12,221:INFO:Total runtime is 2.0968168536822 minutes
2023-05-30 19:41:12,225:INFO:SubProcess create_model() called ==================================
2023-05-30 19:41:12,225:INFO:Initializing create_model()
2023-05-30 19:41:12,225:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:41:12,225:INFO:Checking exceptions
2023-05-30 19:41:12,225:INFO:Importing libraries
2023-05-30 19:41:12,225:INFO:Copying training dataset
2023-05-30 19:41:12,225:INFO:Defining folds
2023-05-30 19:41:12,225:INFO:Declaring metric variables
2023-05-30 19:41:12,245:INFO:Importing untrained model
2023-05-30 19:41:12,252:INFO:Passive Aggressive Regressor Imported successfully
2023-05-30 19:41:12,263:INFO:Starting cross validation
2023-05-30 19:41:12,263:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:41:26,209:INFO:Calculating mean and std
2023-05-30 19:41:26,211:INFO:Creating metrics dataframe
2023-05-30 19:41:27,824:INFO:Uploading results into container
2023-05-30 19:41:27,825:INFO:Uploading model into container now
2023-05-30 19:41:27,825:INFO:_master_model_container: 9
2023-05-30 19:41:27,825:INFO:_display_container: 2
2023-05-30 19:41:27,826:INFO:PassiveAggressiveRegressor(random_state=123)
2023-05-30 19:41:27,826:INFO:create_model() successfully completed......................................
2023-05-30 19:41:27,908:INFO:SubProcess create_model() end ==================================
2023-05-30 19:41:27,908:INFO:Creating metrics dataframe
2023-05-30 19:41:27,924:INFO:Initializing Huber Regressor
2023-05-30 19:41:27,925:INFO:Total runtime is 2.3585562030474345 minutes
2023-05-30 19:41:27,931:INFO:SubProcess create_model() called ==================================
2023-05-30 19:41:27,931:INFO:Initializing create_model()
2023-05-30 19:41:27,933:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:41:27,933:INFO:Checking exceptions
2023-05-30 19:41:27,933:INFO:Importing libraries
2023-05-30 19:41:27,933:INFO:Copying training dataset
2023-05-30 19:41:27,942:INFO:Defining folds
2023-05-30 19:41:27,943:INFO:Declaring metric variables
2023-05-30 19:41:27,950:INFO:Importing untrained model
2023-05-30 19:41:27,963:INFO:Huber Regressor Imported successfully
2023-05-30 19:41:27,977:INFO:Starting cross validation
2023-05-30 19:41:27,978:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:41:42,224:INFO:Calculating mean and std
2023-05-30 19:41:42,224:INFO:Creating metrics dataframe
2023-05-30 19:41:43,870:INFO:Uploading results into container
2023-05-30 19:41:43,870:INFO:Uploading model into container now
2023-05-30 19:41:43,872:INFO:_master_model_container: 10
2023-05-30 19:41:43,872:INFO:_display_container: 2
2023-05-30 19:41:43,872:INFO:HuberRegressor()
2023-05-30 19:41:43,872:INFO:create_model() successfully completed......................................
2023-05-30 19:41:43,947:INFO:SubProcess create_model() end ==================================
2023-05-30 19:41:43,947:INFO:Creating metrics dataframe
2023-05-30 19:41:43,964:INFO:Initializing K Neighbors Regressor
2023-05-30 19:41:43,965:INFO:Total runtime is 2.6258938550949096 minutes
2023-05-30 19:41:43,967:INFO:SubProcess create_model() called ==================================
2023-05-30 19:41:43,973:INFO:Initializing create_model()
2023-05-30 19:41:43,973:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:41:43,973:INFO:Checking exceptions
2023-05-30 19:41:43,973:INFO:Importing libraries
2023-05-30 19:41:43,974:INFO:Copying training dataset
2023-05-30 19:41:43,984:INFO:Defining folds
2023-05-30 19:41:43,984:INFO:Declaring metric variables
2023-05-30 19:41:43,991:INFO:Importing untrained model
2023-05-30 19:41:43,998:INFO:K Neighbors Regressor Imported successfully
2023-05-30 19:41:44,011:INFO:Starting cross validation
2023-05-30 19:41:44,012:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:41:58,781:INFO:Calculating mean and std
2023-05-30 19:41:58,783:INFO:Creating metrics dataframe
2023-05-30 19:42:00,405:INFO:Uploading results into container
2023-05-30 19:42:00,406:INFO:Uploading model into container now
2023-05-30 19:42:00,406:INFO:_master_model_container: 11
2023-05-30 19:42:00,407:INFO:_display_container: 2
2023-05-30 19:42:00,408:INFO:KNeighborsRegressor(n_jobs=-1)
2023-05-30 19:42:00,408:INFO:create_model() successfully completed......................................
2023-05-30 19:42:00,489:INFO:SubProcess create_model() end ==================================
2023-05-30 19:42:00,489:INFO:Creating metrics dataframe
2023-05-30 19:42:00,505:INFO:Initializing Decision Tree Regressor
2023-05-30 19:42:00,506:INFO:Total runtime is 2.901568897565206 minutes
2023-05-30 19:42:00,510:INFO:SubProcess create_model() called ==================================
2023-05-30 19:42:00,511:INFO:Initializing create_model()
2023-05-30 19:42:00,511:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:42:00,511:INFO:Checking exceptions
2023-05-30 19:42:00,511:INFO:Importing libraries
2023-05-30 19:42:00,511:INFO:Copying training dataset
2023-05-30 19:42:00,519:INFO:Defining folds
2023-05-30 19:42:00,519:INFO:Declaring metric variables
2023-05-30 19:42:00,526:INFO:Importing untrained model
2023-05-30 19:42:00,533:INFO:Decision Tree Regressor Imported successfully
2023-05-30 19:42:00,545:INFO:Starting cross validation
2023-05-30 19:42:00,547:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:42:14,561:INFO:Calculating mean and std
2023-05-30 19:42:14,563:INFO:Creating metrics dataframe
2023-05-30 19:42:16,208:INFO:Uploading results into container
2023-05-30 19:42:16,208:INFO:Uploading model into container now
2023-05-30 19:42:16,208:INFO:_master_model_container: 12
2023-05-30 19:42:16,208:INFO:_display_container: 2
2023-05-30 19:42:16,208:INFO:DecisionTreeRegressor(random_state=123)
2023-05-30 19:42:16,208:INFO:create_model() successfully completed......................................
2023-05-30 19:42:16,302:INFO:SubProcess create_model() end ==================================
2023-05-30 19:42:16,302:INFO:Creating metrics dataframe
2023-05-30 19:42:16,319:INFO:Initializing Random Forest Regressor
2023-05-30 19:42:16,320:INFO:Total runtime is 3.165145242214203 minutes
2023-05-30 19:42:16,326:INFO:SubProcess create_model() called ==================================
2023-05-30 19:42:16,327:INFO:Initializing create_model()
2023-05-30 19:42:16,328:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:42:16,328:INFO:Checking exceptions
2023-05-30 19:42:16,328:INFO:Importing libraries
2023-05-30 19:42:16,328:INFO:Copying training dataset
2023-05-30 19:42:16,335:INFO:Defining folds
2023-05-30 19:42:16,336:INFO:Declaring metric variables
2023-05-30 19:42:16,344:INFO:Importing untrained model
2023-05-30 19:42:16,350:INFO:Random Forest Regressor Imported successfully
2023-05-30 19:42:16,365:INFO:Starting cross validation
2023-05-30 19:42:16,366:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:42:21,452:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.27s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-30 19:42:21,773:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-30 19:42:21,927:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-30 19:42:22,089:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-30 19:42:36,537:INFO:Calculating mean and std
2023-05-30 19:42:36,539:INFO:Creating metrics dataframe
2023-05-30 19:42:38,256:INFO:Uploading results into container
2023-05-30 19:42:38,256:INFO:Uploading model into container now
2023-05-30 19:42:38,257:INFO:_master_model_container: 13
2023-05-30 19:42:38,257:INFO:_display_container: 2
2023-05-30 19:42:38,257:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-05-30 19:42:38,257:INFO:create_model() successfully completed......................................
2023-05-30 19:42:38,333:INFO:SubProcess create_model() end ==================================
2023-05-30 19:42:38,334:INFO:Creating metrics dataframe
2023-05-30 19:42:38,353:INFO:Initializing Extra Trees Regressor
2023-05-30 19:42:38,354:INFO:Total runtime is 3.5323778708775837 minutes
2023-05-30 19:42:38,360:INFO:SubProcess create_model() called ==================================
2023-05-30 19:42:38,361:INFO:Initializing create_model()
2023-05-30 19:42:38,361:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:42:38,361:INFO:Checking exceptions
2023-05-30 19:42:38,362:INFO:Importing libraries
2023-05-30 19:42:38,362:INFO:Copying training dataset
2023-05-30 19:42:38,369:INFO:Defining folds
2023-05-30 19:42:38,370:INFO:Declaring metric variables
2023-05-30 19:42:38,377:INFO:Importing untrained model
2023-05-30 19:42:38,381:INFO:Extra Trees Regressor Imported successfully
2023-05-30 19:42:38,395:INFO:Starting cross validation
2023-05-30 19:42:38,397:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:42:41,191:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-30 19:42:42,275:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-30 19:42:42,332:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-30 19:42:57,783:INFO:Calculating mean and std
2023-05-30 19:42:57,785:INFO:Creating metrics dataframe
2023-05-30 19:42:59,403:INFO:Uploading results into container
2023-05-30 19:42:59,404:INFO:Uploading model into container now
2023-05-30 19:42:59,404:INFO:_master_model_container: 14
2023-05-30 19:42:59,404:INFO:_display_container: 2
2023-05-30 19:42:59,405:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-05-30 19:42:59,405:INFO:create_model() successfully completed......................................
2023-05-30 19:42:59,485:INFO:SubProcess create_model() end ==================================
2023-05-30 19:42:59,485:INFO:Creating metrics dataframe
2023-05-30 19:42:59,503:INFO:Initializing AdaBoost Regressor
2023-05-30 19:42:59,504:INFO:Total runtime is 3.884870072205861 minutes
2023-05-30 19:42:59,511:INFO:SubProcess create_model() called ==================================
2023-05-30 19:42:59,512:INFO:Initializing create_model()
2023-05-30 19:42:59,512:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:42:59,512:INFO:Checking exceptions
2023-05-30 19:42:59,513:INFO:Importing libraries
2023-05-30 19:42:59,513:INFO:Copying training dataset
2023-05-30 19:42:59,522:INFO:Defining folds
2023-05-30 19:42:59,523:INFO:Declaring metric variables
2023-05-30 19:42:59,530:INFO:Importing untrained model
2023-05-30 19:42:59,537:INFO:AdaBoost Regressor Imported successfully
2023-05-30 19:42:59,552:INFO:Starting cross validation
2023-05-30 19:42:59,553:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:43:14,460:INFO:Calculating mean and std
2023-05-30 19:43:14,462:INFO:Creating metrics dataframe
2023-05-30 19:43:16,154:INFO:Uploading results into container
2023-05-30 19:43:16,155:INFO:Uploading model into container now
2023-05-30 19:43:16,155:INFO:_master_model_container: 15
2023-05-30 19:43:16,155:INFO:_display_container: 2
2023-05-30 19:43:16,156:INFO:AdaBoostRegressor(random_state=123)
2023-05-30 19:43:16,156:INFO:create_model() successfully completed......................................
2023-05-30 19:43:16,236:INFO:SubProcess create_model() end ==================================
2023-05-30 19:43:16,236:INFO:Creating metrics dataframe
2023-05-30 19:43:16,253:INFO:Initializing Gradient Boosting Regressor
2023-05-30 19:43:16,254:INFO:Total runtime is 4.164038646221161 minutes
2023-05-30 19:43:16,259:INFO:SubProcess create_model() called ==================================
2023-05-30 19:43:16,260:INFO:Initializing create_model()
2023-05-30 19:43:16,260:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:43:16,260:INFO:Checking exceptions
2023-05-30 19:43:16,261:INFO:Importing libraries
2023-05-30 19:43:16,261:INFO:Copying training dataset
2023-05-30 19:43:16,269:INFO:Defining folds
2023-05-30 19:43:16,269:INFO:Declaring metric variables
2023-05-30 19:43:16,277:INFO:Importing untrained model
2023-05-30 19:43:16,286:INFO:Gradient Boosting Regressor Imported successfully
2023-05-30 19:43:16,296:INFO:Starting cross validation
2023-05-30 19:43:16,299:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:43:32,712:INFO:Calculating mean and std
2023-05-30 19:43:32,713:INFO:Creating metrics dataframe
2023-05-30 19:43:34,406:INFO:Uploading results into container
2023-05-30 19:43:34,407:INFO:Uploading model into container now
2023-05-30 19:43:34,407:INFO:_master_model_container: 16
2023-05-30 19:43:34,407:INFO:_display_container: 2
2023-05-30 19:43:34,408:INFO:GradientBoostingRegressor(random_state=123)
2023-05-30 19:43:34,408:INFO:create_model() successfully completed......................................
2023-05-30 19:43:34,486:INFO:SubProcess create_model() end ==================================
2023-05-30 19:43:34,486:INFO:Creating metrics dataframe
2023-05-30 19:43:34,504:INFO:Initializing Light Gradient Boosting Machine
2023-05-30 19:43:34,505:INFO:Total runtime is 4.468222383658091 minutes
2023-05-30 19:43:34,511:INFO:SubProcess create_model() called ==================================
2023-05-30 19:43:34,511:INFO:Initializing create_model()
2023-05-30 19:43:34,512:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:43:34,512:INFO:Checking exceptions
2023-05-30 19:43:34,512:INFO:Importing libraries
2023-05-30 19:43:34,513:INFO:Copying training dataset
2023-05-30 19:43:34,520:INFO:Defining folds
2023-05-30 19:43:34,520:INFO:Declaring metric variables
2023-05-30 19:43:34,527:INFO:Importing untrained model
2023-05-30 19:43:34,534:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-30 19:43:34,547:INFO:Starting cross validation
2023-05-30 19:43:34,548:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:43:49,715:INFO:Calculating mean and std
2023-05-30 19:43:49,717:INFO:Creating metrics dataframe
2023-05-30 19:43:51,393:INFO:Uploading results into container
2023-05-30 19:43:51,393:INFO:Uploading model into container now
2023-05-30 19:43:51,393:INFO:_master_model_container: 17
2023-05-30 19:43:51,394:INFO:_display_container: 2
2023-05-30 19:43:51,394:INFO:LGBMRegressor(random_state=123)
2023-05-30 19:43:51,395:INFO:create_model() successfully completed......................................
2023-05-30 19:43:51,472:INFO:SubProcess create_model() end ==================================
2023-05-30 19:43:51,472:INFO:Creating metrics dataframe
2023-05-30 19:43:51,492:INFO:Initializing Dummy Regressor
2023-05-30 19:43:51,493:INFO:Total runtime is 4.7513490438461305 minutes
2023-05-30 19:43:51,499:INFO:SubProcess create_model() called ==================================
2023-05-30 19:43:51,500:INFO:Initializing create_model()
2023-05-30 19:43:51,500:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FF420B8160>, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:43:51,500:INFO:Checking exceptions
2023-05-30 19:43:51,501:INFO:Importing libraries
2023-05-30 19:43:51,501:INFO:Copying training dataset
2023-05-30 19:43:51,508:INFO:Defining folds
2023-05-30 19:43:51,509:INFO:Declaring metric variables
2023-05-30 19:43:51,514:INFO:Importing untrained model
2023-05-30 19:43:51,519:INFO:Dummy Regressor Imported successfully
2023-05-30 19:43:51,531:INFO:Starting cross validation
2023-05-30 19:43:51,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:44:05,877:INFO:Calculating mean and std
2023-05-30 19:44:05,895:INFO:Creating metrics dataframe
2023-05-30 19:44:07,586:INFO:Uploading results into container
2023-05-30 19:44:07,586:INFO:Uploading model into container now
2023-05-30 19:44:07,587:INFO:_master_model_container: 18
2023-05-30 19:44:07,587:INFO:_display_container: 2
2023-05-30 19:44:07,587:INFO:DummyRegressor()
2023-05-30 19:44:07,587:INFO:create_model() successfully completed......................................
2023-05-30 19:44:07,665:INFO:SubProcess create_model() end ==================================
2023-05-30 19:44:07,665:INFO:Creating metrics dataframe
2023-05-30 19:44:07,701:INFO:Initializing create_model()
2023-05-30 19:44:07,702:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=AdaBoostRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:44:07,702:INFO:Checking exceptions
2023-05-30 19:44:07,704:INFO:Importing libraries
2023-05-30 19:44:07,704:INFO:Copying training dataset
2023-05-30 19:44:07,714:INFO:Defining folds
2023-05-30 19:44:07,715:INFO:Declaring metric variables
2023-05-30 19:44:07,715:INFO:Importing untrained model
2023-05-30 19:44:07,715:INFO:Declaring custom model
2023-05-30 19:44:07,715:INFO:AdaBoost Regressor Imported successfully
2023-05-30 19:44:07,717:INFO:Cross validation set to False
2023-05-30 19:44:07,717:INFO:Fitting Model
2023-05-30 19:44:09,524:INFO:AdaBoostRegressor(random_state=123)
2023-05-30 19:44:09,524:INFO:create_model() successfully completed......................................
2023-05-30 19:44:09,652:INFO:_master_model_container: 18
2023-05-30 19:44:09,653:INFO:_display_container: 2
2023-05-30 19:44:09,653:INFO:AdaBoostRegressor(random_state=123)
2023-05-30 19:44:09,653:INFO:compare_models() successfully completed......................................
2023-05-30 19:44:55,854:INFO:Initializing create_model()
2023-05-30 19:44:55,854:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=AdaBoostRegressor(random_state=123), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-30 19:44:55,854:INFO:Checking exceptions
2023-05-30 19:44:55,895:INFO:Importing libraries
2023-05-30 19:44:55,896:INFO:Copying training dataset
2023-05-30 19:44:55,910:INFO:Defining folds
2023-05-30 19:44:55,910:INFO:Declaring metric variables
2023-05-30 19:44:55,910:INFO:Importing untrained model
2023-05-30 19:44:55,910:INFO:Declaring custom model
2023-05-30 19:44:55,910:INFO:AdaBoost Regressor Imported successfully
2023-05-30 19:44:55,936:INFO:Starting cross validation
2023-05-30 19:44:55,937:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-30 19:45:09,143:INFO:Calculating mean and std
2023-05-30 19:45:09,145:INFO:Creating metrics dataframe
2023-05-30 19:45:09,154:INFO:Finalizing model
2023-05-30 19:45:10,908:INFO:Uploading results into container
2023-05-30 19:45:10,909:INFO:Uploading model into container now
2023-05-30 19:45:10,923:INFO:_master_model_container: 19
2023-05-30 19:45:10,924:INFO:_display_container: 3
2023-05-30 19:45:10,924:INFO:AdaBoostRegressor(random_state=123)
2023-05-30 19:45:10,924:INFO:create_model() successfully completed......................................
2023-05-30 19:45:11,043:INFO:Initializing plot_model()
2023-05-30 19:45:11,043:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=AdaBoostRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, system=True)
2023-05-30 19:45:11,043:INFO:Checking exceptions
2023-05-30 19:45:11,055:INFO:Preloading libraries
2023-05-30 19:45:11,056:INFO:Copying training dataset
2023-05-30 19:45:11,057:INFO:Plot type: feature
2023-05-30 19:45:11,057:WARNING:No coef_ found. Trying feature_importances_
2023-05-30 19:45:11,340:INFO:Visual Rendered Successfully
2023-05-30 19:45:11,419:INFO:plot_model() successfully completed......................................
2023-05-30 19:45:11,502:INFO:Initializing predict_model()
2023-05-30 19:45:11,503:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=AdaBoostRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FF424ABA60>)
2023-05-30 19:45:11,503:INFO:Checking exceptions
2023-05-30 19:45:11,503:INFO:Preloading libraries
2023-05-30 19:45:11,507:INFO:Set up data.
2023-05-30 19:45:11,528:INFO:Set up index.
2023-05-30 19:45:11,774:INFO:Initializing finalize_model()
2023-05-30 19:45:11,774:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=AdaBoostRegressor(random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-05-30 19:45:11,774:INFO:Finalizing AdaBoostRegressor(random_state=123)
2023-05-30 19:45:11,779:INFO:Initializing create_model()
2023-05-30 19:45:11,780:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=AdaBoostRegressor(random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-05-30 19:45:11,780:INFO:Checking exceptions
2023-05-30 19:45:11,782:INFO:Importing libraries
2023-05-30 19:45:11,782:INFO:Copying training dataset
2023-05-30 19:45:11,782:INFO:Defining folds
2023-05-30 19:45:11,782:INFO:Declaring metric variables
2023-05-30 19:45:11,782:INFO:Importing untrained model
2023-05-30 19:45:11,782:INFO:Declaring custom model
2023-05-30 19:45:11,783:INFO:AdaBoost Regressor Imported successfully
2023-05-30 19:45:11,784:INFO:Cross validation set to False
2023-05-30 19:45:11,784:INFO:Fitting Model
2023-05-30 19:45:12,808:INFO:Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['score', 'qty_stores'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tran...
                 TransformerWrapper(include=['segment', 'sub_segment'],
                                    transformer=OneHotEncoder(cols=['segment',
                                                                    'sub_segment'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', AdaBoostRegressor(random_state=123))])
2023-05-30 19:45:12,808:INFO:create_model() successfully completed......................................
2023-05-30 19:45:12,885:INFO:_master_model_container: 19
2023-05-30 19:45:12,885:INFO:_display_container: 4
2023-05-30 19:45:12,898:INFO:Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['score', 'qty_stores'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tran...
                 TransformerWrapper(include=['segment', 'sub_segment'],
                                    transformer=OneHotEncoder(cols=['segment',
                                                                    'sub_segment'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', AdaBoostRegressor(random_state=123))])
2023-05-30 19:45:12,898:INFO:finalize_model() successfully completed......................................
2023-05-30 19:45:22,752:INFO:Initializing finalize_model()
2023-05-30 19:45:22,752:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=AdaBoostRegressor(random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-05-30 19:45:22,753:INFO:Finalizing AdaBoostRegressor(random_state=123)
2023-05-30 19:45:22,757:INFO:Initializing create_model()
2023-05-30 19:45:22,757:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=AdaBoostRegressor(random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-05-30 19:45:22,758:INFO:Checking exceptions
2023-05-30 19:45:22,760:INFO:Importing libraries
2023-05-30 19:45:22,760:INFO:Copying training dataset
2023-05-30 19:45:22,761:INFO:Defining folds
2023-05-30 19:45:22,761:INFO:Declaring metric variables
2023-05-30 19:45:22,762:INFO:Importing untrained model
2023-05-30 19:45:22,762:INFO:Declaring custom model
2023-05-30 19:45:22,762:INFO:AdaBoost Regressor Imported successfully
2023-05-30 19:45:22,764:INFO:Cross validation set to False
2023-05-30 19:45:22,764:INFO:Fitting Model
2023-05-30 19:45:22,994:INFO:Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['score', 'qty_stores'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tran...
                 TransformerWrapper(include=['segment', 'sub_segment'],
                                    transformer=OneHotEncoder(cols=['segment',
                                                                    'sub_segment'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', AdaBoostRegressor(random_state=123))])
2023-05-30 19:45:22,994:INFO:create_model() successfully completed......................................
2023-05-30 19:45:23,069:INFO:_master_model_container: 19
2023-05-30 19:45:23,069:INFO:_display_container: 4
2023-05-30 19:45:23,083:INFO:Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['score', 'qty_stores'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tran...
                 TransformerWrapper(include=['segment', 'sub_segment'],
                                    transformer=OneHotEncoder(cols=['segment',
                                                                    'sub_segment'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', AdaBoostRegressor(random_state=123))])
2023-05-30 19:45:23,083:INFO:finalize_model() successfully completed......................................
2023-05-30 19:45:28,416:INFO:Initializing save_model()
2023-05-30 19:45:28,416:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['score', 'qty_stores'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tran...
                 TransformerWrapper(include=['segment', 'sub_segment'],
                                    transformer=OneHotEncoder(cols=['segment',
                                                                    'sub_segment'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', AdaBoostRegressor(random_state=123))]), model_name=model_final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['score', 'qty_stores'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tran...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['segment', 'sub_segment'],
                                    transformer=OneHotEncoder(cols=['segment',
                                                                    'sub_segment'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-05-30 19:45:28,416:INFO:Adding model into prep_pipe
2023-05-30 19:45:28,418:WARNING:Only Model saved as it was a pipeline.
2023-05-30 19:45:28,432:INFO:model_final.pkl saved in current working directory
2023-05-30 19:45:28,443:INFO:Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['score', 'qty_stores'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tran...
                 TransformerWrapper(include=['segment', 'sub_segment'],
                                    transformer=OneHotEncoder(cols=['segment',
                                                                    'sub_segment'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', AdaBoostRegressor(random_state=123))])
2023-05-30 19:45:28,443:INFO:save_model() successfully completed......................................
2023-05-30 19:45:34,669:INFO:Initializing load_model()
2023-05-30 19:45:34,670:INFO:load_model(model_name=model_brazil_in_home, platform=None, authentication=None, verbose=True)
2023-05-30 19:45:40,625:INFO:Initializing load_model()
2023-05-30 19:45:40,625:INFO:load_model(model_name=model_final, platform=None, authentication=None, verbose=True)
2023-05-30 19:45:42,303:INFO:Initializing predict_model()
2023-05-30 19:45:42,304:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FF421C6490>, estimator=Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['score', 'qty_stores'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tran...
                 TransformerWrapper(include=['segment', 'sub_segment'],
                                    transformer=OneHotEncoder(cols=['segment',
                                                                    'sub_segment'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', AdaBoostRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FF424AB820>)
2023-05-30 19:45:42,304:INFO:Checking exceptions
2023-05-30 19:45:42,304:INFO:Preloading libraries
2023-05-30 19:45:42,309:INFO:Set up data.
2023-05-30 19:45:42,322:INFO:Set up index.
2023-12-05 13:09:20,691:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 13:09:25,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-05 13:09:25,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-05 13:09:25,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-05 13:09:25,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-05 13:20:53,220:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 13:20:56,819:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-05 13:20:56,819:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-05 13:20:56,819:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-05 13:20:56,819:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-05 13:21:01,648:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-12-05 13:21:43,023:INFO:PyCaret ClassificationExperiment
2023-12-05 13:21:43,023:INFO:Logging name: clf-default-name
2023-12-05 13:21:43,023:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-05 13:21:43,023:INFO:version 3.0.0
2023-12-05 13:21:43,023:INFO:Initializing setup()
2023-12-05 13:21:43,023:INFO:self.USI: 1bc3
2023-12-05 13:21:43,023:INFO:self._variable_keys: {'X', 'y', 'y_test', '_available_plots', 'fold_groups_param', 'gpu_n_jobs_param', 'target_param', 'is_multiclass', 'USI', 'logging_param', 'log_plots_param', 'gpu_param', 'pipeline', 'idx', 'X_test', 'X_train', 'n_jobs_param', 'data', 'seed', 'exp_id', 'y_train', 'exp_name_log', '_ml_usecase', 'memory', 'html_param', 'fix_imbalance', 'fold_shuffle_param', 'fold_generator'}
2023-12-05 13:21:43,023:INFO:Checking environment
2023-12-05 13:21:43,023:INFO:python_version: 3.9.13
2023-12-05 13:21:43,023:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-12-05 13:21:43,023:INFO:machine: AMD64
2023-12-05 13:21:43,023:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-05 13:21:43,023:INFO:Memory: svmem(total=33942257664, available=1184460800, percent=96.5, used=32757796864, free=1184460800)
2023-12-05 13:21:43,023:INFO:Physical Core: 6
2023-12-05 13:21:43,023:INFO:Logical Core: 12
2023-12-05 13:21:43,023:INFO:Checking libraries
2023-12-05 13:21:43,023:INFO:System:
2023-12-05 13:21:43,023:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-12-05 13:21:43,023:INFO:executable: C:\Users\Marcio Rodrigues\anaconda3\python.exe
2023-12-05 13:21:43,023:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-05 13:21:43,023:INFO:PyCaret required dependencies:
2023-12-05 13:21:43,023:INFO:                 pip: 23.3.1
2023-12-05 13:21:43,023:INFO:          setuptools: 63.4.1
2023-12-05 13:21:43,023:INFO:             pycaret: 3.0.0
2023-12-05 13:21:43,023:INFO:             IPython: 7.31.1
2023-12-05 13:21:43,029:INFO:          ipywidgets: 7.6.5
2023-12-05 13:21:43,029:INFO:                tqdm: 4.64.1
2023-12-05 13:21:43,029:INFO:               numpy: 1.24.4
2023-12-05 13:21:43,029:INFO:              pandas: 2.1.3
2023-12-05 13:21:43,029:INFO:              jinja2: 3.1.2
2023-12-05 13:21:43,029:INFO:               scipy: 1.9.1
2023-12-05 13:21:43,029:INFO:              joblib: 1.2.0
2023-12-05 13:21:43,029:INFO:             sklearn: 1.1.2
2023-12-05 13:21:43,029:INFO:                pyod: 1.0.9
2023-12-05 13:21:43,029:INFO:            imblearn: 0.10.1
2023-12-05 13:21:43,029:INFO:   category_encoders: 2.6.0
2023-12-05 13:21:43,029:INFO:            lightgbm: 3.3.5
2023-12-05 13:21:43,029:INFO:               numba: 0.55.1
2023-12-05 13:21:43,029:INFO:            requests: 2.28.1
2023-12-05 13:21:43,029:INFO:          matplotlib: 3.5.2
2023-12-05 13:21:43,029:INFO:          scikitplot: 0.3.7
2023-12-05 13:21:43,029:INFO:         yellowbrick: 1.5
2023-12-05 13:21:43,029:INFO:              plotly: 5.9.0
2023-12-05 13:21:43,029:INFO:             kaleido: 0.2.1
2023-12-05 13:21:43,029:INFO:         statsmodels: 0.13.2
2023-12-05 13:21:43,029:INFO:              sktime: 0.17.2
2023-12-05 13:21:43,029:INFO:               tbats: 1.1.3
2023-12-05 13:21:43,029:INFO:            pmdarima: 2.0.3
2023-12-05 13:21:43,029:INFO:              psutil: 5.9.0
2023-12-05 13:21:43,029:INFO:PyCaret optional dependencies:
2023-12-05 13:21:43,079:INFO:                shap: 0.41.0
2023-12-05 13:21:43,079:INFO:           interpret: Not installed
2023-12-05 13:21:43,079:INFO:                umap: 0.5.4
2023-12-05 13:21:43,079:INFO:    pandas_profiling: Not installed
2023-12-05 13:21:43,079:INFO:  explainerdashboard: Not installed
2023-12-05 13:21:43,079:INFO:             autoviz: Not installed
2023-12-05 13:21:43,079:INFO:           fairlearn: Not installed
2023-12-05 13:21:43,079:INFO:             xgboost: Not installed
2023-12-05 13:21:43,079:INFO:            catboost: Not installed
2023-12-05 13:21:43,079:INFO:              kmodes: Not installed
2023-12-05 13:21:43,079:INFO:             mlxtend: Not installed
2023-12-05 13:21:43,079:INFO:       statsforecast: Not installed
2023-12-05 13:21:43,079:INFO:        tune_sklearn: Not installed
2023-12-05 13:21:43,079:INFO:                 ray: Not installed
2023-12-05 13:21:43,079:INFO:            hyperopt: Not installed
2023-12-05 13:21:43,079:INFO:              optuna: Not installed
2023-12-05 13:21:43,079:INFO:               skopt: Not installed
2023-12-05 13:21:43,079:INFO:              mlflow: Not installed
2023-12-05 13:21:43,079:INFO:              gradio: Not installed
2023-12-05 13:21:43,079:INFO:             fastapi: Not installed
2023-12-05 13:21:43,079:INFO:             uvicorn: Not installed
2023-12-05 13:21:43,079:INFO:              m2cgen: Not installed
2023-12-05 13:21:43,079:INFO:           evidently: Not installed
2023-12-05 13:21:43,079:INFO:               fugue: Not installed
2023-12-05 13:21:43,079:INFO:           streamlit: Not installed
2023-12-05 13:21:43,079:INFO:             prophet: Not installed
2023-12-05 13:21:43,079:INFO:None
2023-12-05 13:21:43,079:INFO:Set up data.
2023-12-05 13:21:43,132:INFO:Set up train/test split.
2023-12-05 13:21:43,179:INFO:Set up index.
2023-12-05 13:21:43,179:INFO:Set up folding strategy.
2023-12-05 13:21:43,179:INFO:Assigning column types.
2023-12-05 13:21:43,190:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-05 13:21:43,244:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 13:21:43,254:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:21:43,329:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:43,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:43,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 13:21:43,619:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:21:43,671:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:43,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:43,671:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-05 13:21:43,750:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:21:43,789:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:43,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:43,849:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:21:43,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:43,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:43,889:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-05 13:21:43,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:43,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:44,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:44,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:44,104:INFO:Preparing preprocessing pipeline...
2023-12-05 13:21:44,107:INFO:Set up simple imputation.
2023-12-05 13:21:44,114:INFO:Set up encoding of ordinal features.
2023-12-05 13:21:44,121:INFO:Set up encoding of categorical features.
2023-12-05 13:21:44,121:INFO:Set up column name cleaning.
2023-12-05 13:21:44,171:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:21:44,171:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:21:44,171:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:21:44,192:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:21:44,192:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:21:44,192:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:21:44,212:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:21:44,212:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:21:44,212:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:21:44,260:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:21:44,261:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:21:44,261:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:21:44,309:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:21:44,309:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,322:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,369:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,409:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:21:44,419:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,423:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,426:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,429:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,432:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,433:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,441:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,449:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,457:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,465:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,472:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,479:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,529:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,541:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,547:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,554:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,559:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,829:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,829:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,844:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,849:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,856:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:44,864:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:45,194:INFO:Finished creating preprocessing pipeline.
2023-12-05 13:21:45,221:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['education-num'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='median',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=LeaveOneOutEncoder(cols=['native-country'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=123,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-05 13:21:45,221:INFO:Creating final display dataframe.
2023-12-05 13:21:45,288:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:21:45,289:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:21:45,289:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:21:45,309:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:21:45,309:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:21:45,309:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:21:45,379:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:45,729:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:21:45,729:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:21:45,729:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:21:45,749:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:21:45,749:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:21:45,749:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:21:45,779:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:45,826:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:45,834:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:45,838:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:45,842:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:45,846:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:45,851:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:21:46,274:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target       income >50K
2                   Target type            Binary
3           Original data shape       (32561, 14)
4        Transformed data shape       (32561, 64)
5   Transformed train set shape       (22792, 64)
6    Transformed test set shape        (9769, 64)
7              Ordinal features                 1
8              Numeric features                 1
9          Categorical features                 8
10     Rows with missing values             40.7%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation            median
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              1bc3
2023-12-05 13:21:46,391:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:46,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:46,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:46,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:21:46,479:INFO:setup() successfully completed in 7.4s...............
2023-12-05 13:22:43,532:INFO:PyCaret ClassificationExperiment
2023-12-05 13:22:43,532:INFO:Logging name: clf-default-name
2023-12-05 13:22:43,532:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-05 13:22:43,532:INFO:version 3.0.0
2023-12-05 13:22:43,533:INFO:Initializing setup()
2023-12-05 13:22:43,533:INFO:self.USI: eb8d
2023-12-05 13:22:43,533:INFO:self._variable_keys: {'X', 'y', 'y_test', '_available_plots', 'fold_groups_param', 'gpu_n_jobs_param', 'target_param', 'is_multiclass', 'USI', 'logging_param', 'log_plots_param', 'gpu_param', 'pipeline', 'idx', 'X_test', 'X_train', 'n_jobs_param', 'data', 'seed', 'exp_id', 'y_train', 'exp_name_log', '_ml_usecase', 'memory', 'html_param', 'fix_imbalance', 'fold_shuffle_param', 'fold_generator'}
2023-12-05 13:22:43,533:INFO:Checking environment
2023-12-05 13:22:43,533:INFO:python_version: 3.9.13
2023-12-05 13:22:43,533:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-12-05 13:22:43,533:INFO:machine: AMD64
2023-12-05 13:22:43,533:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-05 13:22:43,533:INFO:Memory: svmem(total=33942257664, available=1227968512, percent=96.4, used=32714289152, free=1227968512)
2023-12-05 13:22:43,533:INFO:Physical Core: 6
2023-12-05 13:22:43,533:INFO:Logical Core: 12
2023-12-05 13:22:43,533:INFO:Checking libraries
2023-12-05 13:22:43,533:INFO:System:
2023-12-05 13:22:43,533:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-12-05 13:22:43,533:INFO:executable: C:\Users\Marcio Rodrigues\anaconda3\python.exe
2023-12-05 13:22:43,533:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-05 13:22:43,533:INFO:PyCaret required dependencies:
2023-12-05 13:22:43,534:INFO:                 pip: 23.3.1
2023-12-05 13:22:43,534:INFO:          setuptools: 63.4.1
2023-12-05 13:22:43,534:INFO:             pycaret: 3.0.0
2023-12-05 13:22:43,534:INFO:             IPython: 7.31.1
2023-12-05 13:22:43,534:INFO:          ipywidgets: 7.6.5
2023-12-05 13:22:43,534:INFO:                tqdm: 4.64.1
2023-12-05 13:22:43,534:INFO:               numpy: 1.24.4
2023-12-05 13:22:43,534:INFO:              pandas: 2.1.3
2023-12-05 13:22:43,534:INFO:              jinja2: 3.1.2
2023-12-05 13:22:43,534:INFO:               scipy: 1.9.1
2023-12-05 13:22:43,534:INFO:              joblib: 1.2.0
2023-12-05 13:22:43,534:INFO:             sklearn: 1.1.2
2023-12-05 13:22:43,534:INFO:                pyod: 1.0.9
2023-12-05 13:22:43,534:INFO:            imblearn: 0.10.1
2023-12-05 13:22:43,534:INFO:   category_encoders: 2.6.0
2023-12-05 13:22:43,534:INFO:            lightgbm: 3.3.5
2023-12-05 13:22:43,534:INFO:               numba: 0.55.1
2023-12-05 13:22:43,534:INFO:            requests: 2.28.1
2023-12-05 13:22:43,534:INFO:          matplotlib: 3.5.2
2023-12-05 13:22:43,534:INFO:          scikitplot: 0.3.7
2023-12-05 13:22:43,534:INFO:         yellowbrick: 1.5
2023-12-05 13:22:43,534:INFO:              plotly: 5.9.0
2023-12-05 13:22:43,534:INFO:             kaleido: 0.2.1
2023-12-05 13:22:43,534:INFO:         statsmodels: 0.13.2
2023-12-05 13:22:43,534:INFO:              sktime: 0.17.2
2023-12-05 13:22:43,535:INFO:               tbats: 1.1.3
2023-12-05 13:22:43,535:INFO:            pmdarima: 2.0.3
2023-12-05 13:22:43,535:INFO:              psutil: 5.9.0
2023-12-05 13:22:43,535:INFO:PyCaret optional dependencies:
2023-12-05 13:22:43,535:INFO:                shap: 0.41.0
2023-12-05 13:22:43,535:INFO:           interpret: Not installed
2023-12-05 13:22:43,535:INFO:                umap: 0.5.4
2023-12-05 13:22:43,535:INFO:    pandas_profiling: Not installed
2023-12-05 13:22:43,536:INFO:  explainerdashboard: Not installed
2023-12-05 13:22:43,536:INFO:             autoviz: Not installed
2023-12-05 13:22:43,536:INFO:           fairlearn: Not installed
2023-12-05 13:22:43,536:INFO:             xgboost: Not installed
2023-12-05 13:22:43,536:INFO:            catboost: Not installed
2023-12-05 13:22:43,536:INFO:              kmodes: Not installed
2023-12-05 13:22:43,536:INFO:             mlxtend: Not installed
2023-12-05 13:22:43,536:INFO:       statsforecast: Not installed
2023-12-05 13:22:43,536:INFO:        tune_sklearn: Not installed
2023-12-05 13:22:43,536:INFO:                 ray: Not installed
2023-12-05 13:22:43,536:INFO:            hyperopt: Not installed
2023-12-05 13:22:43,536:INFO:              optuna: Not installed
2023-12-05 13:22:43,536:INFO:               skopt: Not installed
2023-12-05 13:22:43,536:INFO:              mlflow: Not installed
2023-12-05 13:22:43,536:INFO:              gradio: Not installed
2023-12-05 13:22:43,536:INFO:             fastapi: Not installed
2023-12-05 13:22:43,536:INFO:             uvicorn: Not installed
2023-12-05 13:22:43,536:INFO:              m2cgen: Not installed
2023-12-05 13:22:43,536:INFO:           evidently: Not installed
2023-12-05 13:22:43,536:INFO:               fugue: Not installed
2023-12-05 13:22:43,536:INFO:           streamlit: Not installed
2023-12-05 13:22:43,536:INFO:             prophet: Not installed
2023-12-05 13:22:43,537:INFO:None
2023-12-05 13:22:43,537:INFO:Set up data.
2023-12-05 13:22:43,585:INFO:Set up train/test split.
2023-12-05 13:22:43,609:INFO:Set up index.
2023-12-05 13:22:43,610:INFO:Set up folding strategy.
2023-12-05 13:22:43,610:INFO:Assigning column types.
2023-12-05 13:22:43,619:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-05 13:22:43,689:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 13:22:43,689:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:22:43,739:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:43,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:43,803:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 13:22:43,803:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:22:43,839:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:43,846:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:43,846:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-05 13:22:43,909:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:22:43,959:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:43,959:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:44,019:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:22:44,069:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:44,069:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:44,069:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-05 13:22:44,183:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:44,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:44,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:44,289:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:44,289:INFO:Preparing preprocessing pipeline...
2023-12-05 13:22:44,294:INFO:Set up simple imputation.
2023-12-05 13:22:44,304:INFO:Set up encoding of ordinal features.
2023-12-05 13:22:44,309:INFO:Set up encoding of categorical features.
2023-12-05 13:22:44,309:INFO:Set up column name cleaning.
2023-12-05 13:22:44,336:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:22:44,336:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:22:44,336:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:22:44,353:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:22:44,353:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:22:44,354:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:22:44,377:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:22:44,377:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:22:44,379:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:22:44,417:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:22:44,418:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:22:44,418:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:22:44,475:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:22:44,480:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:44,487:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:44,524:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:44,643:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:44,651:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:44,661:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:44,672:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:44,685:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:44,699:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:45,108:INFO:Finished creating preprocessing pipeline.
2023-12-05 13:22:45,150:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['education-num'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='median',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=LeaveOneOutEncoder(cols=['native-country'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=123,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-05 13:22:45,150:INFO:Creating final display dataframe.
2023-12-05 13:22:45,242:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:22:45,242:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:22:45,242:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:22:45,271:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:22:45,271:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:22:45,271:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:22:45,333:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:45,739:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:22:45,739:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:22:45,739:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:22:45,762:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:22:45,763:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:22:45,763:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:22:45,802:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:45,857:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:45,864:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:45,874:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:45,879:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:45,886:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:45,891:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:22:46,465:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target       income >50K
2                   Target type            Binary
3           Original data shape       (32561, 14)
4        Transformed data shape       (32561, 64)
5   Transformed train set shape       (22792, 64)
6    Transformed test set shape        (9769, 64)
7              Ordinal features                 1
8              Numeric features                 1
9          Categorical features                 8
10     Rows with missing values             40.7%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation            median
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              eb8d
2023-12-05 13:22:46,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:46,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:46,718:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:46,719:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:22:46,719:INFO:setup() successfully completed in 5.57s...............
2023-12-05 13:22:49,966:INFO:Initializing get_config()
2023-12-05 13:22:49,967:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000202E1756040>, variable=X_train)
2023-12-05 13:22:49,967:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2023-12-05 13:22:49,975:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-12-05 13:22:49,992:INFO:Variable:  returned as        age         workclass  education  education-num      marital-status  \
31955   46         Local-gov  Assoc-voc           11.0            Divorced   
4817    27           Private  Bachelors           13.0       Never-married   
12207   33           Private    Masters           14.0  Married-civ-spouse   
13112   60           Private  Bachelors           13.0  Married-civ-spouse   
11002   25           Private       10th            6.0       Never-married   
...    ...               ...        ...            ...                 ...   
2998    38           Private    HS-grad            9.0  Married-civ-spouse   
6375    50  Self-emp-not-inc    HS-grad            9.0  Married-civ-spouse   
1757    40  Self-emp-not-inc    HS-grad            9.0       Never-married   
27609   67  Self-emp-not-inc    HS-grad            9.0  Married-civ-spouse   
27094   24           Private  Assoc-voc           11.0       Never-married   

              occupation   relationship   race     sex  capital-gain  \
31955    Exec-managerial  Not-in-family  White  Female           NaN   
4817     Exec-managerial  Not-in-family  White  Female           0.0   
12207     Prof-specialty        Husband  White    Male       15024.0   
13112    Exec-managerial        Husband  White    Male           0.0   
11002       Craft-repair      Own-child  White    Male           NaN   
...                  ...            ...    ...     ...           ...   
2998   Handlers-cleaners        Husband  White    Male        2829.0   
6375     Farming-fishing        Husband  White    Male           0.0   
1757     Farming-fishing  Not-in-family  White    Male           0.0   
27609    Farming-fishing        Husband  White    Male           0.0   
27094       Craft-repair      Own-child  White    Male           0.0   

       capital-loss  hours-per-week native-country  
31955             0              36  United-States  
4817              0              40  United-States  
12207             0              40  United-States  
13112             0              45  United-States  
11002             0              40  United-States  
...             ...             ...            ...  
2998              0              30         Mexico  
6375           2051              20  United-States  
1757              0              70  United-States  
27609             0              55  United-States  
27094             0              40  United-States  

[22792 rows x 13 columns]
2023-12-05 13:22:49,992:INFO:get_config() successfully completed......................................
2023-12-05 13:23:13,776:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 13:23:15,950:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-05 13:23:15,950:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-05 13:23:15,950:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-05 13:23:15,950:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-05 13:23:17,982:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-12-05 13:23:21,783:INFO:PyCaret ClassificationExperiment
2023-12-05 13:23:21,783:INFO:Logging name: clf-default-name
2023-12-05 13:23:21,783:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-05 13:23:21,783:INFO:version 3.0.0
2023-12-05 13:23:21,784:INFO:Initializing setup()
2023-12-05 13:23:21,784:INFO:self.USI: 2496
2023-12-05 13:23:21,784:INFO:self._variable_keys: {'fix_imbalance', 'memory', '_available_plots', 'y', 'gpu_param', 'exp_name_log', 'fold_generator', 'pipeline', 'is_multiclass', 'exp_id', 'y_test', 'seed', 'X_train', '_ml_usecase', 'target_param', 'X_test', 'logging_param', 'fold_groups_param', 'n_jobs_param', 'idx', 'y_train', 'gpu_n_jobs_param', 'fold_shuffle_param', 'X', 'data', 'html_param', 'log_plots_param', 'USI'}
2023-12-05 13:23:21,784:INFO:Checking environment
2023-12-05 13:23:21,784:INFO:python_version: 3.9.13
2023-12-05 13:23:21,784:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-12-05 13:23:21,784:INFO:machine: AMD64
2023-12-05 13:23:21,784:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-05 13:23:21,784:INFO:Memory: svmem(total=33942257664, available=1078267904, percent=96.8, used=32863989760, free=1078267904)
2023-12-05 13:23:21,784:INFO:Physical Core: 6
2023-12-05 13:23:21,785:INFO:Logical Core: 12
2023-12-05 13:23:21,785:INFO:Checking libraries
2023-12-05 13:23:21,785:INFO:System:
2023-12-05 13:23:21,785:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-12-05 13:23:21,785:INFO:executable: C:\Users\Marcio Rodrigues\anaconda3\python.exe
2023-12-05 13:23:21,785:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-05 13:23:21,785:INFO:PyCaret required dependencies:
2023-12-05 13:23:21,785:INFO:                 pip: 23.3.1
2023-12-05 13:23:21,785:INFO:          setuptools: 63.4.1
2023-12-05 13:23:21,785:INFO:             pycaret: 3.0.0
2023-12-05 13:23:21,785:INFO:             IPython: 7.31.1
2023-12-05 13:23:21,785:INFO:          ipywidgets: 7.6.5
2023-12-05 13:23:21,785:INFO:                tqdm: 4.64.1
2023-12-05 13:23:21,785:INFO:               numpy: 1.24.4
2023-12-05 13:23:21,785:INFO:              pandas: 2.1.3
2023-12-05 13:23:21,785:INFO:              jinja2: 3.1.2
2023-12-05 13:23:21,785:INFO:               scipy: 1.9.1
2023-12-05 13:23:21,785:INFO:              joblib: 1.2.0
2023-12-05 13:23:21,785:INFO:             sklearn: 1.1.2
2023-12-05 13:23:21,785:INFO:                pyod: 1.0.9
2023-12-05 13:23:21,785:INFO:            imblearn: 0.10.1
2023-12-05 13:23:21,785:INFO:   category_encoders: 2.6.0
2023-12-05 13:23:21,785:INFO:            lightgbm: 3.3.5
2023-12-05 13:23:21,785:INFO:               numba: 0.55.1
2023-12-05 13:23:21,785:INFO:            requests: 2.28.1
2023-12-05 13:23:21,787:INFO:          matplotlib: 3.5.2
2023-12-05 13:23:21,787:INFO:          scikitplot: 0.3.7
2023-12-05 13:23:21,787:INFO:         yellowbrick: 1.5
2023-12-05 13:23:21,787:INFO:              plotly: 5.9.0
2023-12-05 13:23:21,787:INFO:             kaleido: 0.2.1
2023-12-05 13:23:21,787:INFO:         statsmodels: 0.13.2
2023-12-05 13:23:21,787:INFO:              sktime: 0.17.2
2023-12-05 13:23:21,787:INFO:               tbats: 1.1.3
2023-12-05 13:23:21,787:INFO:            pmdarima: 2.0.3
2023-12-05 13:23:21,787:INFO:              psutil: 5.9.0
2023-12-05 13:23:21,787:INFO:PyCaret optional dependencies:
2023-12-05 13:23:21,836:INFO:                shap: 0.41.0
2023-12-05 13:23:21,836:INFO:           interpret: Not installed
2023-12-05 13:23:21,836:INFO:                umap: 0.5.4
2023-12-05 13:23:21,836:INFO:    pandas_profiling: Not installed
2023-12-05 13:23:21,836:INFO:  explainerdashboard: Not installed
2023-12-05 13:23:21,836:INFO:             autoviz: Not installed
2023-12-05 13:23:21,836:INFO:           fairlearn: Not installed
2023-12-05 13:23:21,836:INFO:             xgboost: Not installed
2023-12-05 13:23:21,836:INFO:            catboost: Not installed
2023-12-05 13:23:21,836:INFO:              kmodes: Not installed
2023-12-05 13:23:21,836:INFO:             mlxtend: Not installed
2023-12-05 13:23:21,836:INFO:       statsforecast: Not installed
2023-12-05 13:23:21,836:INFO:        tune_sklearn: Not installed
2023-12-05 13:23:21,836:INFO:                 ray: Not installed
2023-12-05 13:23:21,836:INFO:            hyperopt: Not installed
2023-12-05 13:23:21,836:INFO:              optuna: Not installed
2023-12-05 13:23:21,836:INFO:               skopt: Not installed
2023-12-05 13:23:21,836:INFO:              mlflow: Not installed
2023-12-05 13:23:21,839:INFO:              gradio: Not installed
2023-12-05 13:23:21,839:INFO:             fastapi: Not installed
2023-12-05 13:23:21,839:INFO:             uvicorn: Not installed
2023-12-05 13:23:21,839:INFO:              m2cgen: Not installed
2023-12-05 13:23:21,839:INFO:           evidently: Not installed
2023-12-05 13:23:21,839:INFO:               fugue: Not installed
2023-12-05 13:23:21,839:INFO:           streamlit: Not installed
2023-12-05 13:23:21,839:INFO:             prophet: Not installed
2023-12-05 13:23:21,839:INFO:None
2023-12-05 13:23:21,839:INFO:Set up data.
2023-12-05 13:23:21,889:INFO:Set up train/test split.
2023-12-05 13:23:21,925:INFO:Set up index.
2023-12-05 13:23:21,926:INFO:Set up folding strategy.
2023-12-05 13:23:21,926:INFO:Assigning column types.
2023-12-05 13:23:21,933:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-05 13:23:22,003:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 13:23:22,009:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:23:22,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:22,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:22,207:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 13:23:22,209:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:23:22,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:22,258:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:22,258:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-05 13:23:22,316:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:23:22,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:22,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:22,422:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:23:22,474:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:22,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:22,475:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-05 13:23:22,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:22,591:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:22,711:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:22,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:22,714:INFO:Preparing preprocessing pipeline...
2023-12-05 13:23:22,717:INFO:Set up simple imputation.
2023-12-05 13:23:22,727:INFO:Set up encoding of ordinal features.
2023-12-05 13:23:22,731:INFO:Set up encoding of categorical features.
2023-12-05 13:23:22,732:INFO:Set up column name cleaning.
2023-12-05 13:23:22,766:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:23:22,767:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:23:22,767:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:23:22,789:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:23:22,789:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:23:22,789:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:23:22,812:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:23:22,812:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:23:22,813:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:23:22,849:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:23:22,849:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:23:22,849:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:23:22,902:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:23:22,907:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:22,916:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:22,959:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,000:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:23:23,004:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,009:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,013:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,017:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,019:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,023:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,038:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,051:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,065:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,076:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,090:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,105:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,144:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,157:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,165:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,172:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,177:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,183:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,487:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,497:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,508:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,533:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,542:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:23,919:INFO:Finished creating preprocessing pipeline.
2023-12-05 13:23:23,954:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'education-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated')))...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=LeaveOneOutEncoder(cols=['native-country'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=123,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-05 13:23:23,954:INFO:Creating final display dataframe.
2023-12-05 13:23:24,032:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:23:24,032:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:23:24,032:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:23:24,052:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:23:24,053:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:23:24,053:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:23:24,104:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:24,591:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:23:24,591:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:23:24,591:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:23:24,612:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:23:24,613:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:23:24,613:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:23:24,644:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:24,716:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:24,723:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:24,729:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:24,736:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:24,744:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:24,749:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:23:25,289:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target       income >50K
2                   Target type            Binary
3           Original data shape       (32561, 14)
4        Transformed data shape       (32561, 64)
5   Transformed train set shape       (22792, 64)
6    Transformed test set shape        (9769, 64)
7              Ordinal features                 1
8              Numeric features                 5
9          Categorical features                 8
10     Rows with missing values              7.4%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              2496
2023-12-05 13:23:25,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:25,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:25,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:25,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:23:25,544:INFO:setup() successfully completed in 6.07s...............
2023-12-05 13:23:37,441:INFO:Initializing get_config()
2023-12-05 13:23:37,442:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027D8010A550>, variable=X_train)
2023-12-05 13:23:37,442:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2023-12-05 13:23:37,445:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-12-05 13:23:37,461:INFO:Variable:  returned as        age         workclass  education  education-num      marital-status  \
31955   46         Local-gov  Assoc-voc             11            Divorced   
4817    27           Private  Bachelors             13       Never-married   
12207   33           Private    Masters             14  Married-civ-spouse   
13112   60           Private  Bachelors             13  Married-civ-spouse   
11002   25           Private       10th              6       Never-married   
...    ...               ...        ...            ...                 ...   
2998    38           Private    HS-grad              9  Married-civ-spouse   
6375    50  Self-emp-not-inc    HS-grad              9  Married-civ-spouse   
1757    40  Self-emp-not-inc    HS-grad              9       Never-married   
27609   67  Self-emp-not-inc    HS-grad              9  Married-civ-spouse   
27094   24           Private  Assoc-voc             11       Never-married   

              occupation   relationship   race     sex  capital-gain  \
31955    Exec-managerial  Not-in-family  White  Female             0   
4817     Exec-managerial  Not-in-family  White  Female             0   
12207     Prof-specialty        Husband  White    Male         15024   
13112    Exec-managerial        Husband  White    Male             0   
11002       Craft-repair      Own-child  White    Male             0   
...                  ...            ...    ...     ...           ...   
2998   Handlers-cleaners        Husband  White    Male          2829   
6375     Farming-fishing        Husband  White    Male             0   
1757     Farming-fishing  Not-in-family  White    Male             0   
27609    Farming-fishing        Husband  White    Male             0   
27094       Craft-repair      Own-child  White    Male             0   

       capital-loss  hours-per-week native-country  
31955             0              36  United-States  
4817              0              40  United-States  
12207             0              40  United-States  
13112             0              45  United-States  
11002             0              40  United-States  
...             ...             ...            ...  
2998              0              30         Mexico  
6375           2051              20  United-States  
1757              0              70  United-States  
27609             0              55  United-States  
27094             0              40  United-States  

[22792 rows x 13 columns]
2023-12-05 13:23:37,462:INFO:get_config() successfully completed......................................
2023-12-05 13:24:59,987:WARNING:C:\Users\Marcio Rodrigues\AppData\Local\Temp\ipykernel_35460\644346218.py:1: UserWarning: 

`distplot` is a deprecated function and will be removed in seaborn v0.14.0.

Please adapt your code to use either `displot` (a figure-level function with
similar flexibility) or `histplot` (an axes-level function for histograms).

For a guide to updating your code to use the new functions, please see
https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751

  sns.distplot(dataset["education-num"],bins=10)

2023-12-05 13:25:02,818:WARNING:C:\Users\Marcio Rodrigues\AppData\Local\Temp\ipykernel_35460\2756222085.py:1: UserWarning: 

`distplot` is a deprecated function and will be removed in seaborn v0.14.0.

Please adapt your code to use either `displot` (a figure-level function with
similar flexibility) or `histplot` (an axes-level function for histograms).

For a guide to updating your code to use the new functions, please see
https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751

  sns.distplot(df_transformed["education-num"],bins=10)

2023-12-05 13:26:36,274:INFO:PyCaret ClassificationExperiment
2023-12-05 13:26:36,274:INFO:Logging name: clf-default-name
2023-12-05 13:26:36,274:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-05 13:26:36,274:INFO:version 3.0.0
2023-12-05 13:26:36,274:INFO:Initializing setup()
2023-12-05 13:26:36,274:INFO:self.USI: 93ac
2023-12-05 13:26:36,274:INFO:self._variable_keys: {'X', 'y', 'y_test', '_available_plots', 'fold_groups_param', 'gpu_n_jobs_param', 'target_param', 'is_multiclass', 'USI', 'logging_param', 'log_plots_param', 'gpu_param', 'pipeline', 'idx', 'X_test', 'X_train', 'n_jobs_param', 'data', 'seed', 'exp_id', 'y_train', 'exp_name_log', '_ml_usecase', 'memory', 'html_param', 'fix_imbalance', 'fold_shuffle_param', 'fold_generator'}
2023-12-05 13:26:36,274:INFO:Checking environment
2023-12-05 13:26:36,274:INFO:python_version: 3.9.13
2023-12-05 13:26:36,274:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-12-05 13:26:36,274:INFO:machine: AMD64
2023-12-05 13:26:36,274:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-05 13:26:36,274:INFO:Memory: svmem(total=33942257664, available=1771171840, percent=94.8, used=32171085824, free=1771171840)
2023-12-05 13:26:36,274:INFO:Physical Core: 6
2023-12-05 13:26:36,274:INFO:Logical Core: 12
2023-12-05 13:26:36,274:INFO:Checking libraries
2023-12-05 13:26:36,274:INFO:System:
2023-12-05 13:26:36,274:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-12-05 13:26:36,274:INFO:executable: C:\Users\Marcio Rodrigues\anaconda3\python.exe
2023-12-05 13:26:36,274:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-05 13:26:36,274:INFO:PyCaret required dependencies:
2023-12-05 13:26:36,274:INFO:                 pip: 23.3.1
2023-12-05 13:26:36,274:INFO:          setuptools: 63.4.1
2023-12-05 13:26:36,274:INFO:             pycaret: 3.0.0
2023-12-05 13:26:36,274:INFO:             IPython: 7.31.1
2023-12-05 13:26:36,274:INFO:          ipywidgets: 7.6.5
2023-12-05 13:26:36,274:INFO:                tqdm: 4.64.1
2023-12-05 13:26:36,274:INFO:               numpy: 1.24.4
2023-12-05 13:26:36,274:INFO:              pandas: 2.1.3
2023-12-05 13:26:36,274:INFO:              jinja2: 3.1.2
2023-12-05 13:26:36,274:INFO:               scipy: 1.9.1
2023-12-05 13:26:36,274:INFO:              joblib: 1.2.0
2023-12-05 13:26:36,274:INFO:             sklearn: 1.1.2
2023-12-05 13:26:36,274:INFO:                pyod: 1.0.9
2023-12-05 13:26:36,274:INFO:            imblearn: 0.10.1
2023-12-05 13:26:36,274:INFO:   category_encoders: 2.6.0
2023-12-05 13:26:36,274:INFO:            lightgbm: 3.3.5
2023-12-05 13:26:36,274:INFO:               numba: 0.55.1
2023-12-05 13:26:36,274:INFO:            requests: 2.28.1
2023-12-05 13:26:36,274:INFO:          matplotlib: 3.5.2
2023-12-05 13:26:36,274:INFO:          scikitplot: 0.3.7
2023-12-05 13:26:36,274:INFO:         yellowbrick: 1.5
2023-12-05 13:26:36,274:INFO:              plotly: 5.9.0
2023-12-05 13:26:36,274:INFO:             kaleido: 0.2.1
2023-12-05 13:26:36,274:INFO:         statsmodels: 0.13.2
2023-12-05 13:26:36,274:INFO:              sktime: 0.17.2
2023-12-05 13:26:36,274:INFO:               tbats: 1.1.3
2023-12-05 13:26:36,274:INFO:            pmdarima: 2.0.3
2023-12-05 13:26:36,274:INFO:              psutil: 5.9.0
2023-12-05 13:26:36,274:INFO:PyCaret optional dependencies:
2023-12-05 13:26:36,274:INFO:                shap: 0.41.0
2023-12-05 13:26:36,274:INFO:           interpret: Not installed
2023-12-05 13:26:36,274:INFO:                umap: 0.5.4
2023-12-05 13:26:36,274:INFO:    pandas_profiling: Not installed
2023-12-05 13:26:36,274:INFO:  explainerdashboard: Not installed
2023-12-05 13:26:36,274:INFO:             autoviz: Not installed
2023-12-05 13:26:36,274:INFO:           fairlearn: Not installed
2023-12-05 13:26:36,274:INFO:             xgboost: Not installed
2023-12-05 13:26:36,274:INFO:            catboost: Not installed
2023-12-05 13:26:36,274:INFO:              kmodes: Not installed
2023-12-05 13:26:36,274:INFO:             mlxtend: Not installed
2023-12-05 13:26:36,274:INFO:       statsforecast: Not installed
2023-12-05 13:26:36,274:INFO:        tune_sklearn: Not installed
2023-12-05 13:26:36,274:INFO:                 ray: Not installed
2023-12-05 13:26:36,274:INFO:            hyperopt: Not installed
2023-12-05 13:26:36,274:INFO:              optuna: Not installed
2023-12-05 13:26:36,274:INFO:               skopt: Not installed
2023-12-05 13:26:36,274:INFO:              mlflow: Not installed
2023-12-05 13:26:36,274:INFO:              gradio: Not installed
2023-12-05 13:26:36,274:INFO:             fastapi: Not installed
2023-12-05 13:26:36,274:INFO:             uvicorn: Not installed
2023-12-05 13:26:36,274:INFO:              m2cgen: Not installed
2023-12-05 13:26:36,274:INFO:           evidently: Not installed
2023-12-05 13:26:36,274:INFO:               fugue: Not installed
2023-12-05 13:26:36,274:INFO:           streamlit: Not installed
2023-12-05 13:26:36,274:INFO:             prophet: Not installed
2023-12-05 13:26:36,274:INFO:None
2023-12-05 13:26:36,274:INFO:Set up data.
2023-12-05 13:26:36,315:INFO:Set up train/test split.
2023-12-05 13:26:36,330:INFO:Set up index.
2023-12-05 13:26:36,330:INFO:Set up folding strategy.
2023-12-05 13:26:36,330:INFO:Assigning column types.
2023-12-05 13:26:36,330:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-05 13:26:36,393:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 13:26:36,393:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:26:36,441:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:36,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:36,495:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 13:26:36,495:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:26:36,520:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:36,520:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:36,520:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-05 13:26:36,605:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:26:36,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:36,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:36,705:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:26:36,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:36,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:36,727:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-05 13:26:36,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:36,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:36,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:36,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:36,933:INFO:Preparing preprocessing pipeline...
2023-12-05 13:26:36,933:INFO:Set up iterative imputation.
2023-12-05 13:26:36,933:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-12-05 13:26:36,949:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-12-05 13:26:36,963:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-12-05 13:26:37,058:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-12-05 13:26:37,131:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:37,132:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:37,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:37,234:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:26:37,282:INFO:Set up encoding of ordinal features.
2023-12-05 13:26:37,288:INFO:Set up encoding of categorical features.
2023-12-05 13:26:37,290:INFO:Set up column name cleaning.
2023-12-05 13:26:37,315:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:26:37,315:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:26:37,315:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:26:37,394:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:26:37,645:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:26:44,099:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:26:45,463:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:26:45,667:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:26:45,908:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:26:46,221:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:26:52,378:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:26:54,181:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:26:54,416:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:26:54,710:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:26:55,021:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:27:02,051:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:27:05,465:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:27:05,900:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:27:06,699:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:27:08,040:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:27:17,212:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:27:19,486:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:27:19,711:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:27:19,993:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:27:20,296:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:27:27,936:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:27:29,508:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:27:29,761:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-12-05 13:27:29,985:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\preprocess\iterative_imputer.py:402: ConvergenceWarning: [IterativeImputer] Early stopping criterion not reached.
  warnings.warn(

2023-12-05 13:27:32,317:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:231: UserWarning: Persisting input arguments took 1.25s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-12-05 13:27:33,540:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:27:33,541:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:27:33,541:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:27:35,407:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:238: UserWarning: Persisting input arguments took 1.24s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-12-05 13:27:35,428:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:27:35,428:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,440:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,472:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,487:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:27:35,487:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,487:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,487:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,487:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,487:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,503:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,503:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,503:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,518:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,518:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,530:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,536:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,555:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,566:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,566:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,582:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,582:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,582:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,790:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,804:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,804:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,804:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,804:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:35,820:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:36,056:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:36,130:INFO:Finished creating preprocessing pipeline.
2023-12-05 13:27:36,162:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbdt',
                                                                                              class_weight=None,
                                                                                              colsample_bytree=1.0,
                                                                                              importance_type='split',
                                                                                              learning_rate=0.1,
                                                                                              max_depth=-1,
                                                                                              min...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=LeaveOneOutEncoder(cols=['native-country'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=123,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-05 13:27:36,162:INFO:Creating final display dataframe.
2023-12-05 13:27:38,796:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:38,865:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:38,873:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:38,873:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:38,889:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:38,889:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:38,906:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:40,620:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:271: UserWarning: Persisting input arguments took 1.18s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_full_transform(

2023-12-05 13:27:42,989:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:27:42,990:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:27:42,990:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:27:44,560:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 1.24s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-12-05 13:27:44,577:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:44,635:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:44,640:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:44,640:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:44,640:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:44,640:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:44,655:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:27:46,072:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:271: UserWarning: Persisting input arguments took 1.26s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_full_transform(

2023-12-05 13:27:48,617:INFO:Setup _display_container:                         Description             Value
0                        Session id               123
1                            Target       income >50K
2                       Target type            Binary
3               Original data shape       (32561, 14)
4            Transformed data shape       (32561, 82)
5       Transformed train set shape       (22792, 82)
6        Transformed test set shape        (9769, 82)
7                  Ordinal features                 1
8                  Numeric features                 1
9              Categorical features                 8
10         Rows with missing values             40.7%
11                       Preprocess              True
12                  Imputation type         iterative
13  Iterative imputation iterations                 5
14        Numeric iterative imputer          lightgbm
15    Categorical iterative imputer          lightgbm
16         Maximum one-hot encoding                25
17                  Encoding method              None
18                   Fold Generator   StratifiedKFold
19                      Fold Number                10
20                         CPU Jobs                -1
21                          Use GPU             False
22                   Log Experiment             False
23                  Experiment Name  clf-default-name
24                              USI              93ac
2023-12-05 13:27:48,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:27:48,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:27:48,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:27:48,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:27:48,917:INFO:setup() successfully completed in 74.71s...............
2023-12-05 13:27:48,937:INFO:Initializing get_config()
2023-12-05 13:27:48,937:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000202E4DD4DC0>, variable=X_train)
2023-12-05 13:27:48,937:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2023-12-05 13:27:48,937:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:322: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-12-05 13:27:48,961:INFO:Variable:  returned as        age         workclass  education  education-num      marital-status  \
31955   46         Local-gov  Assoc-voc           11.0            Divorced   
4817    27           Private  Bachelors           13.0       Never-married   
12207   33           Private    Masters           14.0  Married-civ-spouse   
13112   60           Private  Bachelors           13.0  Married-civ-spouse   
11002   25           Private       10th            6.0       Never-married   
...    ...               ...        ...            ...                 ...   
2998    38           Private    HS-grad            9.0  Married-civ-spouse   
6375    50  Self-emp-not-inc    HS-grad            9.0  Married-civ-spouse   
1757    40  Self-emp-not-inc    HS-grad            9.0       Never-married   
27609   67  Self-emp-not-inc    HS-grad            9.0  Married-civ-spouse   
27094   24           Private  Assoc-voc           11.0       Never-married   

              occupation   relationship   race     sex  capital-gain  \
31955    Exec-managerial  Not-in-family  White  Female           NaN   
4817     Exec-managerial  Not-in-family  White  Female           0.0   
12207     Prof-specialty        Husband  White    Male       15024.0   
13112    Exec-managerial        Husband  White    Male           0.0   
11002       Craft-repair      Own-child  White    Male           NaN   
...                  ...            ...    ...     ...           ...   
2998   Handlers-cleaners        Husband  White    Male        2829.0   
6375     Farming-fishing        Husband  White    Male           0.0   
1757     Farming-fishing  Not-in-family  White    Male           0.0   
27609    Farming-fishing        Husband  White    Male           0.0   
27094       Craft-repair      Own-child  White    Male           0.0   

       capital-loss  hours-per-week native-country  
31955             0              36  United-States  
4817              0              40  United-States  
12207             0              40  United-States  
13112             0              45  United-States  
11002             0              40  United-States  
...             ...             ...            ...  
2998              0              30         Mexico  
6375           2051              20  United-States  
1757              0              70  United-States  
27609             0              55  United-States  
27094             0              40  United-States  

[22792 rows x 13 columns]
2023-12-05 13:27:48,961:INFO:get_config() successfully completed......................................
2023-12-05 13:27:49,071:WARNING:C:\Users\Marcio Rodrigues\AppData\Local\Temp\ipykernel_35460\644346218.py:1: UserWarning: 

`distplot` is a deprecated function and will be removed in seaborn v0.14.0.

Please adapt your code to use either `displot` (a figure-level function with
similar flexibility) or `histplot` (an axes-level function for histograms).

For a guide to updating your code to use the new functions, please see
https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751

  sns.distplot(dataset["education-num"],bins=10)

2023-12-05 13:27:49,411:WARNING:C:\Users\Marcio Rodrigues\AppData\Local\Temp\ipykernel_35460\2756222085.py:1: UserWarning: 

`distplot` is a deprecated function and will be removed in seaborn v0.14.0.

Please adapt your code to use either `displot` (a figure-level function with
similar flexibility) or `histplot` (an axes-level function for histograms).

For a guide to updating your code to use the new functions, please see
https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751

  sns.distplot(df_transformed["education-num"],bins=10)

2023-12-05 13:29:12,425:INFO:PyCaret ClassificationExperiment
2023-12-05 13:29:12,425:INFO:Logging name: clf-default-name
2023-12-05 13:29:12,425:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-05 13:29:12,425:INFO:version 3.0.0
2023-12-05 13:29:12,425:INFO:Initializing setup()
2023-12-05 13:29:12,425:INFO:self.USI: 0e67
2023-12-05 13:29:12,425:INFO:self._variable_keys: {'X', 'y', 'y_test', '_available_plots', 'fold_groups_param', 'gpu_n_jobs_param', 'target_param', 'is_multiclass', 'USI', 'logging_param', 'log_plots_param', 'gpu_param', 'pipeline', 'idx', 'X_test', 'X_train', 'n_jobs_param', 'data', 'seed', 'exp_id', 'y_train', 'exp_name_log', '_ml_usecase', 'memory', 'html_param', 'fix_imbalance', 'fold_shuffle_param', 'fold_generator'}
2023-12-05 13:29:12,425:INFO:Checking environment
2023-12-05 13:29:12,425:INFO:python_version: 3.9.13
2023-12-05 13:29:12,425:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-12-05 13:29:12,425:INFO:machine: AMD64
2023-12-05 13:29:12,425:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-05 13:29:12,427:INFO:Memory: svmem(total=33942257664, available=1660936192, percent=95.1, used=32281321472, free=1660936192)
2023-12-05 13:29:12,427:INFO:Physical Core: 6
2023-12-05 13:29:12,427:INFO:Logical Core: 12
2023-12-05 13:29:12,427:INFO:Checking libraries
2023-12-05 13:29:12,427:INFO:System:
2023-12-05 13:29:12,427:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-12-05 13:29:12,427:INFO:executable: C:\Users\Marcio Rodrigues\anaconda3\python.exe
2023-12-05 13:29:12,427:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-05 13:29:12,427:INFO:PyCaret required dependencies:
2023-12-05 13:29:12,427:INFO:                 pip: 23.3.1
2023-12-05 13:29:12,427:INFO:          setuptools: 63.4.1
2023-12-05 13:29:12,427:INFO:             pycaret: 3.0.0
2023-12-05 13:29:12,427:INFO:             IPython: 7.31.1
2023-12-05 13:29:12,427:INFO:          ipywidgets: 7.6.5
2023-12-05 13:29:12,427:INFO:                tqdm: 4.64.1
2023-12-05 13:29:12,427:INFO:               numpy: 1.24.4
2023-12-05 13:29:12,427:INFO:              pandas: 2.1.3
2023-12-05 13:29:12,427:INFO:              jinja2: 3.1.2
2023-12-05 13:29:12,427:INFO:               scipy: 1.9.1
2023-12-05 13:29:12,427:INFO:              joblib: 1.2.0
2023-12-05 13:29:12,427:INFO:             sklearn: 1.1.2
2023-12-05 13:29:12,427:INFO:                pyod: 1.0.9
2023-12-05 13:29:12,427:INFO:            imblearn: 0.10.1
2023-12-05 13:29:12,427:INFO:   category_encoders: 2.6.0
2023-12-05 13:29:12,427:INFO:            lightgbm: 3.3.5
2023-12-05 13:29:12,427:INFO:               numba: 0.55.1
2023-12-05 13:29:12,427:INFO:            requests: 2.28.1
2023-12-05 13:29:12,427:INFO:          matplotlib: 3.5.2
2023-12-05 13:29:12,427:INFO:          scikitplot: 0.3.7
2023-12-05 13:29:12,427:INFO:         yellowbrick: 1.5
2023-12-05 13:29:12,427:INFO:              plotly: 5.9.0
2023-12-05 13:29:12,427:INFO:             kaleido: 0.2.1
2023-12-05 13:29:12,427:INFO:         statsmodels: 0.13.2
2023-12-05 13:29:12,427:INFO:              sktime: 0.17.2
2023-12-05 13:29:12,427:INFO:               tbats: 1.1.3
2023-12-05 13:29:12,427:INFO:            pmdarima: 2.0.3
2023-12-05 13:29:12,427:INFO:              psutil: 5.9.0
2023-12-05 13:29:12,427:INFO:PyCaret optional dependencies:
2023-12-05 13:29:12,427:INFO:                shap: 0.41.0
2023-12-05 13:29:12,427:INFO:           interpret: Not installed
2023-12-05 13:29:12,427:INFO:                umap: 0.5.4
2023-12-05 13:29:12,427:INFO:    pandas_profiling: Not installed
2023-12-05 13:29:12,427:INFO:  explainerdashboard: Not installed
2023-12-05 13:29:12,427:INFO:             autoviz: Not installed
2023-12-05 13:29:12,427:INFO:           fairlearn: Not installed
2023-12-05 13:29:12,427:INFO:             xgboost: Not installed
2023-12-05 13:29:12,427:INFO:            catboost: Not installed
2023-12-05 13:29:12,427:INFO:              kmodes: Not installed
2023-12-05 13:29:12,427:INFO:             mlxtend: Not installed
2023-12-05 13:29:12,427:INFO:       statsforecast: Not installed
2023-12-05 13:29:12,427:INFO:        tune_sklearn: Not installed
2023-12-05 13:29:12,427:INFO:                 ray: Not installed
2023-12-05 13:29:12,427:INFO:            hyperopt: Not installed
2023-12-05 13:29:12,427:INFO:              optuna: Not installed
2023-12-05 13:29:12,427:INFO:               skopt: Not installed
2023-12-05 13:29:12,427:INFO:              mlflow: Not installed
2023-12-05 13:29:12,427:INFO:              gradio: Not installed
2023-12-05 13:29:12,427:INFO:             fastapi: Not installed
2023-12-05 13:29:12,427:INFO:             uvicorn: Not installed
2023-12-05 13:29:12,427:INFO:              m2cgen: Not installed
2023-12-05 13:29:12,427:INFO:           evidently: Not installed
2023-12-05 13:29:12,427:INFO:               fugue: Not installed
2023-12-05 13:29:12,427:INFO:           streamlit: Not installed
2023-12-05 13:29:12,427:INFO:             prophet: Not installed
2023-12-05 13:29:12,427:INFO:None
2023-12-05 13:29:12,427:INFO:Set up data.
2023-12-05 13:29:12,460:INFO:Set up train/test split.
2023-12-05 13:29:12,474:INFO:Set up index.
2023-12-05 13:29:12,474:INFO:Set up folding strategy.
2023-12-05 13:29:12,474:INFO:Assigning column types.
2023-12-05 13:29:12,481:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-05 13:29:12,528:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 13:29:12,528:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:29:12,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:12,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:12,604:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 13:29:12,605:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:29:12,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:12,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:12,635:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-05 13:29:12,681:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:29:12,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:12,717:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:12,759:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:29:12,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:12,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:12,793:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-05 13:29:12,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:12,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:12,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:12,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:12,962:INFO:Preparing preprocessing pipeline...
2023-12-05 13:29:12,964:INFO:Set up simple imputation.
2023-12-05 13:29:12,974:INFO:Set up encoding of ordinal features.
2023-12-05 13:29:12,976:INFO:Set up encoding of categorical features.
2023-12-05 13:29:12,976:INFO:Set up column name cleaning.
2023-12-05 13:29:12,998:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:12,998:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:12,998:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:13,014:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:13,018:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:13,018:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:13,030:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:13,030:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:13,030:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:13,054:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:13,054:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:13,054:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:13,107:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:13,107:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,117:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,151:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,187:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:13,187:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,187:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,196:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,196:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,196:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,196:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,210:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,210:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,210:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,225:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,225:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,241:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,272:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,272:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,272:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,288:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,288:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,305:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,532:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,547:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,547:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,563:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,563:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,579:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:13,821:INFO:Finished creating preprocessing pipeline.
2023-12-05 13:29:13,856:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['education-num'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=No...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=LeaveOneOutEncoder(cols=['native-country'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=123,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-05 13:29:13,856:INFO:Creating final display dataframe.
2023-12-05 13:29:13,909:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:13,909:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:13,909:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:13,913:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:13,913:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:13,913:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:13,976:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:14,259:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:14,259:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:14,259:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:14,261:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:14,275:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:14,275:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:14,291:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:14,338:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:14,338:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:14,338:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:14,354:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:14,354:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:14,354:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:14,699:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target       income >50K
2                   Target type            Binary
3           Original data shape       (32561, 14)
4        Transformed data shape       (32561, 64)
5   Transformed train set shape       (22792, 64)
6    Transformed test set shape        (9769, 64)
7              Ordinal features                 1
8              Numeric features                 1
9          Categorical features                 8
10     Rows with missing values             40.7%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              0e67
2023-12-05 13:29:14,798:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:14,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:14,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:14,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:29:14,911:INFO:setup() successfully completed in 5.29s...............
2023-12-05 13:29:14,911:INFO:Initializing create_model()
2023-12-05 13:29:14,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000202E4D7E6A0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'html': False})
2023-12-05 13:29:14,911:INFO:Checking exceptions
2023-12-05 13:29:14,911:INFO:Importing libraries
2023-12-05 13:29:14,911:INFO:Copying training dataset
2023-12-05 13:29:14,925:INFO:Defining folds
2023-12-05 13:29:14,925:INFO:Declaring metric variables
2023-12-05 13:29:14,925:INFO:Importing untrained model
2023-12-05 13:29:14,925:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-05 13:29:14,925:INFO:Starting cross validation
2023-12-05 13:29:14,925:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-05 13:29:45,043:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 13:29:45,043:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 13:29:45,043:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 13:29:45,043:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 13:29:45,043:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 13:29:45,043:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 13:29:51,386:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,386:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,386:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,386:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,386:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,386:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,386:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,386:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,387:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,387:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,387:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,387:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,387:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,387:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,387:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,387:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,387:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,387:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,387:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,387:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,388:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,388:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,388:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,388:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,388:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,388:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,403:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,404:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,404:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,405:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,405:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,407:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,407:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,407:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,408:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,408:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,408:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,408:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,408:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,408:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

se") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,408:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,408:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,408:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,409:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,409:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,409:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,409:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,409:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,409:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,409:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,410:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,410:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,410:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,433:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,433:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,434:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

se") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,434:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,434:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,434:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,435:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,435:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,438:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,438:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,438:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,438:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,439:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,439:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,439:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,439:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,440:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,440:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,440:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

se") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,440:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,440:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,441:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,441:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,441:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,442:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,442:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,442:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,443:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,504:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,504:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,504:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:51,520:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:51,595:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,600:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,600:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,601:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,606:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,606:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,606:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,607:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,608:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,609:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,610:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,610:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,611:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,612:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,614:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,615:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,616:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,616:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,618:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,620:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,620:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,620:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,623:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,624:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,627:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,628:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,630:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,633:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,634:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,668:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,670:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,671:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,673:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,676:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,677:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,682:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,682:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,682:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,688:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,737:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,740:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,743:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,745:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,745:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,746:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,746:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,749:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,749:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,750:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,750:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,751:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,751:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,753:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,754:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,755:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,755:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,756:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,756:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,757:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,757:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,757:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,758:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,759:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,759:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,760:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,760:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,760:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,760:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,761:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,761:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,762:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,763:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,763:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,764:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,764:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,764:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,765:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,765:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,766:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,766:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,767:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,767:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,768:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,768:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,769:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,770:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,770:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,770:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:51,771:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,771:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,772:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,772:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,774:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,774:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,775:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,775:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,776:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,778:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,778:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,779:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,780:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,780:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,781:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,782:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,783:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,784:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,786:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,786:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,787:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,788:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,790:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,790:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,792:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,794:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,795:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,796:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,796:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,797:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,798:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,800:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,800:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,801:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,801:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,803:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,805:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,807:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,809:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,810:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,811:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,812:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,812:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,813:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,815:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,817:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,820:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,822:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,823:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,824:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,825:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,825:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,825:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,826:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,828:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,828:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,831:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,832:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,833:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,834:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,835:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,836:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,838:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,839:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,840:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,840:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,843:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,844:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,846:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,848:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,848:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,849:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,852:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,856:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,857:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,860:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,869:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,872:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,872:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,889:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,895:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,896:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,897:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,897:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,897:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,899:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,900:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,903:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,903:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,904:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,906:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,907:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,908:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,909:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,911:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,912:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,913:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,915:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,916:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,917:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,917:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,918:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,919:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,921:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,938:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,939:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,939:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,939:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,939:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,939:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,939:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,939:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,939:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,939:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,939:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,954:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,955:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,955:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,955:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,955:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:51,986:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,597:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,609:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,607:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,610:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,613:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,620:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,621:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,624:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,628:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,633:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,635:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,639:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,639:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,639:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,641:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,643:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,645:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,647:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,643:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,650:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,654:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,655:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,659:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,660:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,661:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,661:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,662:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,667:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,669:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,670:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,672:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,673:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,673:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,674:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,679:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,682:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,685:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,685:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,688:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,692:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,698:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,698:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,701:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,705:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,706:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,706:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,715:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,716:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,717:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,722:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,722:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,723:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,735:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,743:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,755:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:52,784:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:53,335:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:53,341:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:53,344:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:53,389:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:53,390:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:53,425:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:53,438:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:53,438:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:53,466:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:53,467:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:29:54,650:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:54,650:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:54,651:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:54,681:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:54,682:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:54,682:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:54,734:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:54,805:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:54,809:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:54,815:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:54,820:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:54,822:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:54,829:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:54,985:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:54,986:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:54,986:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,001:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,002:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,002:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,030:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,032:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,032:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,033:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,035:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,035:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,038:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,039:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,039:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,047:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,048:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,048:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,048:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,049:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,049:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,066:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,066:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,068:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,068:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,069:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,069:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,071:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,072:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,077:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,078:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,079:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,079:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,079:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,080:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,100:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,101:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,101:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,104:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,114:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,114:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,118:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,119:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,119:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,127:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,128:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,128:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,129:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,132:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,134:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,138:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,139:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,143:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,145:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,148:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,150:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,152:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,153:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,153:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,154:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,154:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,154:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,154:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,155:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,157:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,158:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,159:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,159:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,166:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,171:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,173:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,179:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,180:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,182:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,182:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:29:55,182:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,182:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,182:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:29:55,182:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:29:55,187:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,188:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,190:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,191:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,194:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,196:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,197:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,197:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,199:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,200:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,203:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,207:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,209:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,212:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,217:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,224:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,232:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,234:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,237:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,252:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,258:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,266:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,269:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,273:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,274:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,278:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,281:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,283:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,286:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,291:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,297:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,305:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,310:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,315:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,320:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,325:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:29:55,332:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:19,611:INFO:Calculating mean and std
2023-12-05 13:30:19,612:INFO:Creating metrics dataframe
2023-12-05 13:30:19,614:INFO:Finalizing model
2023-12-05 13:30:19,626:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:19,626:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:19,627:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:19,641:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:19,642:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:19,642:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:19,666:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:19,667:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:19,667:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:19,714:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:19,716:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:19,716:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:19,765:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:19,765:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:19,765:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:19,799:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:19,963:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:19,976:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:19,987:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:19,999:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:20,010:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:20,018:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:20,275:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:20,423:INFO:[LightGBM] [Warning] Unknown parameter: html
2023-12-05 13:30:23,563:INFO:Uploading results into container
2023-12-05 13:30:23,564:INFO:Uploading model into container now
2023-12-05 13:30:23,565:INFO:_master_model_container: 1
2023-12-05 13:30:23,565:INFO:_display_container: 2
2023-12-05 13:30:23,566:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               html=False, importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=123, reg_alpha=0.0, reg_lambda=0.0,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0)
2023-12-05 13:30:23,566:INFO:create_model() successfully completed......................................
2023-12-05 13:30:28,077:INFO:PyCaret ClassificationExperiment
2023-12-05 13:30:28,077:INFO:Logging name: clf-default-name
2023-12-05 13:30:28,077:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-05 13:30:28,077:INFO:version 3.0.0
2023-12-05 13:30:28,077:INFO:Initializing setup()
2023-12-05 13:30:28,077:INFO:self.USI: c54b
2023-12-05 13:30:28,077:INFO:self._variable_keys: {'X', 'y', 'y_test', '_available_plots', 'fold_groups_param', 'gpu_n_jobs_param', 'target_param', 'is_multiclass', 'USI', 'logging_param', 'log_plots_param', 'gpu_param', 'pipeline', 'idx', 'X_test', 'X_train', 'n_jobs_param', 'data', 'seed', 'exp_id', 'y_train', 'exp_name_log', '_ml_usecase', 'memory', 'html_param', 'fix_imbalance', 'fold_shuffle_param', 'fold_generator'}
2023-12-05 13:30:28,077:INFO:Checking environment
2023-12-05 13:30:28,077:INFO:python_version: 3.9.13
2023-12-05 13:30:28,077:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-12-05 13:30:28,077:INFO:machine: AMD64
2023-12-05 13:30:28,077:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-05 13:30:28,077:INFO:Memory: svmem(total=33942257664, available=662781952, percent=98.0, used=33279475712, free=662781952)
2023-12-05 13:30:28,077:INFO:Physical Core: 6
2023-12-05 13:30:28,077:INFO:Logical Core: 12
2023-12-05 13:30:28,078:INFO:Checking libraries
2023-12-05 13:30:28,078:INFO:System:
2023-12-05 13:30:28,078:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-12-05 13:30:28,078:INFO:executable: C:\Users\Marcio Rodrigues\anaconda3\python.exe
2023-12-05 13:30:28,078:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-05 13:30:28,078:INFO:PyCaret required dependencies:
2023-12-05 13:30:28,078:INFO:                 pip: 23.3.1
2023-12-05 13:30:28,078:INFO:          setuptools: 63.4.1
2023-12-05 13:30:28,078:INFO:             pycaret: 3.0.0
2023-12-05 13:30:28,078:INFO:             IPython: 7.31.1
2023-12-05 13:30:28,078:INFO:          ipywidgets: 7.6.5
2023-12-05 13:30:28,078:INFO:                tqdm: 4.64.1
2023-12-05 13:30:28,078:INFO:               numpy: 1.24.4
2023-12-05 13:30:28,078:INFO:              pandas: 2.1.3
2023-12-05 13:30:28,078:INFO:              jinja2: 3.1.2
2023-12-05 13:30:28,078:INFO:               scipy: 1.9.1
2023-12-05 13:30:28,078:INFO:              joblib: 1.2.0
2023-12-05 13:30:28,078:INFO:             sklearn: 1.1.2
2023-12-05 13:30:28,078:INFO:                pyod: 1.0.9
2023-12-05 13:30:28,078:INFO:            imblearn: 0.10.1
2023-12-05 13:30:28,078:INFO:   category_encoders: 2.6.0
2023-12-05 13:30:28,078:INFO:            lightgbm: 3.3.5
2023-12-05 13:30:28,078:INFO:               numba: 0.55.1
2023-12-05 13:30:28,078:INFO:            requests: 2.28.1
2023-12-05 13:30:28,078:INFO:          matplotlib: 3.5.2
2023-12-05 13:30:28,078:INFO:          scikitplot: 0.3.7
2023-12-05 13:30:28,078:INFO:         yellowbrick: 1.5
2023-12-05 13:30:28,078:INFO:              plotly: 5.9.0
2023-12-05 13:30:28,078:INFO:             kaleido: 0.2.1
2023-12-05 13:30:28,078:INFO:         statsmodels: 0.13.2
2023-12-05 13:30:28,078:INFO:              sktime: 0.17.2
2023-12-05 13:30:28,078:INFO:               tbats: 1.1.3
2023-12-05 13:30:28,079:INFO:            pmdarima: 2.0.3
2023-12-05 13:30:28,079:INFO:              psutil: 5.9.0
2023-12-05 13:30:28,079:INFO:PyCaret optional dependencies:
2023-12-05 13:30:28,079:INFO:                shap: 0.41.0
2023-12-05 13:30:28,079:INFO:           interpret: Not installed
2023-12-05 13:30:28,079:INFO:                umap: 0.5.4
2023-12-05 13:30:28,079:INFO:    pandas_profiling: Not installed
2023-12-05 13:30:28,079:INFO:  explainerdashboard: Not installed
2023-12-05 13:30:28,079:INFO:             autoviz: Not installed
2023-12-05 13:30:28,079:INFO:           fairlearn: Not installed
2023-12-05 13:30:28,079:INFO:             xgboost: Not installed
2023-12-05 13:30:28,079:INFO:            catboost: Not installed
2023-12-05 13:30:28,079:INFO:              kmodes: Not installed
2023-12-05 13:30:28,079:INFO:             mlxtend: Not installed
2023-12-05 13:30:28,079:INFO:       statsforecast: Not installed
2023-12-05 13:30:28,079:INFO:        tune_sklearn: Not installed
2023-12-05 13:30:28,079:INFO:                 ray: Not installed
2023-12-05 13:30:28,079:INFO:            hyperopt: Not installed
2023-12-05 13:30:28,079:INFO:              optuna: Not installed
2023-12-05 13:30:28,079:INFO:               skopt: Not installed
2023-12-05 13:30:28,080:INFO:              mlflow: Not installed
2023-12-05 13:30:28,080:INFO:              gradio: Not installed
2023-12-05 13:30:28,080:INFO:             fastapi: Not installed
2023-12-05 13:30:28,080:INFO:             uvicorn: Not installed
2023-12-05 13:30:28,080:INFO:              m2cgen: Not installed
2023-12-05 13:30:28,080:INFO:           evidently: Not installed
2023-12-05 13:30:28,080:INFO:               fugue: Not installed
2023-12-05 13:30:28,080:INFO:           streamlit: Not installed
2023-12-05 13:30:28,080:INFO:             prophet: Not installed
2023-12-05 13:30:28,080:INFO:None
2023-12-05 13:30:28,080:INFO:Set up data.
2023-12-05 13:30:28,117:INFO:Set up train/test split.
2023-12-05 13:30:28,138:INFO:Set up index.
2023-12-05 13:30:28,138:INFO:Set up folding strategy.
2023-12-05 13:30:28,139:INFO:Assigning column types.
2023-12-05 13:30:28,146:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-05 13:30:28,198:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 13:30:28,199:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:30:28,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:28,241:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:28,328:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 13:30:28,329:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:30:28,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:28,374:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:28,375:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-05 13:30:28,426:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:30:28,455:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:28,455:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:28,520:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:30:28,563:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:28,563:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:28,564:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-05 13:30:28,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:28,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:28,762:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:28,762:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:28,764:INFO:Preparing preprocessing pipeline...
2023-12-05 13:30:28,766:INFO:Set up simple imputation.
2023-12-05 13:30:28,778:INFO:Set up encoding of ordinal features.
2023-12-05 13:30:28,781:INFO:Set up encoding of categorical features.
2023-12-05 13:30:28,782:INFO:Set up column name cleaning.
2023-12-05 13:30:28,805:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:28,805:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:28,806:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:28,828:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:28,829:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:28,829:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:28,846:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:28,847:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:28,847:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:28,880:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:28,881:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:28,881:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:28,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:28,929:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:28,937:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:28,968:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:29,180:INFO:Finished creating preprocessing pipeline.
2023-12-05 13:30:29,207:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['education-num'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='median',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=LeaveOneOutEncoder(cols=['native-country'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=123,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-05 13:30:29,208:INFO:Creating final display dataframe.
2023-12-05 13:30:29,468:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target       income >50K
2                   Target type            Binary
3           Original data shape       (32561, 14)
4        Transformed data shape       (32561, 64)
5   Transformed train set shape       (22792, 64)
6    Transformed test set shape        (9769, 64)
7              Ordinal features                 1
8              Numeric features                 1
9          Categorical features                 8
10     Rows with missing values             40.7%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation            median
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              c54b
2023-12-05 13:30:29,554:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:29,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:29,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:29,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:30:29,649:INFO:setup() successfully completed in 3.87s...............
2023-12-05 13:30:29,650:INFO:Initializing create_model()
2023-12-05 13:30:29,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000202E4E3BBB0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'html': False})
2023-12-05 13:30:29,650:INFO:Checking exceptions
2023-12-05 13:30:29,652:INFO:Importing libraries
2023-12-05 13:30:29,652:INFO:Copying training dataset
2023-12-05 13:30:29,671:INFO:Defining folds
2023-12-05 13:30:29,671:INFO:Declaring metric variables
2023-12-05 13:30:29,671:INFO:Importing untrained model
2023-12-05 13:30:29,671:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-05 13:30:29,672:INFO:Starting cross validation
2023-12-05 13:30:29,675:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-05 13:30:29,764:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,765:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,765:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,777:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,778:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,778:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,785:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,785:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,785:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,790:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,790:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,790:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,801:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,802:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,802:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,804:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,805:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,805:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,811:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,812:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,812:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,812:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,813:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,817:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,817:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,817:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,825:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,827:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,827:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,830:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,832:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,833:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,834:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,834:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,835:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,839:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,840:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,840:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,841:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,842:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,842:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,847:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,847:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,847:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,852:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,853:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,853:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,854:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,854:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,855:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,859:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,859:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,860:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,865:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,866:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,866:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,869:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,870:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,871:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,874:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,875:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,875:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,879:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,880:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,881:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,881:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,881:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,881:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,889:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,891:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,891:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,895:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,896:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,897:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,905:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,906:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,907:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,908:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,909:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,909:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,911:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,912:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,912:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,919:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,921:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,921:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,930:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:29,937:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,939:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,939:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,940:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:29,955:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:29,958:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:29,962:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,963:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:29,963:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,964:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,971:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:29,974:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:29,974:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:29,976:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:29,976:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:29,980:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:29,985:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:29,988:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:29,992:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:29,999:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:30,007:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,008:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,011:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,015:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:30,021:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,029:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,030:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:30,035:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,036:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,044:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,045:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,045:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:30,058:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,058:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,061:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,064:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:30,068:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,070:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,072:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,073:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,077:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,082:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,084:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,084:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:30,084:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,084:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,084:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,084:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:30,096:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,097:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,100:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,101:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,103:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,103:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,104:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,105:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,108:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,109:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,111:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:30,112:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,113:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,115:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,116:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,116:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,117:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,119:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,125:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:30,125:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,130:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,131:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,134:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,135:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,136:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,136:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,139:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,140:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,143:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,144:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,146:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,146:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:30,147:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,149:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,150:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,151:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,151:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,155:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,157:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:30,158:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,161:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,162:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,162:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,163:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,165:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,166:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,166:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,166:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:30,167:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,170:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,170:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,171:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,172:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,173:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,174:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,175:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,175:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,175:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,178:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,179:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,180:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,182:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,183:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,185:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,185:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,186:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,191:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,192:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,194:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,198:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,199:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,199:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,200:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,202:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,206:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,210:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,211:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,212:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,215:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,219:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,220:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,222:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,224:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,227:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,228:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,228:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,228:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,228:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,233:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,241:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,241:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,243:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,243:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,243:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,243:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,243:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,243:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,257:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,259:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,264:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,264:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,264:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,271:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,272:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,276:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,276:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,276:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,276:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,276:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,276:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,276:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,276:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,291:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,292:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,301:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,301:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,301:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,301:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,301:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,313:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,315:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,315:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,315:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,322:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,330:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,330:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,331:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,338:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,338:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,344:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,348:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,349:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,355:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,355:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,361:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,361:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,370:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,370:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,386:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,389:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,403:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,418:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,435:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,827:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,831:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,840:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,843:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,852:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,855:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,857:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,864:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,867:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,870:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,876:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,878:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,881:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,884:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,886:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,888:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,891:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,892:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,894:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,896:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,902:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,904:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,910:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,916:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,917:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,917:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,918:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,922:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,923:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,932:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,940:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,941:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,941:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,944:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,949:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,955:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,957:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,960:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,964:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,966:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,975:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,978:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,978:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,987:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,992:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:30,994:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:31,003:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:31,039:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:31,502:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:31,527:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:31,571:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:31,591:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:31,618:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:31,626:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:31,671:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:31,678:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:32,687:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:32,687:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:32,688:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:32,701:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:32,701:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:32,701:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:32,716:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:32,716:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:32,716:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:32,731:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:32,732:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:32,732:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:32,747:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:32,757:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:32,793:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:32,807:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:32,811:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:32,813:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:32,816:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:32,816:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:32,822:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:32,823:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:32,826:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:32,828:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:32,831:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:32,836:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:32,954:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:32,955:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:32,955:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:32,983:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:32,984:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:32,986:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:32,995:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:32,996:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:32,996:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:33,017:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,028:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:33,029:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:33,029:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:33,046:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:33,046:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:33,046:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:33,058:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:33,058:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,058:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:33,058:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:33,059:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:33,060:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:33,060:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:33,073:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:33,074:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:33,074:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:33,075:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,079:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,085:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,087:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:33,088:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:33,088:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:33,088:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:33,088:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:33,089:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:33,089:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:33,089:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:33,089:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:33,090:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,094:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,101:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,101:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,117:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,118:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,119:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,120:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:33,121:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:33,121:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:33,122:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,126:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,131:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,137:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,141:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,155:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,164:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,169:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,174:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,178:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,179:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,183:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,183:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,183:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,187:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,188:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,189:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,192:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,197:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,198:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,202:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,204:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,211:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,218:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,224:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,230:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,234:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,240:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,246:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:33,250:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:39,786:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 13:30:39,786:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 13:30:42,201:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:42,201:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:42,201:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:42,219:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:42,221:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:42,221:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:42,232:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:42,232:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:42,232:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:42,237:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:42,237:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:42,237:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:42,258:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:42,259:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:42,259:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:42,263:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:42,263:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:42,264:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:42,302:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:42,303:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:42,303:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:42,303:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:42,304:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:42,304:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:42,345:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:42,345:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:42,357:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,357:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,374:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,375:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,401:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,406:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,432:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:42,435:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,439:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,441:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,445:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,446:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:42,447:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,449:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,451:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,451:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,453:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,457:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,459:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,461:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,461:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,467:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,468:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,473:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,474:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,479:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,482:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,486:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,488:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,492:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,493:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,500:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,508:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,521:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,521:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,521:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,537:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,539:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,539:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,539:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,539:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,539:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,554:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,557:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,887:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,895:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,899:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,899:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,906:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,910:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,913:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,916:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,924:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,927:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,927:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:42,927:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:43,191:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:43,209:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:43,850:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:43,850:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:43,851:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:43,861:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:43,861:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:43,861:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:43,861:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:43,861:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:43,861:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:43,876:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:43,876:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:43,876:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:43,876:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:43,897:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:43,924:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:43,928:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:43,930:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:43,933:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:43,934:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:43,935:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:43,937:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:43,938:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:43,942:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:43,946:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:43,949:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:43,954:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:55,804:INFO:Calculating mean and std
2023-12-05 13:30:55,804:INFO:Creating metrics dataframe
2023-12-05 13:30:55,804:INFO:Finalizing model
2023-12-05 13:30:55,818:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:55,818:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:55,818:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:55,861:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:55,862:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:55,863:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:55,909:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:55,910:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:55,910:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:55,956:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 13:30:55,957:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 13:30:55,957:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 13:30:56,010:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:56,019:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:56,028:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:56,066:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 13:30:56,191:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 13:30:59,518:INFO:Uploading results into container
2023-12-05 13:30:59,518:INFO:Uploading model into container now
2023-12-05 13:30:59,519:INFO:_master_model_container: 1
2023-12-05 13:30:59,519:INFO:_display_container: 2
2023-12-05 13:30:59,519:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               html=False, importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=123, reg_alpha=0.0, reg_lambda=0.0,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0)
2023-12-05 13:30:59,519:INFO:create_model() successfully completed......................................
2023-12-05 13:31:03,737:INFO:PyCaret ClassificationExperiment
2023-12-05 13:31:03,737:INFO:Logging name: clf-default-name
2023-12-05 13:31:03,737:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-05 13:31:03,737:INFO:version 3.0.0
2023-12-05 13:31:03,737:INFO:Initializing setup()
2023-12-05 13:31:03,737:INFO:self.USI: 179e
2023-12-05 13:31:03,737:INFO:self._variable_keys: {'X', 'y', 'y_test', '_available_plots', 'fold_groups_param', 'gpu_n_jobs_param', 'target_param', 'is_multiclass', 'USI', 'logging_param', 'log_plots_param', 'gpu_param', 'pipeline', 'idx', 'X_test', 'X_train', 'n_jobs_param', 'data', 'seed', 'exp_id', 'y_train', 'exp_name_log', '_ml_usecase', 'memory', 'html_param', 'fix_imbalance', 'fold_shuffle_param', 'fold_generator'}
2023-12-05 13:31:03,737:INFO:Checking environment
2023-12-05 13:31:03,737:INFO:python_version: 3.9.13
2023-12-05 13:31:03,738:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-12-05 13:31:03,738:INFO:machine: AMD64
2023-12-05 13:31:03,738:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-05 13:31:03,738:INFO:Memory: svmem(total=33942257664, available=474574848, percent=98.6, used=33467682816, free=474574848)
2023-12-05 13:31:03,738:INFO:Physical Core: 6
2023-12-05 13:31:03,738:INFO:Logical Core: 12
2023-12-05 13:31:03,738:INFO:Checking libraries
2023-12-05 13:31:03,738:INFO:System:
2023-12-05 13:31:03,738:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-12-05 13:31:03,738:INFO:executable: C:\Users\Marcio Rodrigues\anaconda3\python.exe
2023-12-05 13:31:03,738:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-05 13:31:03,738:INFO:PyCaret required dependencies:
2023-12-05 13:31:03,738:INFO:                 pip: 23.3.1
2023-12-05 13:31:03,738:INFO:          setuptools: 63.4.1
2023-12-05 13:31:03,738:INFO:             pycaret: 3.0.0
2023-12-05 13:31:03,738:INFO:             IPython: 7.31.1
2023-12-05 13:31:03,739:INFO:          ipywidgets: 7.6.5
2023-12-05 13:31:03,739:INFO:                tqdm: 4.64.1
2023-12-05 13:31:03,739:INFO:               numpy: 1.24.4
2023-12-05 13:31:03,739:INFO:              pandas: 2.1.3
2023-12-05 13:31:03,739:INFO:              jinja2: 3.1.2
2023-12-05 13:31:03,739:INFO:               scipy: 1.9.1
2023-12-05 13:31:03,739:INFO:              joblib: 1.2.0
2023-12-05 13:31:03,739:INFO:             sklearn: 1.1.2
2023-12-05 13:31:03,739:INFO:                pyod: 1.0.9
2023-12-05 13:31:03,739:INFO:            imblearn: 0.10.1
2023-12-05 13:31:03,739:INFO:   category_encoders: 2.6.0
2023-12-05 13:31:03,739:INFO:            lightgbm: 3.3.5
2023-12-05 13:31:03,739:INFO:               numba: 0.55.1
2023-12-05 13:31:03,739:INFO:            requests: 2.28.1
2023-12-05 13:31:03,739:INFO:          matplotlib: 3.5.2
2023-12-05 13:31:03,739:INFO:          scikitplot: 0.3.7
2023-12-05 13:31:03,739:INFO:         yellowbrick: 1.5
2023-12-05 13:31:03,739:INFO:              plotly: 5.9.0
2023-12-05 13:31:03,739:INFO:             kaleido: 0.2.1
2023-12-05 13:31:03,739:INFO:         statsmodels: 0.13.2
2023-12-05 13:31:03,739:INFO:              sktime: 0.17.2
2023-12-05 13:31:03,739:INFO:               tbats: 1.1.3
2023-12-05 13:31:03,739:INFO:            pmdarima: 2.0.3
2023-12-05 13:31:03,740:INFO:              psutil: 5.9.0
2023-12-05 13:31:03,740:INFO:PyCaret optional dependencies:
2023-12-05 13:31:03,740:INFO:                shap: 0.41.0
2023-12-05 13:31:03,740:INFO:           interpret: Not installed
2023-12-05 13:31:03,740:INFO:                umap: 0.5.4
2023-12-05 13:31:03,740:INFO:    pandas_profiling: Not installed
2023-12-05 13:31:03,740:INFO:  explainerdashboard: Not installed
2023-12-05 13:31:03,740:INFO:             autoviz: Not installed
2023-12-05 13:31:03,740:INFO:           fairlearn: Not installed
2023-12-05 13:31:03,740:INFO:             xgboost: Not installed
2023-12-05 13:31:03,740:INFO:            catboost: Not installed
2023-12-05 13:31:03,740:INFO:              kmodes: Not installed
2023-12-05 13:31:03,740:INFO:             mlxtend: Not installed
2023-12-05 13:31:03,740:INFO:       statsforecast: Not installed
2023-12-05 13:31:03,740:INFO:        tune_sklearn: Not installed
2023-12-05 13:31:03,740:INFO:                 ray: Not installed
2023-12-05 13:31:03,740:INFO:            hyperopt: Not installed
2023-12-05 13:31:03,740:INFO:              optuna: Not installed
2023-12-05 13:31:03,740:INFO:               skopt: Not installed
2023-12-05 13:31:03,740:INFO:              mlflow: Not installed
2023-12-05 13:31:03,740:INFO:              gradio: Not installed
2023-12-05 13:31:03,740:INFO:             fastapi: Not installed
2023-12-05 13:31:03,740:INFO:             uvicorn: Not installed
2023-12-05 13:31:03,740:INFO:              m2cgen: Not installed
2023-12-05 13:31:03,740:INFO:           evidently: Not installed
2023-12-05 13:31:03,740:INFO:               fugue: Not installed
2023-12-05 13:31:03,740:INFO:           streamlit: Not installed
2023-12-05 13:31:03,740:INFO:             prophet: Not installed
2023-12-05 13:31:03,740:INFO:None
2023-12-05 13:31:03,740:INFO:Set up data.
2023-12-05 13:31:03,781:INFO:Set up train/test split.
2023-12-05 13:31:03,802:INFO:Set up index.
2023-12-05 13:31:03,803:INFO:Set up folding strategy.
2023-12-05 13:31:03,803:INFO:Assigning column types.
2023-12-05 13:31:03,812:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-05 13:31:03,880:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 13:31:03,880:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:31:03,910:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:31:03,910:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:31:03,975:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 13:31:03,977:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:31:04,010:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:31:04,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:31:04,011:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-05 13:31:04,062:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:31:04,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:31:04,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:31:04,147:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 13:31:04,179:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:31:04,179:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:31:04,181:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-05 13:31:04,263:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:31:04,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:31:04,349:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:31:04,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 13:31:04,351:INFO:Preparing preprocessing pipeline...
2023-12-05 13:31:04,353:INFO:Set up simple imputation.
2023-12-05 16:47:26,505:INFO:PyCaret ClassificationExperiment
2023-12-05 16:47:26,505:INFO:Logging name: clf-default-name
2023-12-05 16:47:26,505:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-05 16:47:26,505:INFO:version 3.0.0
2023-12-05 16:47:26,505:INFO:Initializing setup()
2023-12-05 16:47:26,505:INFO:self.USI: 9a1a
2023-12-05 16:47:26,505:INFO:self._variable_keys: {'X', 'y', 'y_test', '_available_plots', 'fold_groups_param', 'gpu_n_jobs_param', 'target_param', 'is_multiclass', 'USI', 'logging_param', 'log_plots_param', 'gpu_param', 'pipeline', 'idx', 'X_test', 'X_train', 'n_jobs_param', 'data', 'seed', 'exp_id', 'y_train', 'exp_name_log', '_ml_usecase', 'memory', 'html_param', 'fix_imbalance', 'fold_shuffle_param', 'fold_generator'}
2023-12-05 16:47:26,505:INFO:Checking environment
2023-12-05 16:47:26,505:INFO:python_version: 3.9.13
2023-12-05 16:47:26,505:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-12-05 16:47:26,505:INFO:machine: AMD64
2023-12-05 16:47:26,505:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-05 16:47:26,505:INFO:Memory: svmem(total=33942257664, available=5493121024, percent=83.8, used=28449136640, free=5493121024)
2023-12-05 16:47:26,505:INFO:Physical Core: 6
2023-12-05 16:47:26,505:INFO:Logical Core: 12
2023-12-05 16:47:26,505:INFO:Checking libraries
2023-12-05 16:47:26,505:INFO:System:
2023-12-05 16:47:26,505:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-12-05 16:47:26,505:INFO:executable: C:\Users\Marcio Rodrigues\anaconda3\python.exe
2023-12-05 16:47:26,505:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-05 16:47:26,505:INFO:PyCaret required dependencies:
2023-12-05 16:47:26,505:INFO:                 pip: 23.3.1
2023-12-05 16:47:26,505:INFO:          setuptools: 63.4.1
2023-12-05 16:47:26,505:INFO:             pycaret: 3.0.0
2023-12-05 16:47:26,505:INFO:             IPython: 7.31.1
2023-12-05 16:47:26,505:INFO:          ipywidgets: 7.6.5
2023-12-05 16:47:26,505:INFO:                tqdm: 4.64.1
2023-12-05 16:47:26,505:INFO:               numpy: 1.24.4
2023-12-05 16:47:26,505:INFO:              pandas: 2.1.3
2023-12-05 16:47:26,505:INFO:              jinja2: 3.1.2
2023-12-05 16:47:26,505:INFO:               scipy: 1.9.1
2023-12-05 16:47:26,505:INFO:              joblib: 1.2.0
2023-12-05 16:47:26,505:INFO:             sklearn: 1.1.2
2023-12-05 16:47:26,505:INFO:                pyod: 1.0.9
2023-12-05 16:47:26,505:INFO:            imblearn: 0.10.1
2023-12-05 16:47:26,505:INFO:   category_encoders: 2.6.0
2023-12-05 16:47:26,505:INFO:            lightgbm: 3.3.5
2023-12-05 16:47:26,505:INFO:               numba: 0.55.1
2023-12-05 16:47:26,505:INFO:            requests: 2.28.1
2023-12-05 16:47:26,505:INFO:          matplotlib: 3.5.2
2023-12-05 16:47:26,505:INFO:          scikitplot: 0.3.7
2023-12-05 16:47:26,505:INFO:         yellowbrick: 1.5
2023-12-05 16:47:26,505:INFO:              plotly: 5.9.0
2023-12-05 16:47:26,505:INFO:             kaleido: 0.2.1
2023-12-05 16:47:26,505:INFO:         statsmodels: 0.13.2
2023-12-05 16:47:26,505:INFO:              sktime: 0.17.2
2023-12-05 16:47:26,505:INFO:               tbats: 1.1.3
2023-12-05 16:47:26,505:INFO:            pmdarima: 2.0.3
2023-12-05 16:47:26,505:INFO:              psutil: 5.9.0
2023-12-05 16:47:26,505:INFO:PyCaret optional dependencies:
2023-12-05 16:47:26,505:INFO:                shap: 0.41.0
2023-12-05 16:47:26,505:INFO:           interpret: Not installed
2023-12-05 16:47:26,505:INFO:                umap: 0.5.4
2023-12-05 16:47:26,505:INFO:    pandas_profiling: Not installed
2023-12-05 16:47:26,505:INFO:  explainerdashboard: Not installed
2023-12-05 16:47:26,505:INFO:             autoviz: Not installed
2023-12-05 16:47:26,505:INFO:           fairlearn: Not installed
2023-12-05 16:47:26,505:INFO:             xgboost: Not installed
2023-12-05 16:47:26,505:INFO:            catboost: Not installed
2023-12-05 16:47:26,505:INFO:              kmodes: Not installed
2023-12-05 16:47:26,505:INFO:             mlxtend: Not installed
2023-12-05 16:47:26,505:INFO:       statsforecast: Not installed
2023-12-05 16:47:26,505:INFO:        tune_sklearn: Not installed
2023-12-05 16:47:26,505:INFO:                 ray: Not installed
2023-12-05 16:47:26,505:INFO:            hyperopt: Not installed
2023-12-05 16:47:26,505:INFO:              optuna: Not installed
2023-12-05 16:47:26,505:INFO:               skopt: Not installed
2023-12-05 16:47:26,505:INFO:              mlflow: Not installed
2023-12-05 16:47:26,505:INFO:              gradio: Not installed
2023-12-05 16:47:26,505:INFO:             fastapi: Not installed
2023-12-05 16:47:26,505:INFO:             uvicorn: Not installed
2023-12-05 16:47:26,505:INFO:              m2cgen: Not installed
2023-12-05 16:47:26,505:INFO:           evidently: Not installed
2023-12-05 16:47:26,505:INFO:               fugue: Not installed
2023-12-05 16:47:26,505:INFO:           streamlit: Not installed
2023-12-05 16:47:26,505:INFO:             prophet: Not installed
2023-12-05 16:47:26,505:INFO:None
2023-12-05 16:47:26,505:INFO:Set up data.
2023-12-05 16:47:26,546:INFO:Set up train/test split.
2023-12-05 16:47:26,565:INFO:Set up index.
2023-12-05 16:47:26,565:INFO:Set up folding strategy.
2023-12-05 16:47:26,566:INFO:Assigning column types.
2023-12-05 16:47:26,574:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-05 16:47:26,631:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 16:47:26,632:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 16:47:26,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:26,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:26,721:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 16:47:26,721:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 16:47:26,756:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:26,756:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:26,756:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-05 16:47:26,821:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 16:47:26,853:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:26,853:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:26,910:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 16:47:26,944:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:26,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:26,945:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-05 16:47:27,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:27,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:27,114:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:27,114:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:27,130:INFO:Preparing preprocessing pipeline...
2023-12-05 16:47:27,130:INFO:Set up simple imputation.
2023-12-05 16:47:27,149:INFO:Set up encoding of ordinal features.
2023-12-05 16:47:27,152:INFO:Set up encoding of categorical features.
2023-12-05 16:47:27,153:INFO:Set up column name cleaning.
2023-12-05 16:47:27,182:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:47:27,182:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:47:27,182:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:47:27,203:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:47:27,204:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:47:27,204:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:47:27,225:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:47:27,226:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:47:27,226:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:47:27,265:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:47:27,265:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:47:27,265:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:47:27,306:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:47:27,319:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:47:27,329:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:47:27,353:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:47:27,607:INFO:Finished creating preprocessing pipeline.
2023-12-05 16:47:27,633:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['education-num'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=No...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=LeaveOneOutEncoder(cols=['native-country'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=123,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-05 16:47:27,633:INFO:Creating final display dataframe.
2023-12-05 16:47:27,707:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:47:27,707:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:47:27,707:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:47:27,722:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:47:27,722:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:47:27,722:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:47:27,779:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:47:28,139:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:47:28,139:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:47:28,139:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:47:28,151:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:47:28,151:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:47:28,151:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:47:28,196:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:47:28,244:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:47:28,248:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:47:28,253:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:47:28,257:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:47:28,262:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:47:28,266:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:47:28,717:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target       income >50K
2                   Target type            Binary
3           Original data shape       (32561, 14)
4        Transformed data shape       (32561, 64)
5   Transformed train set shape       (22792, 64)
6    Transformed test set shape        (9769, 64)
7              Ordinal features                 1
8              Numeric features                 1
9          Categorical features                 8
10     Rows with missing values             40.7%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              9a1a
2023-12-05 16:47:28,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:28,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:28,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:28,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:47:28,980:INFO:setup() successfully completed in 6.53s...............
2023-12-05 16:47:28,980:INFO:Initializing create_model()
2023-12-05 16:47:28,980:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000202E5545100>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'html': False})
2023-12-05 16:47:28,980:INFO:Checking exceptions
2023-12-05 16:47:28,984:INFO:Importing libraries
2023-12-05 16:47:28,986:INFO:Copying training dataset
2023-12-05 16:47:28,999:INFO:Defining folds
2023-12-05 16:47:28,999:INFO:Declaring metric variables
2023-12-05 16:47:29,000:INFO:Importing untrained model
2023-12-05 16:47:29,000:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-05 16:47:29,000:INFO:Starting cross validation
2023-12-05 16:47:29,004:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-05 16:47:57,941:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 16:47:58,092:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 16:47:58,108:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 16:47:58,108:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 16:47:58,110:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 16:47:58,116:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 16:47:58,127:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 16:47:58,133:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 16:47:58,134:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 16:47:58,139:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 16:48:04,522:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,522:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,522:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,522:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,522:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,523:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,523:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,523:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,523:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,523:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,523:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,523:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,523:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,523:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,524:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,524:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,524:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,541:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,542:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,543:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,543:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,543:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,543:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,546:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,546:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,546:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,546:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,547:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,547:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,547:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,547:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,547:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,547:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,547:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,547:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,547:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,547:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "spar2023-12-05 16:48:04,548:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,548:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,548:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,549:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,553:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,554:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,554:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,567:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,567:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,568:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,568:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

ot is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,568:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,577:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,578:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,579:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,579:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,579:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,580:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,580:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,580:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,580:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,581:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,581:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,581:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,581:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,582:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,582:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,582:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,582:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,585:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,586:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,586:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,586:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,587:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,587:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,593:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,593:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,593:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,594:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,595:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,595:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,662:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,662:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,663:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,663:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,663:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,663:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,666:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,666:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,667:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,667:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,667:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,668:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,669:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,670:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,670:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,670:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,670:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,670:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,671:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,672:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,672:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,672:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,672:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,672:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,672:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,674:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,674:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,675:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:04,676:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:04,676:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:04,757:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:04,757:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:04,757:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:04,757:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:04,757:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:04,757:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:04,757:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:04,757:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:04,758:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:04,761:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:04,763:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,767:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,768:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,768:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,768:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,768:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,768:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,770:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,772:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,777:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,778:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,782:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,783:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,783:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,785:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,785:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,786:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,788:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,829:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,833:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,833:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,834:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,836:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,837:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,838:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,842:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,844:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:04,847:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,005:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,011:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,014:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,016:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,016:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,016:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,016:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,024:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,026:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,026:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,026:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,026:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,026:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,026:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,026:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,026:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,026:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,041:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,041:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,042:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,044:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,044:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,044:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,044:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,044:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,044:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,044:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,044:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,056:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,059:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,059:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,060:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,060:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,060:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,060:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,060:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,060:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,060:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,060:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,072:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,072:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,076:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,076:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,076:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,076:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,076:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,076:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,076:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,076:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,076:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,076:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,090:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,094:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,094:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,094:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,107:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,113:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,145:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:05,860:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:05,863:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:05,864:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:05,871:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:05,879:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:05,883:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:05,891:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:05,960:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:05,982:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:06,299:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,300:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,300:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,312:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,313:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,313:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,318:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,318:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,318:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,318:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,323:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,325:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,327:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,327:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,327:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,327:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,327:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,327:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,338:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,340:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,341:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,353:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,353:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,354:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,354:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,354:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,355:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,356:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,357:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,357:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,363:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,363:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,363:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,363:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,374:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,377:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,377:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,377:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,391:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,392:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,393:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,399:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,406:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,424:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,429:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,429:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,429:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,429:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,429:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,429:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,429:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,442:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,445:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,445:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,445:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,445:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,457:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,458:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,463:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,464:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,467:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,468:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,469:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,471:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,471:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,475:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,480:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,484:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,486:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,491:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,491:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,496:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,499:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,499:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,500:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,503:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,504:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,504:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,506:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,509:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,509:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,511:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,513:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,515:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,516:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,521:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,521:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,526:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,527:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,530:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,532:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,532:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,538:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,538:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,544:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,550:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,558:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,593:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,599:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,605:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,610:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,611:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,611:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,611:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,619:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,625:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,647:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,648:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,648:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,657:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,658:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,659:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,680:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:06,681:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:06,682:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:06,714:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,716:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,776:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,781:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,783:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,786:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,789:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,791:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,793:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,795:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,798:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,800:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,803:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:06,809:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:29,787:INFO:Calculating mean and std
2023-12-05 16:48:29,788:INFO:Creating metrics dataframe
2023-12-05 16:48:29,791:INFO:Finalizing model
2023-12-05 16:48:29,807:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:29,808:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:29,808:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:29,825:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:29,826:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:29,826:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:29,848:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:29,848:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:29,848:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:29,878:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:29,879:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:29,879:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:29,934:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:29,941:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:29,950:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:29,987:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:30,129:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:33,427:INFO:Uploading results into container
2023-12-05 16:48:33,428:INFO:Uploading model into container now
2023-12-05 16:48:33,429:INFO:_master_model_container: 1
2023-12-05 16:48:33,429:INFO:_display_container: 2
2023-12-05 16:48:33,429:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               html=False, importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=123, reg_alpha=0.0, reg_lambda=0.0,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0)
2023-12-05 16:48:33,430:INFO:create_model() successfully completed......................................
2023-12-05 16:48:37,752:INFO:PyCaret ClassificationExperiment
2023-12-05 16:48:37,753:INFO:Logging name: clf-default-name
2023-12-05 16:48:37,753:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-05 16:48:37,753:INFO:version 3.0.0
2023-12-05 16:48:37,753:INFO:Initializing setup()
2023-12-05 16:48:37,753:INFO:self.USI: 5c2b
2023-12-05 16:48:37,753:INFO:self._variable_keys: {'X', 'y', 'y_test', '_available_plots', 'fold_groups_param', 'gpu_n_jobs_param', 'target_param', 'is_multiclass', 'USI', 'logging_param', 'log_plots_param', 'gpu_param', 'pipeline', 'idx', 'X_test', 'X_train', 'n_jobs_param', 'data', 'seed', 'exp_id', 'y_train', 'exp_name_log', '_ml_usecase', 'memory', 'html_param', 'fix_imbalance', 'fold_shuffle_param', 'fold_generator'}
2023-12-05 16:48:37,753:INFO:Checking environment
2023-12-05 16:48:37,753:INFO:python_version: 3.9.13
2023-12-05 16:48:37,753:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-12-05 16:48:37,753:INFO:machine: AMD64
2023-12-05 16:48:37,753:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-05 16:48:37,753:INFO:Memory: svmem(total=33942257664, available=3769495552, percent=88.9, used=30172762112, free=3769495552)
2023-12-05 16:48:37,753:INFO:Physical Core: 6
2023-12-05 16:48:37,753:INFO:Logical Core: 12
2023-12-05 16:48:37,753:INFO:Checking libraries
2023-12-05 16:48:37,753:INFO:System:
2023-12-05 16:48:37,754:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-12-05 16:48:37,754:INFO:executable: C:\Users\Marcio Rodrigues\anaconda3\python.exe
2023-12-05 16:48:37,754:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-05 16:48:37,754:INFO:PyCaret required dependencies:
2023-12-05 16:48:37,754:INFO:                 pip: 23.3.1
2023-12-05 16:48:37,754:INFO:          setuptools: 63.4.1
2023-12-05 16:48:37,754:INFO:             pycaret: 3.0.0
2023-12-05 16:48:37,754:INFO:             IPython: 7.31.1
2023-12-05 16:48:37,754:INFO:          ipywidgets: 7.6.5
2023-12-05 16:48:37,754:INFO:                tqdm: 4.64.1
2023-12-05 16:48:37,754:INFO:               numpy: 1.24.4
2023-12-05 16:48:37,754:INFO:              pandas: 2.1.3
2023-12-05 16:48:37,754:INFO:              jinja2: 3.1.2
2023-12-05 16:48:37,754:INFO:               scipy: 1.9.1
2023-12-05 16:48:37,754:INFO:              joblib: 1.2.0
2023-12-05 16:48:37,754:INFO:             sklearn: 1.1.2
2023-12-05 16:48:37,754:INFO:                pyod: 1.0.9
2023-12-05 16:48:37,754:INFO:            imblearn: 0.10.1
2023-12-05 16:48:37,755:INFO:   category_encoders: 2.6.0
2023-12-05 16:48:37,755:INFO:            lightgbm: 3.3.5
2023-12-05 16:48:37,755:INFO:               numba: 0.55.1
2023-12-05 16:48:37,755:INFO:            requests: 2.28.1
2023-12-05 16:48:37,755:INFO:          matplotlib: 3.5.2
2023-12-05 16:48:37,755:INFO:          scikitplot: 0.3.7
2023-12-05 16:48:37,755:INFO:         yellowbrick: 1.5
2023-12-05 16:48:37,755:INFO:              plotly: 5.9.0
2023-12-05 16:48:37,755:INFO:             kaleido: 0.2.1
2023-12-05 16:48:37,755:INFO:         statsmodels: 0.13.2
2023-12-05 16:48:37,755:INFO:              sktime: 0.17.2
2023-12-05 16:48:37,755:INFO:               tbats: 1.1.3
2023-12-05 16:48:37,755:INFO:            pmdarima: 2.0.3
2023-12-05 16:48:37,755:INFO:              psutil: 5.9.0
2023-12-05 16:48:37,755:INFO:PyCaret optional dependencies:
2023-12-05 16:48:37,755:INFO:                shap: 0.41.0
2023-12-05 16:48:37,755:INFO:           interpret: Not installed
2023-12-05 16:48:37,755:INFO:                umap: 0.5.4
2023-12-05 16:48:37,755:INFO:    pandas_profiling: Not installed
2023-12-05 16:48:37,755:INFO:  explainerdashboard: Not installed
2023-12-05 16:48:37,756:INFO:             autoviz: Not installed
2023-12-05 16:48:37,756:INFO:           fairlearn: Not installed
2023-12-05 16:48:37,756:INFO:             xgboost: Not installed
2023-12-05 16:48:37,756:INFO:            catboost: Not installed
2023-12-05 16:48:37,756:INFO:              kmodes: Not installed
2023-12-05 16:48:37,756:INFO:             mlxtend: Not installed
2023-12-05 16:48:37,756:INFO:       statsforecast: Not installed
2023-12-05 16:48:37,756:INFO:        tune_sklearn: Not installed
2023-12-05 16:48:37,756:INFO:                 ray: Not installed
2023-12-05 16:48:37,756:INFO:            hyperopt: Not installed
2023-12-05 16:48:37,756:INFO:              optuna: Not installed
2023-12-05 16:48:37,756:INFO:               skopt: Not installed
2023-12-05 16:48:37,756:INFO:              mlflow: Not installed
2023-12-05 16:48:37,756:INFO:              gradio: Not installed
2023-12-05 16:48:37,756:INFO:             fastapi: Not installed
2023-12-05 16:48:37,756:INFO:             uvicorn: Not installed
2023-12-05 16:48:37,756:INFO:              m2cgen: Not installed
2023-12-05 16:48:37,756:INFO:           evidently: Not installed
2023-12-05 16:48:37,756:INFO:               fugue: Not installed
2023-12-05 16:48:37,756:INFO:           streamlit: Not installed
2023-12-05 16:48:37,756:INFO:             prophet: Not installed
2023-12-05 16:48:37,757:INFO:None
2023-12-05 16:48:37,757:INFO:Set up data.
2023-12-05 16:48:37,792:INFO:Set up train/test split.
2023-12-05 16:48:37,811:INFO:Set up index.
2023-12-05 16:48:37,811:INFO:Set up folding strategy.
2023-12-05 16:48:37,811:INFO:Assigning column types.
2023-12-05 16:48:37,818:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-05 16:48:37,873:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 16:48:37,874:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 16:48:37,905:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:37,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:37,961:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 16:48:37,962:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 16:48:37,999:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:37,999:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:38,000:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-05 16:48:38,054:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 16:48:38,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:38,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:38,144:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 16:48:38,188:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:38,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:38,189:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-05 16:48:38,291:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:38,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:38,373:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:38,373:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:38,375:INFO:Preparing preprocessing pipeline...
2023-12-05 16:48:38,377:INFO:Set up simple imputation.
2023-12-05 16:48:38,386:INFO:Set up encoding of ordinal features.
2023-12-05 16:48:38,390:INFO:Set up encoding of categorical features.
2023-12-05 16:48:38,391:INFO:Set up column name cleaning.
2023-12-05 16:48:38,411:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:38,411:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:38,412:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:38,427:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:38,427:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:38,427:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:38,445:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:38,446:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:38,446:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:38,478:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:38,479:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:38,479:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:38,522:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:38,527:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:38,534:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:38,561:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:38,759:INFO:Finished creating preprocessing pipeline.
2023-12-05 16:48:38,790:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MARCIO~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['education-num'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='median',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=LeaveOneOutEncoder(cols=['native-country'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=123,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-05 16:48:38,790:INFO:Creating final display dataframe.
2023-12-05 16:48:39,065:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target       income >50K
2                   Target type            Binary
3           Original data shape       (32561, 14)
4        Transformed data shape       (32561, 64)
5   Transformed train set shape       (22792, 64)
6    Transformed test set shape        (9769, 64)
7              Ordinal features                 1
8              Numeric features                 1
9          Categorical features                 8
10     Rows with missing values             40.7%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation            median
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              5c2b
2023-12-05 16:48:39,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:39,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:39,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:39,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:48:39,237:INFO:setup() successfully completed in 3.56s...............
2023-12-05 16:48:39,238:INFO:Initializing create_model()
2023-12-05 16:48:39,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000202E2BC5100>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'html': False})
2023-12-05 16:48:39,239:INFO:Checking exceptions
2023-12-05 16:48:39,240:INFO:Importing libraries
2023-12-05 16:48:39,240:INFO:Copying training dataset
2023-12-05 16:48:39,259:INFO:Defining folds
2023-12-05 16:48:39,259:INFO:Declaring metric variables
2023-12-05 16:48:39,259:INFO:Importing untrained model
2023-12-05 16:48:39,260:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-05 16:48:39,261:INFO:Starting cross validation
2023-12-05 16:48:39,265:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-05 16:48:39,351:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,351:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,351:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,367:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,368:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,368:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,373:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,374:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,374:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,380:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,380:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,381:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,390:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,390:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,390:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,394:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,395:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,395:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,400:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,401:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,401:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,402:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,402:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,410:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,410:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,411:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,419:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,419:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,419:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,420:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,420:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,420:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,422:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,423:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,423:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,432:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,433:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,433:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,434:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,434:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,435:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,437:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,438:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,438:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,445:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,446:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,446:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,448:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,449:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,449:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,450:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,451:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,451:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,454:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,455:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,455:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,459:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,460:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,460:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,462:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,463:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,464:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,468:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,469:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,470:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,472:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,473:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,475:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,475:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,475:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,476:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,487:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,488:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,489:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,491:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,492:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,492:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,498:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,499:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,499:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,502:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,503:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,504:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,512:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,513:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,513:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,517:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:39,528:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,529:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,530:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,530:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,535:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:39,542:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,543:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,544:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,544:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,546:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,558:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:39,559:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:39,560:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:39,560:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:39,560:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,566:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:39,569:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,578:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,579:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:39,583:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,588:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,590:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,591:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,602:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:39,606:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,611:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,611:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,615:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:39,623:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,625:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,629:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:39,630:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,635:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,639:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,641:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,653:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,653:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,667:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,687:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,698:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,740:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,750:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,761:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,763:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,776:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,778:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,781:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,784:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,791:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,792:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,794:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,797:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,799:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,808:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,808:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,808:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,810:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,811:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,815:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,822:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,823:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,824:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,824:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,833:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,841:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,842:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,843:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,846:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,852:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,854:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,860:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,862:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,863:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,864:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,872:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,875:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,881:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,890:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,893:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,897:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,912:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,914:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,915:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,934:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,942:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,974:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:39,977:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:40,022:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:40,522:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:40,535:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:40,540:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:40,567:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:40,589:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:40,620:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:40,625:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:40,633:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:40,881:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:40,882:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:40,882:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:40,907:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:40,910:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:40,910:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:40,929:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:40,930:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:40,930:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:40,935:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:40,938:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:40,938:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:40,939:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:40,939:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:40,940:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:40,946:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:40,946:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:40,947:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:40,954:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:40,955:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:40,955:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:40,963:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:40,964:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:40,964:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:40,968:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:40,969:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:40,969:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:40,970:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:40,970:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:40,971:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:40,973:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:40,974:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:40,974:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:40,975:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:40,976:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:40,976:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:40,976:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:40,977:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:40,977:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:40,978:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:40,988:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:40,990:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:40,992:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:40,994:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:40,996:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:40,997:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:40,997:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:40,997:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:40,998:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:40,999:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:40,999:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:41,002:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:41,002:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,003:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:41,003:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:41,003:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,007:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,011:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,023:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,023:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,024:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,031:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,036:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,041:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,044:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,046:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,046:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,049:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,050:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,051:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,054:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,054:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,055:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,055:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,058:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,059:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,060:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,063:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,063:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,065:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,068:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,068:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,069:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,074:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,076:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,076:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,078:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,080:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,082:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,082:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,084:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,087:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,087:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,090:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,092:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,094:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,096:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,098:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,100:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,102:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,103:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,106:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:41,108:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:47,119:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 16:48:47,125:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\dask\dataframe\_pyarrow_compat.py:17: FutureWarning: Minimal version of pyarrow will soon be increased to 14.0.1. You are using 11.0.0. Please consider upgrading.
  warnings.warn(

2023-12-05 16:48:49,456:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:49,457:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:49,457:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:49,474:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:49,475:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:49,475:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:49,477:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:49,479:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:49,479:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:49,498:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:49,498:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:49,498:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:49,506:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:49,507:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:49,507:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:49,526:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:49,527:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:49,527:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:49,571:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:49,572:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:49,573:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:49,593:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:49,594:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:49,594:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:49,634:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:49,640:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,651:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,651:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:49,662:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,670:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,686:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,702:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,826:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,841:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,849:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,852:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,859:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,863:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,874:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,877:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,883:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,887:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,893:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:49,901:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:50,209:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:50,229:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:48:50,492:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:50,492:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:50,492:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:50,510:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:50,511:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:50,511:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:50,516:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:50,517:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:50,517:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:50,535:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:48:50,536:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:48:50,536:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:48:50,539:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:50,560:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:50,585:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:50,589:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:50,593:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:50,597:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:50,600:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:50,605:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:50,609:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:50,614:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:50,618:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:50,623:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:50,626:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:48:50,629:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:49:02,944:INFO:Calculating mean and std
2023-12-05 16:49:02,945:INFO:Creating metrics dataframe
2023-12-05 16:49:02,948:INFO:Finalizing model
2023-12-05 16:49:02,959:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:49:02,959:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:49:02,959:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:49:02,976:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:49:02,976:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:49:02,976:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:49:02,997:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:49:02,997:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:49:02,998:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:49:03,034:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:757: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if not hasattr(array, "sparse") and array.dtypes.apply(is_sparse).any():

2023-12-05 16:49:03,034:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:595: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype):

2023-12-05 16:49:03,034:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\sklearn\utils\validation.py:604: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(pd_dtype) or not is_extension_array_dtype(pd_dtype):

2023-12-05 16:49:03,089:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:49:03,096:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:49:03,103:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:49:03,134:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:50: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return pd.api.types.is_categorical_dtype(dtype)

2023-12-05 16:49:03,266:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\category_encoders\utils.py:28: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif pd.api.types.is_categorical_dtype(cols):

2023-12-05 16:49:06,741:INFO:Uploading results into container
2023-12-05 16:49:06,741:INFO:Uploading model into container now
2023-12-05 16:49:06,743:INFO:_master_model_container: 1
2023-12-05 16:49:06,743:INFO:_display_container: 2
2023-12-05 16:49:06,743:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               html=False, importance_type='split', learning_rate=0.1,
               max_depth=-1, min_child_samples=20, min_child_weight=0.001,
               min_split_gain=0.0, n_estimators=100, n_jobs=-1, num_leaves=31,
               objective=None, random_state=123, reg_alpha=0.0, reg_lambda=0.0,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0)
2023-12-05 16:49:06,744:INFO:create_model() successfully completed......................................
2023-12-05 16:49:10,964:INFO:PyCaret ClassificationExperiment
2023-12-05 16:49:10,964:INFO:Logging name: clf-default-name
2023-12-05 16:49:10,965:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-05 16:49:10,965:INFO:version 3.0.0
2023-12-05 16:49:10,965:INFO:Initializing setup()
2023-12-05 16:49:10,965:INFO:self.USI: bd76
2023-12-05 16:49:10,965:INFO:self._variable_keys: {'X', 'y', 'y_test', '_available_plots', 'fold_groups_param', 'gpu_n_jobs_param', 'target_param', 'is_multiclass', 'USI', 'logging_param', 'log_plots_param', 'gpu_param', 'pipeline', 'idx', 'X_test', 'X_train', 'n_jobs_param', 'data', 'seed', 'exp_id', 'y_train', 'exp_name_log', '_ml_usecase', 'memory', 'html_param', 'fix_imbalance', 'fold_shuffle_param', 'fold_generator'}
2023-12-05 16:49:10,965:INFO:Checking environment
2023-12-05 16:49:10,965:INFO:python_version: 3.9.13
2023-12-05 16:49:10,966:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-12-05 16:49:10,966:INFO:machine: AMD64
2023-12-05 16:49:10,966:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-05 16:49:10,966:INFO:Memory: svmem(total=33942257664, available=3509071872, percent=89.7, used=30433185792, free=3509071872)
2023-12-05 16:49:10,966:INFO:Physical Core: 6
2023-12-05 16:49:10,966:INFO:Logical Core: 12
2023-12-05 16:49:10,966:INFO:Checking libraries
2023-12-05 16:49:10,966:INFO:System:
2023-12-05 16:49:10,966:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-12-05 16:49:10,966:INFO:executable: C:\Users\Marcio Rodrigues\anaconda3\python.exe
2023-12-05 16:49:10,966:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-05 16:49:10,966:INFO:PyCaret required dependencies:
2023-12-05 16:49:10,966:INFO:                 pip: 23.3.1
2023-12-05 16:49:10,966:INFO:          setuptools: 63.4.1
2023-12-05 16:49:10,966:INFO:             pycaret: 3.0.0
2023-12-05 16:49:10,966:INFO:             IPython: 7.31.1
2023-12-05 16:49:10,966:INFO:          ipywidgets: 7.6.5
2023-12-05 16:49:10,966:INFO:                tqdm: 4.64.1
2023-12-05 16:49:10,966:INFO:               numpy: 1.24.4
2023-12-05 16:49:10,966:INFO:              pandas: 2.1.3
2023-12-05 16:49:10,966:INFO:              jinja2: 3.1.2
2023-12-05 16:49:10,966:INFO:               scipy: 1.9.1
2023-12-05 16:49:10,966:INFO:              joblib: 1.2.0
2023-12-05 16:49:10,966:INFO:             sklearn: 1.1.2
2023-12-05 16:49:10,966:INFO:                pyod: 1.0.9
2023-12-05 16:49:10,966:INFO:            imblearn: 0.10.1
2023-12-05 16:49:10,966:INFO:   category_encoders: 2.6.0
2023-12-05 16:49:10,966:INFO:            lightgbm: 3.3.5
2023-12-05 16:49:10,966:INFO:               numba: 0.55.1
2023-12-05 16:49:10,966:INFO:            requests: 2.28.1
2023-12-05 16:49:10,966:INFO:          matplotlib: 3.5.2
2023-12-05 16:49:10,966:INFO:          scikitplot: 0.3.7
2023-12-05 16:49:10,966:INFO:         yellowbrick: 1.5
2023-12-05 16:49:10,966:INFO:              plotly: 5.9.0
2023-12-05 16:49:10,966:INFO:             kaleido: 0.2.1
2023-12-05 16:49:10,966:INFO:         statsmodels: 0.13.2
2023-12-05 16:49:10,966:INFO:              sktime: 0.17.2
2023-12-05 16:49:10,966:INFO:               tbats: 1.1.3
2023-12-05 16:49:10,966:INFO:            pmdarima: 2.0.3
2023-12-05 16:49:10,966:INFO:              psutil: 5.9.0
2023-12-05 16:49:10,966:INFO:PyCaret optional dependencies:
2023-12-05 16:49:10,966:INFO:                shap: 0.41.0
2023-12-05 16:49:10,966:INFO:           interpret: Not installed
2023-12-05 16:49:10,966:INFO:                umap: 0.5.4
2023-12-05 16:49:10,966:INFO:    pandas_profiling: Not installed
2023-12-05 16:49:10,966:INFO:  explainerdashboard: Not installed
2023-12-05 16:49:10,966:INFO:             autoviz: Not installed
2023-12-05 16:49:10,966:INFO:           fairlearn: Not installed
2023-12-05 16:49:10,966:INFO:             xgboost: Not installed
2023-12-05 16:49:10,966:INFO:            catboost: Not installed
2023-12-05 16:49:10,966:INFO:              kmodes: Not installed
2023-12-05 16:49:10,966:INFO:             mlxtend: Not installed
2023-12-05 16:49:10,966:INFO:       statsforecast: Not installed
2023-12-05 16:49:10,966:INFO:        tune_sklearn: Not installed
2023-12-05 16:49:10,966:INFO:                 ray: Not installed
2023-12-05 16:49:10,966:INFO:            hyperopt: Not installed
2023-12-05 16:49:10,966:INFO:              optuna: Not installed
2023-12-05 16:49:10,966:INFO:               skopt: Not installed
2023-12-05 16:49:10,966:INFO:              mlflow: Not installed
2023-12-05 16:49:10,966:INFO:              gradio: Not installed
2023-12-05 16:49:10,966:INFO:             fastapi: Not installed
2023-12-05 16:49:10,966:INFO:             uvicorn: Not installed
2023-12-05 16:49:10,966:INFO:              m2cgen: Not installed
2023-12-05 16:49:10,966:INFO:           evidently: Not installed
2023-12-05 16:49:10,966:INFO:               fugue: Not installed
2023-12-05 16:49:10,966:INFO:           streamlit: Not installed
2023-12-05 16:49:10,966:INFO:             prophet: Not installed
2023-12-05 16:49:10,966:INFO:None
2023-12-05 16:49:10,966:INFO:Set up data.
2023-12-05 16:49:11,009:INFO:Set up train/test split.
2023-12-05 16:49:11,033:INFO:Set up index.
2023-12-05 16:49:11,033:INFO:Set up folding strategy.
2023-12-05 16:49:11,033:INFO:Assigning column types.
2023-12-05 16:49:11,043:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-05 16:49:11,103:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 16:49:11,104:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 16:49:11,136:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:49:11,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:49:11,195:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-05 16:49:11,197:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 16:49:11,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:49:11,238:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:49:11,238:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-05 16:49:11,313:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 16:49:11,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:49:11,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:49:11,405:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-05 16:49:11,441:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:49:11,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:49:11,441:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-05 16:49:11,535:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:49:11,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:49:11,643:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:49:11,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-05 16:49:11,650:INFO:Preparing preprocessing pipeline...
2023-12-05 16:49:11,653:INFO:Set up simple imputation.
2023-12-05 17:35:16,347:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\MARCIO~1\AppData\Local\Temp\joblib_memmapping_folder_35460_8b43cfd68f0a4c6991715af031019d1b_54ba2bb6962e47f089ac231b8cd4ccaf
  warnings.warn("Failed to delete temporary folder: {}"

2023-12-05 17:35:16,349:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\MARCIO~1\AppData\Local\Temp\joblib_memmapping_folder_35460_19da8e8fdb2f4c16b40bb7b0c6e59244_7108ffec4b0d4475a47695e3e638a79c
  warnings.warn("Failed to delete temporary folder: {}"

2023-12-05 17:35:16,349:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\MARCIO~1\AppData\Local\Temp\joblib_memmapping_folder_35460_8b43cfd68f0a4c6991715af031019d1b_c82cdd2765b146199b0835ec6987e9f2
  warnings.warn("Failed to delete temporary folder: {}"

2023-12-05 17:35:16,349:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\MARCIO~1\AppData\Local\Temp\joblib_memmapping_folder_35460_135adecc587a4466896cab17409487c2_498b1ac82ee948d2b11508589c28c328
  warnings.warn("Failed to delete temporary folder: {}"

2023-12-05 17:35:16,349:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\MARCIO~1\AppData\Local\Temp\joblib_memmapping_folder_35460_8b43cfd68f0a4c6991715af031019d1b_492cd5ba461244119107f2ac6ff7316f
  warnings.warn("Failed to delete temporary folder: {}"

2023-12-05 17:35:16,350:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\MARCIO~1\AppData\Local\Temp\joblib_memmapping_folder_35460_270cbc43a5b344bf936fdab395a5ec35_2d7bdb0f14034bfda5f5b9f7c2c6879d
  warnings.warn("Failed to delete temporary folder: {}"

2023-12-05 17:35:16,350:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\MARCIO~1\AppData\Local\Temp\joblib_memmapping_folder_35460_8b43cfd68f0a4c6991715af031019d1b_ae53edb565004d7598dabd3d1d01f2db
  warnings.warn("Failed to delete temporary folder: {}"

2023-12-05 17:35:16,350:WARNING:C:\Users\Marcio Rodrigues\anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\MARCIO~1\AppData\Local\Temp\joblib_memmapping_folder_35460_8b43cfd68f0a4c6991715af031019d1b_6598314f743e4fe6aba0923170fd82e8
  warnings.warn("Failed to delete temporary folder: {}"

